<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.MemberMapper">

	<select id="selectMemberCntByEmail" parameterType="somap" resultType="int" >
		SELECT  /* MemberMapper.xml - selectMemberCntByEmail 회원 여부조회 */
		       count(*)
		FROM T_MEMBER a
		where email = #{email}
		AND NAME  <![CDATA[<>]]> '탈퇴회원'
		AND USERNO  <![CDATA[<>]]> #{userno}
	</select>

	<resultMap type="somap" id="MemberResult">
		<result property="NOTE" column="NOTE" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<select id="selectMember" parameterType="somap" resultMap="MemberResult" >
		SELECT /* MemberMapper.xml - selectMember 회원정보조회 */
			M.USERNO, U.USERID, U.USERTYPE, U.PWMODDATE, M.STATE,
			M.NAME, M.VIRTUALNO, M.SAFEID, M.GENDER, M.BIRTHDATE, M.ISLUNAR, M.DADAMEMBERTYPE ,
			M.COMPANY, M.BIZNO, M.BIZCONDITION, M.BIZITEM, M.TEL, M.FAX, M.MOBILE,
			M.EMAIL,substring_index(M.EMAIL, '@', 1) AS PREEMAIL ,substring_index(M.EMAIL, '@', -1) AS SUBEMAIL ,
			M.POST, M.ADDR, M.ADDRDETAIL, M.ADDRROAD, M.ADDRDETAILROAD, M.SIGUNGUCODE, M.BUILDINGCODE, M.ROADNAMECODE,
			M.ISADSMS,M.ISADMAILING,M.ISADPUSH,M.ISIFPUSH,M.ISIFSMS,M.ISIFMAILING,
			M.ETC1, M.ETC2, M.ETC3, M.ETC4, M.ETC5, M.ETC6, M.NOTE, M.CHANGESLEEPDATE,M.MEMLVTYPE, M.JOINCHTYPE, M.ENCBIO,M.companytype,
			FN_GET_CODENAME(U.SITEID, 'JOINCHTYPE', M.JOINCHTYPE) AS JOINCHTYPENM,
			FN_GET_CODENAME(U.SITEID, 'MEMLVTYPE', M.MEMLVTYPE) AS MEMLVTYPENM,
			FN_GET_CODENAME(U.SITEID, 'COMPANYTYPE',M.companytype) AS companytypenm,
			(SELECT COUNT(*) FROM T_COMORDER WHERE USERNO = M.USERNO) ORDER_CNT,
			(SELECT group_concat(SNSTYPE) FROM t_member_sns WHERE USERNO = M.USERNO) AS SNSTYPE,
			(SELECT IF(COUNT(*) > 0, 'T', 'F')  FROM T_MEMBER_SNS WHERE USERNO = M.USERNO AND SNSTYPE = 'ULT001') AS ISNAVER,
			(SELECT IF(COUNT(*) > 0, 'T', 'F')  FROM T_MEMBER_SNS WHERE USERNO = M.USERNO AND SNSTYPE = 'ULT002') AS ISKAKAO,
			(SELECT IF(COUNT(*) > 0, 'T', 'F')  FROM T_MEMBER_SNS WHERE USERNO = M.USERNO AND SNSTYPE = 'ULT003') AS ISAPPLE,
			(SELECT APPVERSION FROM T_CONFIG WHERE SITEID = U.SITEID) AS APPVERSION,
			IF(M.ENCBIO IS NULL, 'F', 'T') AS ISBIO,
			withdrawtype, withdrawdate, withdrawreason,
			IF ((
		       SELECT count(*)
			   FROM t_member_sns tms
			   WHERE userno = M.userno
			  )<![CDATA[>]]> 0,'T','F') as issns
		<!-- FN_GET_DECISION_ORDER_PRICE(M.USERNO) AS BUYPRICE -->
		FROM T_MEMBER M
			INNER JOIN T_USER U ON M.USERNO = U.NO
		WHERE M.USERNO = #{userno}
	</select>

	<update id="updateMember" parameterType="somap">
		UPDATE  /* MemberMapper.xml - updateMember 회원정보수정 */
			T_MEMBER SET NOTE = CONCAT('회원 업데이트 : ', DATE_FORMAT(NOW(), '%Y-%m-%d'))
		<if test="name != null and name != ''">
			, NAME = #{name}
		</if>
		<if test="birthdate != null and birthdate != ''">
			, BIRTHDATE = #{birthdate}
		</if>
		<if test="tel != null and tel != ''">
			, TEL = #{tel}
		</if>
		<if test="mobile != null and mobile != ''">
			, MOBILE = #{mobile}
		</if>
		<if test="email != null and email != ''">
			, EMAIL = #{email}
		</if>
		<if test="gender != null and gender != ''">
			, GENDER = #{gender}
		</if>
		<if test="post != null and post != ''">
			, POST = #{post}
		</if>
		<if test="addr != null and addr != ''">
			, ADDR = #{addr}
		</if>
		<if test="addrdetail != null and addrdetail != ''">
			, ADDRDETAIL = #{addrdetail}
		</if>
		<if test="addrroad != null and addrroad != ''">
		    , ADDRROAD    = #{addrroad}
		</if>
		<if test="addrdetailroad != null and addrdetailroad != ''">
		    , ADDRDETAILROAD  = #{addrdetailroad}
		</if>
		<if test="sigungucode != null and sigungucode != ''">
		    , SIGUNGUCODE = #{sigungucode}
		</if>
		<if test="buildingcode != null and buildingcode != ''">
		    , BUILDINGCODE = #{buildingcode}
		</if>
		<if test="roadnamecode != null and roadnamecode != ''">
			, ROADNAMECODE = #{roadnamecode}
		</if>
		<if test="isdomastic != null and isdomastic != ''">
			, ISDOMASTIC = #{isdomastic}
		</if>
		<if test="dadamembertype != null and dadamembertype != ''">
			, DADAMEMBERTYPE = #{dadamembertype}
		</if>
		<if test="memlvtype != null and memlvtype != ''">
			, MEMLVTYPE = #{memlvtype}
		</if>
		<if test="companytype != null and companytype != ''">
			, COMPANYTYPE = #{companytype}
		</if>
		<if test="isifmailing != null and isifmailing != ''">
			, ISIFMAILING = #{isifmailing}, IFEMAILAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="isifsms != null and isifsms != ''">
			, ISIFSMS = #{isifsms}, IFSMSAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="isifpush != null and isifpush != ''">
			, ISIFPUSH = #{isifpush}, IFPUSHAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="isadsms != null and isadsms != ''">
			, ISADSMS = #{isadsms}, ADSMSAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="isadmailing != null and isadmailing != ''">
			, ISADMAILING = #{isadmailing}, ADEMAILAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="isadpush != null and isadpush != ''">
			, ISADPUSH = #{isadpush}, ADPUSHAGREEDATE = CURRENT_TIMESTAMP
		</if>
		<if test="recuserno != null and recuserno != ''">
			, RECUSERNO = #{recuserno}
		</if>
		<if test="encbio != null and encbio != ''">
			, ENCBIO = #{encbio}
		</if>
		<if test="isfulllife != null and isfulllife != ''">
		    , isfulllife = #{isfulllife}
		</if>
		WHERE UserNo=#{userno}
	</update>

	<insert id="insertMember" parameterType="somap">
		INSERT INTO T_MEMBER (	 /* MemberMapper.xml - insertMember 회원정보 등록 */
			USERNO, NAME, MEMBERTYPE, VIRTUALNO, DUPINFO, CONNINFO, SAFEID, GENDER, BIRTHDATE, ISLUNAR,
			COMPANY, BIZNO, BIZCONDITION, BIZITEM,
			TEL, FAX, MOBILE, EMAIL, POST, ADDR, ADDRDETAIL,
			ETC1, ETC2, ETC3, ETC4, ETC5, ETC6, STATE,
		    ISADSMS, ADSMSAGREEDATE, ISADMAILING, ADEMAILAGREEDATE, ISADPUSH, ADPUSHAGREEDATE,
			DADAMEMBERTYPE, JOINTYPE, COMPANYTYPE, ISDOMASTIC, JOINCHTYPE, LASTLOGINDATE, FRSTBUYDATE, LASTBUYDATE,
			ISIFSMS, IFSMSAGREEDATE, ISIFMAILING, IFEMAILAGREEDATE, ISIFPUSH, IFPUSHAGREEDATE, MEMLVTYPE, RECUSERNO, MEMBERNO, DIVAL
		) VALUES (
					 #{userno},
					 #{name, jdbcType=VARCHAR},
					 #{membertype},
					 #{virtualno, jdbcType=VARCHAR},
					 #{dupinfo, jdbcType=VARCHAR},
					 #{conninfo, jdbcType=VARCHAR},
					 #{safeid, jdbcType=VARCHAR},
					 #{gender, jdbcType=VARCHAR},
					 #{birthdate, jdbcType=VARCHAR},
					 #{islunar, jdbcType=VARCHAR},
					 #{company, jdbcType=VARCHAR},
					 #{bizno, jdbcType=VARCHAR},
					 #{bizcondition, jdbcType=VARCHAR},
					 #{bizitem, jdbcType=VARCHAR},
					 #{tel, jdbcType=VARCHAR},
					 #{fax, jdbcType=VARCHAR},
					 #{mobile, jdbcType=VARCHAR},
					 #{email, jdbcType=VARCHAR},
					 #{post, jdbcType=VARCHAR},
					 #{addr, jdbcType=VARCHAR},
					 #{addrdetail, jdbcType=VARCHAR},
					 #{etc1, jdbcType=VARCHAR},
					 #{etc2, jdbcType=VARCHAR},
					 #{etc3, jdbcType=VARCHAR},
					 #{etc4, jdbcType=VARCHAR},
					 #{etc5, jdbcType=VARCHAR},
					 #{etc6, jdbcType=VARCHAR},
					 #{state, jdbcType=VARCHAR},
					 #{isadsms, jdbcType=VARCHAR},
					 IF(#{adsmsagreedate} = 'T', sysdate(), null),
					 #{isadmailing, jdbcType=VARCHAR},
					 IF(#{ademailagreedate} = 'T', sysdate(), null),
					 #{isadpush, jdbcType=VARCHAR},
					 IF(#{adpushagreedate} = 'T', sysdate(), null),
					 #{dadamembertype},
					 #{jointype},
					 #{companytype},
					 #{isdomastic},
					 #{joinchtype},
					 #{lastlogindate},
					 #{frstbuydate},
					 #{lastbuydate},
					 #{isifsms},
					 IF(#{isifsms} = 'T', sysdate(), null),
					 #{isifmailing},
					 IF(#{ifemailagreedate} = 'T', sysdate(), null),
					 #{isifpush},
					 IF(#{ifpushagreedate} = 'T', sysdate(), null),
					 #{memlvtype},
					 #{recuserno},
					 FN_GET_MEMBER_NO(),
					 #{dival}

				 )
	</insert>

	<select id="selectMemberJoinMemberDeleteCount" parameterType="somap" resultType="int" >
		SELECT /* MemberMapper.xml - selectMemberJoinMemberDeleteCount 회원삭제인원수 조회 */
			COUNT(*)
		FROM T_MEMBER M JOIN T_MEMBER_DELETE MD ON M.UserNo=MD.MemberNo
		WHERE M.UserNo=#{userno}
	</select>

	<update id="updateMemberAutoDeleteNull" parameterType="somap">
		UPDATE /* MemberMapper.xml - updateMemberAutoDeleteNull 자동탈퇴 메일,SMS 발송일자 취소, 최근접속일자 */
			T_MEMBER
		SET	  AUTOWITHDRAWEMAILDATE = null
		  , AUTOWITHDRAWSMSDATE = null
		  , LASTLOGINDATE = now()
		WHERE USERNO = #{userno}
	</update>

	<update id="updateMemberState" parameterType="somap">
		UPDATE /* MemberMapper.xml - updateMemberState 회원상태정보 수정 */
			T_MEMBER
		SET	  STATE = #{state}
		WHERE USERNO = #{userno}
	</update>

	<select id="selectIdByNameEmailHp" parameterType="SOMap" resultType="SOMap">
		SELECT /* MemberMapper.xml - selectIdByNameEmailHp 아이디찾기 */
		  U.NO AS USERNO
		, U.USERID
		, M.NAME
		, M.EMAIL
		, M.MOBILE
		, M.JOINCHTYPE
		, DATE_FORMAT(U.REGDATE, '%Y%m%d') AS REGDT
		, DATE_FORMAT(U.REGDATE, '%Y.%m.%d') AS REGDTSTR
		FROM T_USER U
		INNER JOIN T_MEMBER M
		WHERE U.NO = M.USERNO
		AND M.NAME = #{name}
		AND U.SITEID = #{siteid}
		<choose>
			<when test="type == 'EMAIL'">
			AND M.EMAIL = #{emailhp}
			</when>
			<otherwise>
			AND M.MOBILE = #{emailhp}
			</otherwise>
		</choose>
		<if test="userid != null and userid != ''">
			AND U.USERID = #{userid}
		</if>
		AND M.STATE = #{state}
	</select>

	<select id="selectAdminMemberList" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectAdminMemberList 관리자 공통 회원목록 조회 */
			  A.USERNO, A.USERID, A.USERNAME
			, A.DADAMEMBERTYPE, FN_GET_CODENAME(#{siteid}, 'DADAMEMBERTYPE', A.DADAMEMBERTYPE) AS DADAMEMBERTYPENAME, A.MEMLVTYPE, FN_GET_CODENAME(#{siteid}, 'MEMLVTYPE', A.MEMLVTYPE) AS MEMLVTYPENAME
			, A.MOBILE, A.EMAIL, DATE_FORMAT(a.regdate, '%Y-%m-%d') AS REGDATE
		FROM (
			SELECT
				  TU.NO AS USERNO, TU.USERID, TM.NAME AS USERNAME, TM.STATE
				, TM.DADAMEMBERTYPE
				, TM.MEMLVTYPE
				, TM.MOBILE, TM.EMAIL, TU.REGDATE
			FROM T_MEMBER TM
			INNER JOIN T_USER TU ON TM.USERNO = TU.NO
			WHERE TU.SITEID = #{siteid}
		) a
		<where>
			<if test="sword == null or sword == '' ">
				<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
					AND DATEDIFF(a.regdate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
				</if>
				<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
					AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.regdate) <![CDATA[>=]]> 0
				</if>
				<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
					AND a.regdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
				</if>
				<if test='membertypearr != null and membertypearr.size > 0'>
					AND A.DADAMEMBERTYPE IN
					<foreach index="index" collection="membertypearr" item="_idx" open="(" close=")" separator="," >
						#{_idx}
					</foreach>
				</if>
				<if test='memlvtypearr != null and memlvtypearr.size > 0'>
					AND A.MEMLVTYPE IN
					<foreach index="index" collection="memlvtypearr" item="_idx" open="(" close=")" separator="," >
						#{_idx}
					</foreach>
				</if>
			</if>
			<if test="sword != null and sword != '' ">
				<choose>
					<when test="skey == 'id'">
						AND A.USERID LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'name'">
						AND A.USERNAME LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'mobile'">
						AND A.MOBILE LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'email'">
						AND A.EMAIL LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
						AND ( A.USERID LIKE CONCAT('%', #{sword}, '%')
						OR A.USERNAME LIKE CONCAT('%', #{sword}, '%')
						OR A.MOBILE LIKE CONCAT('%', #{sword}, '%')
						OR A.EMAIL LIKE CONCAT('%', #{sword}, '%') )
					</otherwise>
				</choose>
			</if>
			<if test='useridlist != null and useridlist != ""'>
				AND A.USERID IN
				<foreach index="index" collection="useridlist" item="_userid" open="(" close=")" separator="," >
					#{_userid}
				</foreach>
			</if>
			<if test='usernolist != null and usernolist != ""'>
				AND A.USERNO IN
				<foreach index="index" collection="usernolist" item="item" open="(" close=")" separator="," >
					#{item}
				</foreach>
			</if>
			<if test='state != null and state != ""'>
				AND A.STATE = #{state}
			</if>
		</where>
		<choose>
			<when test="psort == 'id_asc'">
				ORDER BY A.USERID ASC, A.USERNO DESC
			</when>
			<when test="psort == 'id_desc'">
				ORDER BY A.USERID DESC, A.USERNO DESC
			</when>
			<when test="psort == 'membertype_asc'">
				ORDER BY A.DADAMEMBERTYPENAME ASC, A.USERNO DESC
			</when>
			<when test="psort == 'membertype_desc'">
				ORDER BY A.DADAMEMBERTYPENAME DESC, A.USERNO DESC
			</when>
			<when test="psort == 'memlvtype_asc'">
				ORDER BY A.MEMLVTYPENAME ASC, A.USERNO DESC
			</when>
			<when test="psort == 'memlvtype_desc'">
				ORDER BY A.MEMLVTYPENAME DESC, A.USERNO DESC
			</when>
			<when test="psort == 'regdate_asc'">
				ORDER BY A.REGDATE ASC, A.USERNO DESC
			</when>
			<when test="psort == 'regdate_desc'">
				ORDER BY A.REGDATE DESC, A.USERNO DESC
			</when>
			<otherwise>
				ORDER BY A.REGDATE DESC, A.USERNO DESC
			</otherwise>
		</choose>
		<if test="startpage != null and !startpage.equals('') and endpage != null and !endpage.equals('')">
		LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectAdminMemberListCount" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectAdminMemberListCount 관리자 공통 회원목록 카운트 조회 */
			  COUNT(*) AS totalcnt
		FROM T_MEMBER TM
		INNER JOIN T_USER TU ON TM.USERNO = TU.NO
		WHERE TU.SITEID = #{siteid}
		<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
			AND DATEDIFF(TU.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
		</if>
		<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
			AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), TU.REGDATE) <![CDATA[>=]]> 0
		</if>
		<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
			AND TU.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
		</if>
		<if test='membertypearr != null and membertypearr.size > 0'>
			AND TM.DADAMEMBERTYPE IN
			<foreach index="index" collection="membertypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		<if test='memlvtypearr != null and memlvtypearr.size > 0'>
			AND TM.MEMLVTYPE IN
			<foreach index="index" collection="memlvtypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		<if test="sword != null and sword != '' ">
			<choose>
				<when test="skey == 'id'">
					AND TU.USERID LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'name'">
					AND TM.NAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'mobile'">
					AND TM.MOBILE LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'email'">
					AND TM.EMAIL LIKE CONCAT('%', #{sword}, '%')
				</when>
				<otherwise>
					AND ( TU.USERID LIKE CONCAT('%', #{sword}, '%')
					OR TM.NAME LIKE CONCAT('%', #{sword}, '%')
					OR TM.MOBILE LIKE CONCAT('%', #{sword}, '%')
					OR TM.EMAIL LIKE CONCAT('%', #{sword}, '%') )
				</otherwise>
			</choose>
		</if>
		<if test='useridlist != null and useridlist != ""'>
			AND TU.USERID IN
			<foreach index="index" collection="useridlist" item="_userid" open="(" close=")" separator="," >
				#{_userid}
			</foreach>
		</if>
		<if test='usernolist != null and usernolist != ""'>
			AND TU.NO IN
			<foreach index="index" collection="usernolist" item="item" open="(" close=")" separator="," >
				#{item}
			</foreach>
		</if>
		<if test='state != null and state != ""'>
			AND TM.STATE = #{state}
		</if>
	</select>

	<select id="selectAdminMemberManageList" parameterType="somap" resultType="somap">
		SELECT
			USERNO, USERID, USERNAME, DADAMEMBERTYPE, MEMLVTYPE, MOBILE, EMAIL, GENDER, JOINTYPE,ISDOMASTIC, ISBLKMEMBER
			, FN_GET_CODENAME('base', 'DADAMEMBERTYPE', T.DADAMEMBERTYPE) AS DADAMEMBERTYPENAME
			, FN_GET_CODENAME('base', 'MEMLVTYPE', T.MEMLVTYPE) AS MEMLVTYPENAME
			, (CASE WHEN T.GENDER = 'M' THEN '남' WHEN T.GENDER = 'F' THEN '여' ELSE '' END) AS GENDERNAME
			, DATE_FORMAT(STR_TO_DATE(T.BIRTHDATE, '%Y%m%d'), '%Y-%m-%d') AS BIRTHDATE
			, FORMAT(FN_GET_MEMBER_POINT(T.USERNO, DATE_FORMAT(CURRENT_TIMESTAMP, '%Y%m%d%H%i'), '1'), 0) AS PAYPOINT
			, FORMAT(FN_GET_MEMBER_POINT(T.USERNO, DATE_FORMAT(CURRENT_TIMESTAMP, '%Y%m%d%H%i'), '3'), 0) AS EPOINT
			, FORMAT(FN_GET_MEMBER_POINT(T.USERNO, DATE_FORMAT(CURRENT_TIMESTAMP, '%Y%m%d%H%i'), '2'), 0) AS EMPPOINT
			, DATE_FORMAT(T.FRSTBUYDATE, '%Y-%m-%d') AS FRSTBUYDATE
			, DATE_FORMAT(T.LASTBUYDATE, '%Y-%m-%d %H:%i:%s') AS LASTBUYDATE
			, DATE_FORMAT(T.LASTLOGINDATE, '%Y-%m-%d %H:%i:%s') AS LASTLOGINDATE
			, DATE_FORMAT(T.REGDATE, '%Y-%m-%d') AS REGDATE
			, (SELECT USERID FROM T_USER WHERE NO = T.RECUSERNO) AS RECUSERID
			, HAVECOUPON
			, FN_GET_ORDER_CLAIM_PROCEEDING_COUNT(USERNO) AS PROCNT
		FROM (
			SELECT /* MemberMapper.xml - selectAdminMemberManageList 관리자 회원관리 회원 목록 조회 */
				B.NO AS USERNO
				, B.USERID
				, A.NAME AS USERNAME
				, A.DADAMEMBERTYPE
				, A.MEMLVTYPE
				, A.MOBILE
				, A.EMAIL
				, A.GENDER
				, A.JOINTYPE
				, A.BIRTHDATE
				, A.ISDOMASTIC
				, A.FRSTBUYDATE
				, A.LASTBUYDATE
				, A.LASTLOGINDATE
				, A.REGDATE
				, A.RECUSERNO
				, A.ISBLKMEMBER
				, C.POS AS HAVECOUPON
			FROM T_MEMBER A	INNER JOIN T_USER B ON A.USERNO = B.NO LEFT OUTER JOIN (
				SELECT
					USERNO, IFNULL(SUM(IF(TCM.USEDATE IS NULL AND CURRENT_TIMESTAMP BETWEEN STR_TO_DATE(CPNUSESTDAY, '%Y%m%d%H%i') AND STR_TO_DATE(CPNUSEEDDAY, '%Y%m%d%H%i'), 1, 0)), 0) AS POS
				FROM T_COMCOUPON_MEMISSUE TCM LEFT OUTER JOIN (
					SELECT SA.COMCPNIDX, SB.CPNINFOIDX, SA.COMCPNNO, SB.CPNNAME, SA.COMCPNTYPE, CPNISSUETYPE, MUAPPCHTYPE, ISPERCENT, DISPERCENT, DISPRICE, ISAUTOPAY, ISTRASH FROM T_COMCOUPON SA INNER JOIN T_COMCOUPON_INFO SB ON SA.COMCPNIDX = SB.COMCPNIDX
				)TCI ON TCM.CPNINFOIDX = TCI.CPNINFOIDX
				WHERE TCI.ISTRASH = 'F'
				AND (IF(ISAUTOPAY = 'F', ISDOWNLOAD = 'T', TRUE))
			GROUP BY USERNO
			)C ON A.USERNO = C.USERNO
			<where>
				AND B.SITEID = #{siteid}
				AND A.STATE = 'MST001'
				<if test='gender != null and gender != ""'>
					AND a.gender = #{gender}
				</if>
				<if test='isdomastic != null and isdomastic != ""'>
					AND a.isdomastic = #{isdomastic}
				</if>
				<if test="sword == null or sword == '' ">
				<choose>
					<when test="sdate != null and sdate =='reg'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
							AND DATEDIFF(a.regdate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
							AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.regdate) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
							AND a.regdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate =='lastlog'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
							AND DATEDIFF(a.lastlogindate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
							AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.lastlogindate) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
							AND a.lastlogindate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate =='lastbuy'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
							AND DATEDIFF(a.lastbuydate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
							AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.lastbuydate) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
							AND a.lastbuydate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate =='first'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
							AND DATEDIFF(a.frstbuydate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
							AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.frstbuydate) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
							AND a.frstbuydate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
						</if>
					</when>
				</choose>
				</if>
				<if test='isallmember != null and isallmember == "F" and membertypearr != null and membertypearr.size > 0'>
					AND A.DADAMEMBERTYPE IN	<foreach index="index" collection="membertypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
				</if>
				<if test='isallmemlv != null and isallmemlv =="F" and memlvtypearr != null and memlvtypearr.size > 0'>
					AND A.MEMLVTYPE IN	<foreach index="index" collection="memlvtypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
				</if>
				<if test='isalljointype != null and isalljointype =="F" and jointypearr != null and jointypearr.size > 0'>
					AND A.JOINTYPE IN <foreach index="index" collection="jointypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
				</if>
				<if test="sword != null and sword != '' ">
					<choose>
						<when test="skey == 'id'">
							AND B.USERID LIKE CONCAT('%', #{sword}, '%')
						</when>
						<when test="skey == 'name'">
							AND A.NAME LIKE CONCAT('%', #{sword}, '%')
						</when>
						<when test="skey == 'mobile'">
							AND A.MOBILE LIKE CONCAT('%', #{sword}, '%')
						</when>
						<when test="skey == 'email'">
							AND A.EMAIL LIKE CONCAT('%', #{sword}, '%')
						</when>
						<otherwise>
							AND ( B.USERID LIKE CONCAT('%', #{sword}, '%')
							OR A.NAME LIKE CONCAT('%', #{sword}, '%')
							OR A.MOBILE LIKE CONCAT('%', #{sword}, '%')
							OR A.EMAIL LIKE CONCAT('%', #{sword}, '%') )
						</otherwise>
					</choose>
				</if>
				<if test='useridlist != null and useridlist != ""'>
					AND B.USERID IN
					<foreach index="index" collection="useridlist" item="item" open="(" close=")" separator="," >
						#{item.userid}
					</foreach>
				</if>
			</where>
			<choose>
				<when test="psort == 'id_asc'">
					ORDER BY B.USERID ASC, A.USERNO DESC
				</when>
				<when test="psort == 'id_desc'">
					ORDER BY B.USERID DESC, A.USERNO DESC
				</when>
				<when test="psort == 'membertype_asc'">
					ORDER BY A.DADAMEMBERTYPE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'membertype_desc'">
					ORDER BY A.DADAMEMBERTYPE DESC, A.USERNO DESC
				</when>
				<when test="psort == 'memlvtype_asc'">
					ORDER BY A.MEMLVTYPE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'memlvtype_desc'">
					ORDER BY A.MEMLVTYPE DESC, A.USERNO DESC
				</when>
				<when test="psort == 'coupon_asc'">
					ORDER BY HAVECOUPON ASC, A.USERNO DESC
				</when>
				<when test="psort == 'coupon_desc'">
					ORDER BY HAVECOUPON DESC, A.USERNO DESC
				</when>
				<when test="psort == 'lastlogindate_asc'">
					ORDER BY A.LASTLOGINDATE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'lastlogindate_desc'">
					ORDER BY A.LASTLOGINDATE DESC, A.USERNO DESC
				</when>
				<when test="psort == 'lastbuydate_asc'">
					ORDER BY A.LASTBUYDATE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'lastbuydate_desc'">
					ORDER BY A.LASTBUYDATE DESC, A.USERNO DESC
				</when>
				<when test="psort == 'frstbuydate_asc'">
					ORDER BY A.FRSTBUYDATE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'frstbuydate_desc'">
					ORDER BY A.FRSTBUYDATE DESC, A.USERNO DESC
				</when>
				<when test="psort == 'regdate_asc'">
					ORDER BY A.REGDATE ASC, A.USERNO DESC
				</when>
				<when test="psort == 'regdate_desc'">
					ORDER BY A.REGDATE DESC, A.USERNO DESC
				</when>
				<otherwise>
					ORDER BY A.REGDATE DESC, A.USERNO DESC
				</otherwise>
			</choose>
			<if test='startpage != null and endpage != null'>
				LIMIT #{startpage}, #{endpage}
			</if>
		)T
	</select>

	<select id="selectAdminMemberManageListCount" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectAdminMemberManageListCount 관리자 회원관리 회원 카운트 조회 */
			  COUNT(*) AS TOTAL
			, SUM(CASE WHEN A.REGDATE BETWEEN CAST(CURRENT_DATE() AS DATETIME) AND DATE_ADD(CURDATE(), INTERVAL 24*60*60 - 1 SECOND) THEN 1 ELSE 0 END) AS TODAY
		FROM T_MEMBER A
		INNER JOIN T_USER B ON A.USERNO = B.NO
		<where>
			AND B.SITEID = #{siteid}
			AND A.STATE = 'MST001'
			<if test='gender != null and gender != ""'>
				AND a.gender = #{gender}
			</if>
			<if test='isdomastic != null and isdomastic != ""'>
				AND a.isdomastic = #{isdomastic}
			</if>
			<if test="sword == null or sword == '' ">
			<choose>
				<when test="sdate != null and sdate =='reg'">
					<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(a.regdate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.regdate) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND a.regdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
					</if>
				</when>
				<when test="sdate != null and sdate =='lastlog'">
					<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(a.lastlogindate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.lastlogindate) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND a.lastlogindate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
					</if>
				</when>
				<when test="sdate != null and sdate =='lastbuy'">
					<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(a.lastbuydate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.lastbuydate) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND a.lastbuydate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
					</if>
				</when>
				<when test="sdate != null and sdate =='first'">
					<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(a.frstbuydate, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), a.frstbuydate) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND a.frstbuydate BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
					</if>
				</when>
			</choose>
			</if>
			<if test='isallmember != null and isallmember == "F" and membertypearr != null and membertypearr.size > 0'>
				AND A.DADAMEMBERTYPE IN	<foreach index="index" collection="membertypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
			</if>
			<if test='isallmemlv != null and isallmemlv =="F" and memlvtypearr != null and memlvtypearr.size > 0'>
				AND A.MEMLVTYPE IN	<foreach index="index" collection="memlvtypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
			</if>
			<if test='isalljointype != null and isalljointype =="F" and jointypearr != null and jointypearr.size > 0'>
				AND A.JOINTYPE IN <foreach index="index" collection="jointypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
			</if>
			<if test="sword != null and sword != '' ">
				<choose>
					<when test="skey == 'id'">
						AND B.USERID LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'name'">
						AND A.NAME LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'mobile'">
						AND A.MOBILE LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'email'">
						AND A.EMAIL LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
						AND ( B.USERID LIKE CONCAT('%', #{sword}, '%')
						OR A.NAME LIKE CONCAT('%', #{sword}, '%')
						OR A.MOBILE LIKE CONCAT('%', #{sword}, '%')
						OR A.EMAIL LIKE CONCAT('%', #{sword}, '%') )
					</otherwise>
				</choose>
			</if>
			<if test='useridlist != null and useridlist != ""'>
				AND B.USERID IN
				<foreach index="index" collection="useridlist" item="item" open="(" close=")" separator="," >
					#{item.userid}
				</foreach>
			</if>
		</where>
	</select>

	<select id="selectMemberResignList" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectMemberResignList 관리자 탈퇴 회원 목록 조회 */
			  B.NO AS USERNO, B.USERID, A.NAME AS USERNAME, DATE_FORMAT(A.WITHDRAWDATE, '%Y-%m-%d %H:%i:%s') AS WITHDRAWDATE
			, A.WITHDRAWREASON, A.WITHDRAWTYPE, FN_GET_CODENAME(#{siteid}, 'WITHDRAWTYPE', A.WITHDRAWTYPE) AS WITHDRAWTYPENAME
			, DATEDIFF(CURRENT_TIMESTAMP , WITHDRAWDATE) AS AFTERDATE
		FROM T_MEMBER A
		INNER JOIN T_USER B ON A.USERNO = B.NO
		<where>
			AND B.SITEID = #{siteid}
			AND A.STATE = 'MST003'
			<if test="sword == null or sword == '' ">
			<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
				AND A.WITHDRAWDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
			</if>
			<if test='iswithdraw != null and iswithdraw == "F" and withdrawtypearr != null and withdrawtypearr.size > 0'>
				AND A.WITHDRAWTYPE IN <foreach index="index" collection="withdrawtypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
			</if>
			</if>
			<if test="sword != null and sword != '' ">
				<choose>
					<when test="skey == 'id'">
						AND B.USERID LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'withdrawreason'">
						AND A.WITHDRAWREASON LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
						AND ( B.USERID LIKE CONCAT('%', #{sword}, '%')
						OR A.WITHDRAWREASON LIKE CONCAT('%', #{sword}, '%'))
					</otherwise>
				</choose>
			</if>
		</where>
		<choose>
			<when test="psort == 'id_asc'">
				ORDER BY B.USERID ASC, A.USERNO DESC
			</when>
			<when test="psort == 'id_desc'">
				ORDER BY B.USERID DESC, A.USERNO DESC
			</when>
			<when test="psort == 'withdraw_asc'">
				ORDER BY A.WITHDRAWDATE ASC, A.USERNO DESC
			</when>
			<when test="psort == 'withdraw_desc'">
				ORDER BY A.WITHDRAWDATE DESC, A.USERNO DESC
			</when>
			<otherwise>
				ORDER BY A.WITHDRAWDATE DESC, A.USERNO DESC
			</otherwise>
		</choose>
		<if test='startpage != null and endpage != null'>
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectMemberResignListCount" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectMemberResignListCount 관리자 탈퇴 회원 목록 카운트 */
			  COUNT(*) AS TOTAL
			, SUM(IF(A.WITHDRAWDATE BETWEEN CAST(CURRENT_DATE() AS DATETIME) AND DATE_ADD(CURDATE(), INTERVAL 24 * 60 * 60 - 1 SECOND), 1, 0)) AS TODAY
		FROM T_MEMBER A
		INNER JOIN T_USER B ON A.USERNO = B.NO
		<where>
			AND B.SITEID = #{siteid}
			AND A.STATE = 'MST003'
			<if test="sword == null or sword == '' ">
				<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
					AND A.WITHDRAWDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
				</if>
			</if>
			<if test='iswithdraw != null and iswithdraw =="F" and withdrawtypearr != null and withdrawtypearr.size > 0'>
				AND A.WITHDRAWTYPE IN <foreach index="index" collection="withdrawtypearr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
			</if>
			<if test="sword != null and sword != '' ">
				<choose>
					<when test="skey == 'id'">
						AND B.USERID LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'withdrawreason'">
						AND A.WITHDRAWREASON LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
						AND ( B.USERID LIKE CONCAT('%', #{sword}, '%')
						OR A.WITHDRAWREASON LIKE CONCAT('%', #{sword}, '%'))
					</otherwise>
				</choose>
			</if>
		</where>
	</select>

	<select id="selectMemberDetailForAdmin" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectMemberDetailForAdmin 관리자 회원 상세 */
			A.USERNO
			 , B.USERID
			 , A.NAME
			 , A.ISBLKMEMBER
		     , DATE_FORMAT(STR_TO_DATE(A.BIRTHDATE, '%Y%m%d'), '%Y-%m-%d') AS BIRTHDATE
			 , A.MOBILE
			 , A.EMAIL
			 , A.GENDER
			 , (IF(A.GENDER = '' OR A.GENDER IS NULL, NULL, IF(A.GENDER = 'M', '남', '여'))) AS GENDERNAME
			 , A.ISDOMASTIC
			 , IF(A.ISDOMASTIC = 'T', '내국인', '외국인') AS ISDOMASTICNAME
		     , A.JOINTYPE
		     , FN_GET_CODENAME(B.SITEID, 'JOINTYPE', A.JOINTYPE) AS JOINTYPENAME
			 , A.JOINCHTYPE
			 , FN_GET_CODENAME(B.SITEID, 'JOINCHTYPE', A.JOINCHTYPE) AS JOINCHTYPENAME
			 , A.CONNINFO
			 , IF(A.CONNINFO = '' OR A.CONNINFO IS NULL, '없음', '있음') AS ISCONNINFO
			 , A.DADAMEMBERTYPE
			 , FN_GET_CODENAME(B.SITEID, 'DADAMEMBERTYPE', A.DADAMEMBERTYPE) AS DADAMEMBERTYPENAME
			 , A.COMPANYTYPE
			 , FN_GET_CODENAME(B.SITEID, 'COMPANYTYPE', A.COMPANYTYPE) AS COMPANYTYPENAME
			 , A.MEMLVTYPE
			 , FN_GET_CODENAME(B.SITEID, 'MEMLVTYPE', A.MEMLVTYPE) AS MEMLVTYPENAME
			 , A.ISIFSMS, A.ISIFMAILING, A.ISIFPUSH
			 , A.ISADSMS, A.ISADMAILING, A.ISADPUSH
			 , C.IDX AS ADDRESSIDX, C.POST, C.ADDR, C.ADDRDETAIL, C.ADDRROAD, C.ADDRDETAILROAD, C.SIGUNGUCODE, C.BUILDINGCODE, C.ROADNAMECODE
			 , DATE_FORMAT(A.REGDATE, '%Y-%m-%d') AS REGDATE
			 , DATE_FORMAT(A.LASTLOGINDATE, '%Y-%m-%d %H:%i:%s') AS LASTLOGINDATE
			 , A.ISMIGRATION
		FROM T_MEMBER A LEFT OUTER JOIN T_USER B ON A.USERNO = B.NO
			LEFT OUTER JOIN (
				SELECT
				   IDX, MEMBERNO, POST, ADDR, ADDRDETAIL, ADDRROAD, ADDRDETAILROAD, SIGUNGUCODE, BUILDINGCODE, ROADNAMECODE
				FROM T_MEMBER_ADDRESS
				WHERE ISDEFAULT = 'T'
				ORDER BY REGDATE DESC
			) C ON A.USERNO = C.MEMBERNO
		WHERE A.USERNO = #{userno}
	</select>

	<update id="updateBlackMember" parameterType="somap">
		UPDATE T_MEMBER SET ISBLKMEMBER = #{isblkmember} /* MemberMapper.xml - updateBlackMember 관리자 블랙 회원 처리 */
		WHERE USERNO = #{userno}
	</update>

	<update id="updateBlackMemberArr" parameterType="somap">
		UPDATE T_MEMBER SET ISBLKMEMBER = 'T' /* MemberMapper.xml - updateBlackMemberArr 관리자 블랙 회원 처리 ARRAY */
		WHERE USERNO IN <foreach index="index" collection="usernoarr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
	</update>

	<update id="updateMemberWithdraw" parameterType="somap">
		UPDATE T_MEMBER SET /* MemberMapper.xml - updateMemberWithdraw 관리자 회원 탈퇴 처리 */
			NAME 		= '탈퇴회원',
			WITHDRAWDATE = CURRENT_TIMESTAMP,
			WITHDRAWREASON = #{withdrawreason},
			WITHDRAWTYPE =  #{withdrawtype},
			STATE 		=  'MST003',
			MEMBERTYPE 	= 0,
			VIRTUALNO 	= NULL,
			DUPINFO 	= NULL,
			SAFEID 		= NULL,
			GENDER 		= NULL,
			BIRTHDATE 	= NULL,
			ISLUNAR 	= NULL,
			COMPANY 	= NULL,
			BIZNO 		= NULL,
			BIZCONDITION = NULL,
			BIZITEM 	= NULL,
			TEL 		= NULL,
			FAX 		= NULL,
			MOBILE 		= NULL,
			EMAIL 		= NULL,
			POST 		= NULL,
			ADDR 		= NULL,
			ADDRDETAIL 	= NULL,
			SIGUNGUCODE 	= NULL,
			BUILDINGCODE 	= NULL,
			ROADNAMECODE 	= NULL,
			ETC1 		= NULL,
			ETC2 		= NULL,
			ETC3 		= NULL,
			ETC4 		= NULL,
			ETC5 		= NULL,
			ETC6 		= NULL,
			NOTE 		= NULL,
			CONNINFO 	= NULL,
			AUTOWITHDRAWEMAILDATE = NULL,
			AUTOWITHDRAWSMSDATE = NULL,
			CHANGESLEEPDATE = NULL,
			SLEEPWITHDRAWEMAILDATE = NULL,
			ISADSMS 	= '',
			ISADMAILING = '',
			ISADPUSH = '',
			ADEMAILAGREEDATE = NULL,
			ADSMSAGREEDATE = NULL,
			ADPUSHAGREEDATE = NULL,
			DADAMEMBERTYPE = '',
			JOINTYPE 	= '',
			COMPANYTYPE = NULL,
			ISDOMASTIC 	= '',
			JOINCHTYPE 	= '',
			LASTLOGINDATE = NULL,
			FRSTBUYDATE = NULL,
			LASTBUYDATE = NULL,
			ISIFSMS 	= '',
			IFSMSAGREEDATE = NULL,
			ISIFMAILING = '',
			IFEMAILAGREEDATE = NULL,
			ISIFPUSH 	= '',
			IFPUSHAGREEDATE = NULL,
			MEMLVTYPE 	= '',
			DIVAL = NULL,
			ENCBIO = NULL,
			WITHDRAWRTYPE = 'WDR010',
			ADDRDETAILROAD = NULL,
			ADDRROAD = NULL,
			ISBLKMEMBER = '',
			ISMAILING = NULL,
			ISSMS = NULL,
			LEVELIDX = 0,
			LEVELMANUAL = 0,
			MEMO = NULL,
			RECUSERNO = NULL
		WHERE USERNO IN <foreach index="index" collection="usernoarr" item="_idx" open="(" close=")" separator="," >#{_idx}</foreach>
	</update>

	<update id="updateMemberOrderDate" parameterType="somap" >
		UPDATE /* MemberMapper.xml - updateMemberOrderDate 회원 구매일자 수정 */
			T_MEMBER
		SET
			  LASTBUYDATE = #{orderdate}
			<if test='isfirst == "T"'>
			, FRSTBUYDATE = #{orderdate}
			</if>
		WHERE USERNO = #{userno}
	</update>

	<select id="selectActiveMemberList" parameterType="somap" resultType="somap" >
		SELECT /* MemberMapper.xml - selectActiveMemberList 활동중인 회원목록 조회 */
			  m.userno			/* 회원일련번호 */
			, m.dadamembertype	/* 다다픽회원유형 */
			, m.memlvtype		/* 회원등급 */
		FROM t_member m
		WHERE m.state = 'MST001'	-- 상태(MST001 : 정상, MST002 : 휴면, MST003 : 탈퇴)
		<if test='mumembertypearr != null and mumembertypearr.size > 0'>
		AND m.dadamembertype IN		/* 회원유형 */
			<foreach index="index" collection="mumembertypearr" item="_item" open="(" close=")" separator="," >
				#{_item}
			</foreach>
		</if>
		<if test='mumemlvtypearr != null and mumemlvtypearr.size > 0'>
		AND m.memlvtype IN			/* 회원등급 */
			<foreach index="index" collection="mumemlvtypearr" item="_item" open="(" close=")" separator="," >
				#{_item}
			</foreach>
		</if>
	</select>

	<select id="selectMemberEtcInfo" parameterType="somap" resultType="somap" >
		SELECT	/* 회원기타정보 */
			  m.userno
			, FN_GET_MEMBER_POINT(m.userno, date_format(sysdate(),'%Y%m%d%H%i'), '1') as respoint
			, FN_GET_MEMBER_POINT(m.userno, date_format(sysdate(),'%Y%m%d%H%i'), '2') as emppoint
			, FN_GET_MEMBER_POINT(m.userno, date_format(sysdate(),'%Y%m%d%H%i'), '3') as epoint
			, IFNULL(u.couponcnt, 0) as couponcnt
		FROM t_member M
		LEFT OUTER JOIN (
        	SELECT
        		  a.userno
            	, count(*) as couponcnt
			FROM t_comcoupon_memissue a
			INNER JOIN t_comcoupon_info b
			ON a.cpninfoidx = b.cpninfoidx
			INNER JOIN t_comcoupon c
			ON b.comcpnidx = c.comcpnidx
			AND c.ISTRASH = 'F'
			WHERE a.userno = #{userno}
			AND a.usedate IS NULL
			AND A.ISTRASH = 'F'
			AND date_format(sysdate(), '%Y%m%d%H%i') BETWEEN a.cpnusestday AND a.cpnuseedday
			AND a.isdownload = 'T'
			AND NOT EXISTS (
				SELECT COMCPNIDX
				FROM t_comcoupon sub1 WHERE sub1.COMCPNIDX  = c.COMCPNIDX
				AND sub1.COMCPNTYPE = 'CCT001'    -- 상품쿠폰
				AND SUB1.CPNISSUETYPE = 'CIT001'  -- 즉시할인
				AND SUB1.ISAUTOPAY = 'T'          -- 자동지급
			)
		) U ON m.USERNO  = u.userno
		WHERE M.userno = #{userno}
	</select>

	<select id="selectMemberInfoByUserNo" parameterType="somap" resultType="somap">
		SELECT /* selectMemberInfoByUserNo 회원정보 조회 */
		       a.userno
		     , a.name
		     , a.mobile
		     , b.userid
		     , a.email
		     , a.dadamembertype
		     , a.memlvtype
		     , concat(a.name, ' (', b.userid, ')') AS fullname
		     , (select count(*) from t_member_recom where RECUSERNO = a.userno) as recusercnt -- 자신이 추천한 인원수
		FROM t_member a JOIN t_user b ON a.userno = b.no
		WHERE 1 = 1
		  <if test="userno != null and userno > 0">
		  	   AND b.no = #{userno}
		  </if>
		  <if test="userid != null and userid != ''">
			  AND b.userid = #{userid}
		  </if>
	</select>

	<select id="selectNewMemberStatsByDay" parameterType="somap" resultType="somap">
		SELECT
			A.DATE AS JOINDATE
			 , IFNULL(TOTAL, 0) AS TOTAL
			 , IFNULL(PC, 0) AS PC
			 , IFNULL(MOBILE, 0) AS MOBILE
			 , IFNULL(APP, 0) AS APP
			 , IFNULL(OTHER, 0) AS OTHER
		FROM (
			WITH RECURSIVE DATES AS (
				SELECT #{startdate} AS DT
				UNION
				SELECT DATE_ADD(DATES.DT, INTERVAL 1 DAY) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 DAY) <![CDATA[<=]]> #{enddate}
			)
			SELECT DATES.DT AS DATE
			FROM DATES
		)A LEFT OUTER JOIN (
			SELECT
				DATE(A.REGDATE) AS JOINDATE
				 , COUNT(CASE WHEN STATE = 'MST001' THEN 1 END) AS TOTAL
				 , COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END) AS PC
				 , COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END) AS MOBILE
				 , COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END) AS APP
				 , COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
			FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
			WHERE SITEID = #{siteid}
			  AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
			GROUP BY JOINDATE
		)B ON A.DATE = B.JOINDATE
		<choose>
			<when test="psort == 'date_asc'">
				ORDER BY JOINDATE ASC
			</when>
			<when test="psort == 'date_desc'">
				ORDER BY JOINDATE DESC
			</when>
			<when test="psort == 'total_asc'">
				ORDER BY TOTAL ASC
			</when>
			<when test="psort == 'total_desc'">
				ORDER BY TOTAL DESC
			</when>
			<when test="psort == 'pc_asc'">
				ORDER BY PC ASC
			</when>
			<when test="psort == 'pc_desc'">
				ORDER BY PC DESC
			</when>
			<when test="psort == 'mobile_asc'">
				ORDER BY MOBILE ASC
			</when>
			<when test="psort == 'mobile_desc'">
				ORDER BY MOBILE DESC
			</when>
			<when test="psort == 'app_asc'">
				ORDER BY APP ASC
			</when>
			<when test="psort == 'app_desc'">
				ORDER BY APP DESC
			</when>
			<otherwise>
				ORDER BY JOINDATE DESC
			</otherwise>
		</choose>
		<if test='startpage != null and endpage != null'>
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectNewMemberStatsByDayCount" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectNewMemberStatsByDayCount 일별 신규회원 통계 카운트*/
			SUM(1) AS CNT,
			SUM(TOTAL) AS TOTAL,
		    SUM(PC) AS PC,
			SUM(MOBILE) AS MOBILE,
			SUM(APP) AS APP,
			SUM(OTHER) AS OTHER
		FROM (
				 SELECT
					 A.DATE AS JOINDATE
					  , IFNULL(TOTAL, 0) AS TOTAL
					  , IFNULL(PC, 0) AS PC
					  , IFNULL(MOBILE, 0) AS MOBILE
					  , IFNULL(APP, 0) AS APP
					  , IFNULL(OTHER, 0) AS OTHER
				 FROM (
					 WITH RECURSIVE DATES AS (
						 SELECT #{startdate} AS DT
						 UNION
						 SELECT DATE_ADD(DATES.DT, INTERVAL 1 DAY) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 DAY) <![CDATA[<=]]> #{enddate}
					 )
					 SELECT DATES.DT AS DATE
					 FROM DATES
				 )A LEFT OUTER JOIN (
					 SELECT
						 DATE(A.REGDATE) AS JOINDATE
					, COUNT(CASE WHEN STATE = 'MST001' THEN 1 END) AS TOTAL
					, COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END) AS PC
					, COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END) AS MOBILE
					, COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END) AS APP
					, COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
					 FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
				 WHERE SITEID = #{siteid}
				   AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
				 GROUP BY JOINDATE
			 )B ON A.DATE = B.JOINDATE
		)T
	</select>

	<select id="selectNewMemberStatsByWeek" parameterType="somap" resultType="somap">
		SELECT
			A.WEEK
			, CONCAT((SELECT STR_TO_DATE(CONCAT(A.WEEK,' Sunday'), '%X%V %W')), ' - ', (SELECT DATE_ADD(STR_TO_DATE(CONCAT(A.WEEK,' Sunday'), '%X%V %W'), INTERVAL 6 DAY))) AS JOINDATE
			, IFNULL(B.TOTAL, 0) AS TOTAL
			, IFNULL(B.PC, 0) AS PC
			, IFNULL(B.MOBILE, 0) AS MOBILE
			, IFNULL(B.APP, 0) AS APP
			, IFNULL(B.OTHER, 0) AS OTHER
		FROM (
			WITH RECURSIVE DATES AS (
				SELECT #{startdate} AS DT
				UNION
				SELECT DATE_ADD(DATES.DT, INTERVAL 1 WEEK) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 WEEK) <![CDATA[<=]]> STR_TO_DATE(CONCAT(YEARWEEK(STR_TO_DATE(#{enddate}, '%Y-%m-%d')),'Saturday'), '%X%V %W')
			)
			SELECT YEARWEEK(DATES.DT) AS WEEK
			FROM DATES
		)A LEFT OUTER JOIN (
			SELECT YEARWEEK(A.REGDATE)                                                                                  AS WEEK
				 , COUNT(CASE WHEN STATE = 'MST001' THEN 1 END)                                                       AS TOTAL
				 , COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END)                               AS PC
				 , COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END)                               AS MOBILE
				 , COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END)                               AS APP
				 , COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
			FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
			WHERE SITEID = #{siteid}
			  AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
			GROUP BY YEARWEEK(A.REGDATE)
		)B ON A.WEEK = B.WEEK
		<choose>
			<when test="psort == 'date_asc'">
				ORDER BY JOINDATE ASC
			</when>
			<when test="psort == 'date_desc'">
				ORDER BY JOINDATE DESC
			</when>
			<when test="psort == 'total_asc'">
				ORDER BY TOTAL ASC
			</when>
			<when test="psort == 'total_desc'">
				ORDER BY TOTAL DESC
			</when>
			<when test="psort == 'pc_asc'">
				ORDER BY PC ASC
			</when>
			<when test="psort == 'pc_desc'">
				ORDER BY PC DESC
			</when>
			<when test="psort == 'mobile_asc'">
				ORDER BY MOBILE ASC
			</when>
			<when test="psort == 'mobile_desc'">
				ORDER BY MOBILE DESC
			</when>
			<when test="psort == 'app_asc'">
				ORDER BY APP ASC
			</when>
			<when test="psort == 'app_desc'">
				ORDER BY APP DESC
			</when>
			<otherwise>
				ORDER BY JOINDATE DESC
			</otherwise>
		</choose>
		<if test='startpage != null and endpage != null'>
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectNewMemberStatsByWeekCount" parameterType="somap" resultType="somap">
		SELECT  /* MemberMapper.xml - selectNewMemberStatsByWeekCount 주별 신규회원 통계 카운트 */
			SUM(1) AS CNT,
			SUM(TOTAL) AS TOTAL,
			SUM(PC) AS PC,
			SUM(MOBILE) AS MOBILE,
			SUM(APP) AS APP,
			SUM(OTHER) AS OTHER
		FROM (
			SELECT
				A.WEEK
				, CONCAT((SELECT STR_TO_DATE(CONCAT(A.WEEK,' Sunday'), '%X%V %W')), ' - ', (SELECT DATE_ADD(STR_TO_DATE(CONCAT(A.WEEK,' Sunday'), '%X%V %W'), INTERVAL 6 DAY))) AS JOINDATE
				, IFNULL(B.TOTAL, 0) AS TOTAL
				, IFNULL(B.PC, 0) AS PC
				, IFNULL(B.MOBILE, 0) AS MOBILE
				, IFNULL(B.APP, 0) AS APP
				, IFNULL(B.OTHER, 0) AS OTHER
			FROM (
				WITH RECURSIVE DATES AS (
					SELECT #{startdate} AS DT
					UNION
					SELECT DATE_ADD(DATES.DT, INTERVAL 1 WEEK) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 WEEK) <![CDATA[<=]]> STR_TO_DATE(CONCAT(YEARWEEK(STR_TO_DATE(#{enddate}, '%Y-%m-%d')),'Saturday'), '%X%V %W')
				)
				SELECT YEARWEEK(DATES.DT) AS WEEK
				FROM DATES
			)A LEFT OUTER JOIN (
				SELECT YEARWEEK(A.REGDATE)                                                                                  AS WEEK
					 , COUNT(CASE WHEN STATE = 'MST001' THEN 1 END)                                                       AS TOTAL
					 , COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END)                               AS PC
					 , COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END)                               AS MOBILE
					 , COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END)                               AS APP
					 , COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
				FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
				WHERE SITEID = #{siteid}
				  AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
				GROUP BY YEARWEEK(A.REGDATE)
			)B ON A.WEEK = B.WEEK
		)T
	</select>

	<select id="selectNewMemberStatsByMonth" parameterType="somap" resultType="somap">
		SELECT
			A.MONTH AS JOINDATE
			, IFNULL(B.TOTAL, 0) AS TOTAL
			, IFNULL(B.PC, 0) AS PC
			, IFNULL(B.MOBILE, 0) AS MOBILE
			, IFNULL(B.APP, 0) AS APP
			, IFNULL(B.OTHER, 0) AS OTHER
		FROM (
			WITH RECURSIVE DATES AS (
				SELECT #{startdate} AS DT
				UNION
				SELECT DATE_ADD(DATES.DT, INTERVAL 1 MONTH) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 MONTH) <![CDATA[<=]]> #{enddate}
			)
			SELECT DATE_FORMAT(DATES.DT, '%Y-%m') AS MONTH
			FROM DATES
		)A LEFT OUTER JOIN (
			SELECT
				DATE_FORMAT(A.REGDATE, '%Y-%m') AS JOINDATE
				 , COUNT(CASE WHEN STATE = 'MST001' THEN 1 END) AS TOTAL
				 , COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END) AS PC
				 , COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END) AS MOBILE
				 , COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END) AS APP
				 , COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
			FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
			WHERE SITEID = #{siteid}
			AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
			GROUP BY JOINDATE
		)B ON A.MONTH = B.JOINDATE
		<choose>
			<when test="psort == 'date_asc'">
				ORDER BY JOINDATE ASC
			</when>
			<when test="psort == 'date_desc'">
				ORDER BY JOINDATE DESC
			</when>
			<when test="psort == 'total_asc'">
				ORDER BY TOTAL ASC
			</when>
			<when test="psort == 'total_desc'">
				ORDER BY TOTAL DESC
			</when>
			<when test="psort == 'pc_asc'">
				ORDER BY PC ASC
			</when>
			<when test="psort == 'pc_desc'">
				ORDER BY PC DESC
			</when>
			<when test="psort == 'mobile_asc'">
				ORDER BY MOBILE ASC
			</when>
			<when test="psort == 'mobile_desc'">
				ORDER BY MOBILE DESC
			</when>
			<when test="psort == 'app_asc'">
				ORDER BY APP ASC
			</when>
			<when test="psort == 'app_desc'">
				ORDER BY APP DESC
			</when>
			<otherwise>
				ORDER BY JOINDATE DESC
			</otherwise>
		</choose>
		<if test='startpage != null and endpage != null'>
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectNewMemberStatsByMonthCount" parameterType="somap" resultType="somap">
		SELECT /* MemberMapper.xml - selectNewMemberStatsByMonthCount 월별 신규회원 통계 카운트 */
			SUM(1) AS CNT,
			SUM(TOTAL) AS TOTAL,
			SUM(PC) AS PC,
			SUM(MOBILE) AS MOBILE,
			SUM(APP) AS APP,
			SUM(OTHER) AS OTHER
		FROM (
			 SELECT
				 A.MONTH AS JOINDATE
				  , IFNULL(B.TOTAL, 0) AS TOTAL
				  , IFNULL(B.PC, 0) AS PC
				  , IFNULL(B.MOBILE, 0) AS MOBILE
				  , IFNULL(B.APP, 0) AS APP
				  , IFNULL(B.OTHER, 0) AS OTHER
			 FROM (
					  WITH RECURSIVE DATES AS (
						  SELECT #{startdate} AS DT
						  UNION
						  SELECT DATE_ADD(DATES.DT, INTERVAL 1 MONTH) FROM DATES WHERE DATE_ADD(DATES.DT, INTERVAL 1 MONTH) <![CDATA[<=]]> #{enddate}
					  )
					  SELECT DATE_FORMAT(DATES.DT, '%Y-%m') AS MONTH
					  FROM DATES
				  )A LEFT OUTER JOIN (
				 SELECT
					 DATE_FORMAT(A.REGDATE, '%Y-%m') AS JOINDATE
					  , COUNT(CASE WHEN STATE = 'MST001' THEN 1 END) AS TOTAL
					  , COUNT(CASE WHEN JOINTYPE = 'UJT001' AND STATE = 'MST001' THEN 1 END) AS PC
					  , COUNT(CASE WHEN JOINTYPE = 'UJT002' AND STATE = 'MST001' THEN 1 END) AS MOBILE
					  , COUNT(CASE WHEN JOINTYPE = 'UJT003' AND STATE = 'MST001' THEN 1 END) AS APP
					  , COUNT(CASE WHEN JOINTYPE != 'UJT001' AND JOINTYPE != 'UJT002' AND JOINTYPE != 'UJT003' THEN 1 END) AS OTHER
				 FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
				 WHERE SITEID = #{siteid}
				   AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate}, '00:00:00'), '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{enddate}, '23:59:59'), '%Y-%m-%d %H:%i:%s')
				 GROUP BY JOINDATE
			 )B ON A.MONTH = B.JOINDATE
		)T
	</select>

	<select id="selectAdAgreeMemberList" parameterType="somap" resultType="somap">
		SELECT
			USERNO, NAME, ISADSMS, ISADMAILING, EMAIL
			 , IF(ISADSMS = 'T', '동의', '미동의') AS ISADSMSNAME
			 , IF(ISADMAILING = 'T', '동의', '미동의') AS ISADMAILINGNAME
			 , DATE_FORMAT(A.ADSMSAGREEDATE, '%Y.%m.%d') AS ADSMSAGREEDATE
			 , DATE_FORMAT(A.ADEMAILAGREEDATE, '%Y.%m.%d') AS ADEMAILAGREEDATE
		FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
		WHERE B.SITEID = #{siteid}
		AND STATE = 'MST001'
	    AND (ISADSMS = 'T' OR ISADMAILING = 'T')
		AND EMAIL IS NOT NULL
		AND EMAIL != ''
		<if test="userid != null and userid != ''">
		AND B.USERID = #{userid}
		</if>
	</select>

	<select id="selectDormancyMemberList" parameterType="somap" resultType="somap">
		SELECT
			C.LOGINDATE, A.USERNO, NAME, MEMBERTYPE, VIRTUALNO, DUPINFO, SAFEID, GENDER, BIRTHDATE, ISLUNAR, COMPANY, BIZNO, BIZCONDITION, BIZITEM, TEL, FAX, MOBILE, IFNULL(EMAIL, '') AS EMAIL, POST, ADDR, ADDRDETAIL, ETC1, ETC2, ETC3, ETC4, ETC5, ETC6, 'MST002', NOTE, CONNINFO, AUTOWITHDRAWEMAILDATE, AUTOWITHDRAWSMSDATE, CURRENT_TIMESTAMP, SLEEPWITHDRAWEMAILDATE, ISADSMS, ISADMAILING, ADEMAILAGREEDATE, ADSMSAGREEDATE, DADAMEMBERTYPE, JOINTYPE, COMPANYTYPE, ISDOMASTIC, JOINCHTYPE, A.LASTLOGINDATE, FRSTBUYDATE, LASTBUYDATE, ISIFSMS, IFSMSAGREEDATE, ISIFMAILING, IFEMAILAGREEDATE, ISIFPUSH, IFPUSHAGREEDATE, MEMLVTYPE, A.REGDATE
			 , DATE_FORMAT(DATE_ADD(C.LOGINDATE, INTERVAL 1 YEAR), '%Y년 %m월 %d일') AS NOTE1
		FROM T_MEMBER A
				 LEFT OUTER JOIN T_USER B ON A.USERNO = B.NO AND B.SITEID = #{siteid}
				 LEFT OUTER JOIN(
			SELECT USERNO,
				   MAX(REGDATE) AS LOGINDATE
			FROM T_USER_LOG
			GROUP BY USERNO
		) C ON A.USERNO = C.USERNO
		WHERE DADAMEMBERTYPE IN ('DMT001', 'DMT003', 'DMT004', 'DMT006', 'DMT007')
		  AND A.STATE = 'MST001'
		  AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -335 DAY), '%Y-%m-%d 00:00:00') = DATE_FORMAT(IFNULL(C.LOGINDATE, A.REGDATE), '%Y-%m-%d 00:00:00')
	</select>

	<select id="selectPersonalInfoMemberList" parameterType="somap" resultType="somap">
		SELECT
			USERNO, NAME, EMAIL
		FROM T_MEMBER A LEFT OUTER JOIN T_USER B ON A.USERNO = B.NO
		WHERE SITEID = #{siteid}
	    AND A.STATE = 'MST001'
	    AND EMAIL IS NOT NULL
		AND EMAIL != ''
	    AND A.ISIFSMS = 'T'
		<if test="userid != null and userid != ''">
		AND B.USERID = #{userid}
		</if>
	</select>

	<select id="selectMemberERPData" parameterType="somap" resultType="somap">
		SELECT
			USERNO, MEMBERNO, NAME, GENDER, BIRTHDATE, ISLUNAR, COMPANY, TEL, MOBILE
			 , EMAIL, POST, ADDR, ADDRDETAIL
			 , CONCAT(SIGUNGUCODE, ROADNAMECODE) AS ROAD_NAME_CODE, BUILDINGCODE AS BD_MGT_NO
		     , ETC1, ETC2, ETC3, ETC4, ETC5, ETC6
			 , STATE, NOTE, CONNINFO, ISADSMS, ISADMAILING, DADAMEMBERTYPE, JOINTYPE, COMPANYTYPE, ISDOMASTIC, JOINCHTYPE
			 , ISIFSMS, ISIFMAILING, ISIFPUSH, MEMLVTYPE, ISBLKMEMBER, ISADPUSH, C.IFLOGIDX, C.AUD_TYPE_CD
			 , DATE_FORMAT(SLEEPWITHDRAWEMAILDATE, '%Y%m%d%H%i%s') AS SLEEPWITHDRAWEMAILDATE
			 , DATE_FORMAT(CHANGESLEEPDATE, '%Y%m%d%H%i%s') AS CHANGESLEEPDATE
			 , DATE_FORMAT(ADSMSAGREEDATE, '%Y%m%d%H%i%s') AS ADSMSAGREEDATE
			 , DATE_FORMAT(ADEMAILAGREEDATE, '%Y%m%d%H%i%s') AS ADEMAILAGREEDATE
			 , DATE_FORMAT(AUTOWITHDRAWEMAILDATE, '%Y%m%d%H%i%s') AS AUTOWITHDRAWEMAILDATE
			 , DATE_FORMAT(AUTOWITHDRAWSMSDATE, '%Y%m%d%H%i%s') AS AUTOWITHDRAWSMSDATE
			 , DATE_FORMAT(LASTLOGINDATE, '%Y%m%d%H%i%s') AS LASTLOGINDATE
			 , DATE_FORMAT(FRSTBUYDATE, '%Y%m%d%H%i%s') AS FRSTBUYDATE
			 , DATE_FORMAT(LASTBUYDATE, '%Y%m%d%H%i%s') AS LASTBUYDATE
			 , DATE_FORMAT(IFSMSAGREEDATE, '%Y%m%d%H%i%s') AS IFSMSAGREEDATE
			 , DATE_FORMAT(IFEMAILAGREEDATE, '%Y%m%d%H%i%s') AS IFEMAILAGREEDATE
			 , DATE_FORMAT(IFPUSHAGREEDATE, '%Y%m%d%H%i%s') AS IFPUSHAGREEDATE
			 , DATE_FORMAT(ADPUSHAGREEDATE, '%Y%m%d%H%i%s') AS ADPUSHAGREEDATE
		FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO INNER JOIN (
				SELECT
					ORGNO, GROUP_CONCAT(IFLOGIDX) AS IFLOGIDX, MIN(REGDATE) AS REGDATE
					 ,AUDDIV AS AUD_TYPE_CD
				FROM T_IFLOG A
				WHERE IFTYPE = 'IFT004'
				AND IFDATE IS NULL
				GROUP BY ORGNO, AUDDIV
			)C ON A.USERNO = C.ORGNO
		AND B.SITEID = #{siteid}
		ORDER BY C.REGDATE
	</select>

	<select id="selectResignMemberERPData" parameterType="somap" resultType="somap">
		SELECT
			USERNO, MEMBERNO, WITHDRAWTYPE, WITHDRAWREASON,	DATE_FORMAT(WITHDRAWDATE, '%Y%m%d%H%i%s') AS WITHDRAWDATE, C.IFLOGIDX
		FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO INNER JOIN (
				SELECT
					ORGNO, GROUP_CONCAT(IFLOGIDX) AS IFLOGIDX, MIN(REGDATE) AS REGDATE
					 ,AUDDIV AS AUD_TYPE_CD
				FROM T_IFLOG A
				WHERE IFTYPE = 'IFT005'
				AND IFDATE IS NULL
				GROUP BY ORGNO, AUDDIV
		    )C ON A.USERNO = C.ORGNO
		AND B.SITEID = #{siteid}
		ORDER BY C.REGDATE
	</select>

	<update id="updateMemberEncBio" parameterType="somap">
		UPDATE T_MEMBER SET ENCBIO = #{encbio} /* MemberMapper.xml - updateEncBio 바이오정보 수정처리 */
		WHERE USERNO = #{userno}
	</update>

	<select id="memberEmailPhone" parameterType="somap" resultType="somap">
	   SELECT /*MemberMapper.xml - memberEmail::회원이메일_휴대폰정보 조회*/
	          EMAIL
	        , USERNO
	        , NAME
	        , MOBILE
	   FROM T_MEMBER
	   WHERE USERNO = #{userno}
	</select>

	<select id="selectMemberDashBoard" parameterType="somap" resultType="somap">
		/*MemberMapper.xml - selectMemberDashBoard */
		SELECT
			CONCAT(DATE_FORMAT(DATE_ADD(CURRENT_TIMESTAMP, INTERVAL -7 DAY), '%Y-%m-%d'), ' ~ ', DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d')) AS PERIOD
			, FORMAT(IFNULL(SUM(IF(STATE IN ('MST001'), 1, 0)), 0), 0) AS TOTAL
			, FORMAT(IFNULL(SUM(IF(STATE IN ('MST001') AND JOINTYPE = 'UJT001', 1, 0)), 0), 0) AS PC
			, FORMAT(IFNULL(SUM(IF(STATE IN ('MST001') AND JOINTYPE = 'UJT002', 1, 0)), 0), 0) AS MOBILE
			, FORMAT(IFNULL(SUM(IF(STATE IN ('MST001') AND JOINTYPE = 'UJT003', 1, 0)), 0), 0) AS MOBILEAPP
			, FORMAT(IFNULL(SUM(IF(STATE = 'MST001' AND DATEDIFF(CURRENT_TIMESTAMP, A.REGDATE) <![CDATA[<=]]> 7, 1, 0)), 0), 0) AS REG
			, FORMAT(IFNULL(SUM(IF(STATE = 'MST002' AND DATEDIFF(CURRENT_TIMESTAMP, CHANGESLEEPDATE) <![CDATA[<=]]> 7, 1, 0)), 0), 0) AS DORMANCY
			, FORMAT(IFNULL(SUM(IF(STATE = 'MST003' AND DATEDIFF(CURRENT_TIMESTAMP, WITHDRAWDATE) <![CDATA[<=]]> 7, 1, 0)), 0), 0) AS RESIGN
		FROM T_MEMBER A INNER JOIN T_USER B ON A.USERNO = B.NO
		WHERE SITEID = #{siteid}
	</select>

	<select id="selectLifetimeCnt" parameterType="somap" resultType="int">
		SELECT /*MemberMapper.xml - selectLifetimeCnt:: 평생회원 보상 지급 여부 확인*/
		      COUNT(*)
		FROM T_MEMBER
		WHERE USERNO = #{userno}
		AND ISFULLLIFE = 'F'
	</select>

	<select id="selectMemberAdInfo" parameterType="somap" resultType="somap">
		select /*selectMemberMapper.xml - selectMemberAdInfo::광고성 수신 정보 조회*/
		       a.no
		     , a.userid
		     , b.isadsms
		     , b.isadmailing
		     , b.dadamembertype
		     , b.memlvtype
		from t_user a
		inner join t_member b on a.no = b.userno
		where userid = #{userid}
	</select>


	<select id="selectMemberInfo" parameterType="String" resultType="somap">
		SELECT   /* MemberMapper.xml - selectMemberInfo 회원 정보 조회 */
			a.userno
			, a.memlvtype
			, a.dadamembertype AS membertype
		FROM t_member a, t_user b
		WHERE a.userno = b.no
		AND b.userid = #{userid}
		AND a.membertype = '1'
	</select>
</mapper>
