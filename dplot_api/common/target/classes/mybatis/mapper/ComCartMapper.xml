<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.ComCartMapper">

	<insert id="insertCart" parameterType="somap" useGeneratedKeys="true" keyProperty="cartidx">
		/* ComCartMapper - insertComCart 장바구니 추가 */
		insert into t_comcart (
			siteid, userno, sessid, goodsno, optioncode, cateidx, ordcnt, isaddgoods, orggoodsno, ordpathtype, istrash, reguserid, regdate
		) values (
			#{siteid}, #{userno}, #{sessid}, #{goodsno}, #{optioncode}, #{cateidx}, #{ordcnt}, #{isaddgoods}, #{orggoodsno}, #{ordpathtype}, 'F', #{userid}, sysdate()
		)		
	</insert>
	
	<select id="selectCartList" parameterType="somap" resultType="somap">
		/* ComCartMapper - selectCartList 장바구니 목록 조회 */
		SELECT
			  t.*
			, FN_GET_FILE_URL(orggoodsno, 'FLT001', #{imgtype}) as fullpath
			, FN_GET_FILE_URL(goodsno, 'FLT001', #{imgtype}) as fullpath2
			, (saleamt * ordcnt) - goodscpnamt as realgoodsamt
		FROM (
			SELECT
			      a.cartidx
			    , a.goodsno
			    , a.orggoodsno
			    , a.optioncode
			    , a.cateidx
			    , a.ordcnt
			    , c.goodsname
			    , c.goodscode
			    , CONCAT_WS(' , ', b.optionnm1, b.optionnm2, b.optionnm3, b.optionnm4) AS fulloptionnm
			    , fullcategoryname
			    , case
			    	when a.isaddgoods = 'F' then c.goodsname 
			    	else o.goodsname 
			      end as orggoodsname
			    , ifnull((SELECT enname FROM t_brand WHERE idx = c.brandidx), '') AS brandname
			    , case when a.isaddgoods = 'F' 
			    	then CONCAT_WS(',', ifnull(b.optionnm1, b.goodsname), if(b.optionnm2 = '', null, b.optionnm2), if(b.optionnm3 = '', null, b.optionnm3), if(b.optionnm4 = '', null, b.optionnm4))
			    	else CONCAT_WS(',', c.goodsname, ifnull(b.optionnm1, b.goodsname), if(b.optionnm2 = '', null, b.optionnm2), if(b.optionnm3 = '', null, b.optionnm3), if(b.optionnm4 = '', null, b.optionnm4)) 
			      end as optionname
			    , FN_GET_OPTION_MARKETPRICE(#{siteid}, a.goodsno, a.optioncode) as marketprice
				, FN_GET_OPTION_PRICE(#{siteid}, a.goodsno, a.optioncode) as price
				, FN_GET_GOODS_SALEPROMOAMT(#{siteid}, a.goodsno, a.optioncode, 0, #{platform}) as saleamt 
				, FN_GET_GOODS_SALECOUPONAMT(#{siteid}, a.goodsno, a.optioncode, 0, #{platform}) as goodscpnamt -- 즉시할인쿠폰할인가
				, FN_GET_GOODS_SALEPROMOAMT(#{siteid}, a.goodsno, e.optioncode, 0, #{platform}) as mainsaleamt 
				, FN_GET_GOODS_SALECOUPONAMT(#{siteid}, a.goodsno, e.optioncode, 0, #{platform}) as maingoodscpnamt -- 즉시할인쿠폰할인가
				, FN_GET_GOODS_SALEPROMO('base', a.goodsno, a.optioncode, 0, #{platform}) as salepromo
				, FN_GET_OPTION_STOCK(#{siteid}, a.goodsno, a.optioncode) as stockcnt
			    , if(c.dealerno is null , 0, c.dealerno) as dealerno
			    , case 
			    	when c.dealerno is null then 'D.PLOT'
			    	else (select name from t_dealer where userno = c.dealerno)
			      end as dealernm
			    , c.delividx
			    , c.iscombdeliv
			    , d.delivtype
			    , FN_GET_CODENAME(#{siteid}, 'DELIVTYPE', d.delivtype) as delivtypename
			    , d.delivfaretype
			    , FN_GET_CODENAME(#{siteid}, 'DELIVFARETYPE', d.delivfaretype) AS delivfaretypename
			    , IFNULL(d.delivfare, 0) as delivfare 			/* 배송비 */
			    , IFNULL(d.chejufare, 0) as chejufare 			/* 제주배송비 */
			    , IFNULL(d.isolfare, 0) as isolfare	 			/* 도서산간배송비 */
			    , IFNULL(d.delivfreefare, 0) as delivfreefare	/* 조건부주문금액 */
			    , a.isaddgoods
			    , a.istrash
			    , c.minordcnt
				, c.maxordcnt
				, c.daymaxordcnt
				, c.permaxordcnt
				, c.goodsselltype
				, FN_GET_ORDER_COUNT(#{siteid}, a.goodsno, #{userno}, 'D') as dayordcnt
				, FN_GET_ORDER_COUNT(#{siteid}, a.goodsno, #{userno}, null) as perordcnt
				, ifnull((select 'T' from t_wish where goodsno = a.goodsno and userno = #{userno} and istrash = 'F'), 'F') as iswished
			FROM t_comcart a
			INNER JOIN t_goods_option_detail b
			ON a.goodsno = b.goodsno
			AND a.optioncode = b.optioncode
			AND b.istrash = 'F'
			INNER JOIN t_goods c
			ON a.goodsno = c.goodsno
			LEFT OUTER JOIN t_goods o
			ON a.orggoodsno = o.goodsno
			LEFT OUTER JOIN t_deliv_template d
			ON c.delividx = d.idx
			LEFT OUTER JOIN t_goods_option_detail e
			ON a.goodsno = e.goodsno
			AND e.ismaingoods = 'T'
			AND e.istrash = 'F'
			LEFT OUTER JOIN (
				WITH CATEGORY AS (
					SELECT IDX, NAME, DEPTH, PARENT
					FROM T_CATEGORY
				)
				SELECT
					 T.CATEIDX, T.DEPTH1IDX, T.DEPTH2IDX, T.DEPTH3IDX, T.DEPTH4IDX, T.FULLCATEGORYNAME
				FROM (
					SELECT
						  A.IDX AS DEPTH1IDX, B.IDX AS DEPTH2IDX, C.IDX AS DEPTH3IDX, D.IDX AS DEPTH4IDX
						, CONCAT_WS(', ', A.NAME, B.NAME, C.NAME, D.NAME) AS FULLCATEGORYNAME
						, (CASE WHEN D.IDX IS NOT NULL THEN D.IDX
								WHEN C.IDX IS NOT NULL THEN C.IDX
								WHEN B.IDX IS NOT NULL THEN B.IDX
								ELSE A.IDX
							END) AS CATEIDX
					FROM CATEGORY A
					LEFT OUTER JOIN CATEGORY B ON A.IDX = B.PARENT
					LEFT OUTER JOIN CATEGORY C ON B.IDX = C.PARENT
					LEFT OUTER JOIN CATEGORY D ON C.IDX = D.PARENT
					WHERE A.DEPTH = 1
				) T
			) F ON A.CATEIDX = F.CATEIDX
			WHERE a.siteid = #{siteid}
			AND a.userno = #{userno}
			AND a.istrash = 'F'
			AND c.goodsselltype IN ('GST002', 'GST004', 'GST005') /* 판매중, 수동품절, 자동품절 */
		) t
		ORDER BY isaddgoods, dealerno, orggoodsno, isaddgoods, goodsno, optioncode
	</select>

	<select id="selectCartListByItems" parameterType="somap" resultType="somap">
		/* ComCartMapper - selectCartListByItems 파라미터로 장바구니 목록 조회 */
		WITH cart AS (
			<foreach item="item" collection="items" separator="UNION ALL">
			select
				  0						as cartidx
				, #{item.goodsno}		as goodsno
				, #{item.isaddgoods} 	as isaddgoods
				, #{item.optioncode}	as optioncode
				, #{item.cateidx}		as cateidx
				, #{item.ordcnt}		as ordcnt
				, #{item.istrash}		as istrash
				, #{item.orggoodsno}	as orggoodsno
			</foreach>
		)
		SELECT 
			  t.*
			, FN_GET_FILE_URL(orggoodsno, 'FLT001', #{imgtype}) as fullpath
			, FN_GET_FILE_URL(goodsno, 'FLT001', #{imgtype}) as fullpath2
			, (saleamt * ordcnt) - goodscpnamt as realgoodsamt
		FROM (
			SELECT
			      a.cartidx
			    , a.goodsno
			    , a.orggoodsno
			    , a.optioncode
			    , a.cateidx
			    , a.ordcnt
			    , c.goodsname
			    , c.goodscode
			    , CONCAT_WS(', ', b.optionnm1, b.optionnm2, b.optionnm3, b.optionnm4) AS fulloptionnm
			    , fullcategoryname
			    , case
			    	when a.isaddgoods = 'F' then c.goodsname 
			    	else o.goodsname
			      end as orggoodsname
			    , ifnull((SELECT name FROM t_brand WHERE idx = c.brandidx), '') AS brandname
			    , case when a.isaddgoods = 'F' 
			    	then CONCAT_WS(',', ifnull(b.optionnm1, b.goodsname), if(b.optionnm2 = '', null, b.optionnm2), if(b.optionnm3 = '', null, b.optionnm3), if(b.optionnm4 = '', null, b.optionnm4))
			    	else CONCAT_WS(',', c.goodsname, ifnull(b.optionnm1, b.goodsname), if(b.optionnm2 = '', null, b.optionnm2), if(b.optionnm3 = '', null, b.optionnm3), if(b.optionnm4 = '', null, b.optionnm4)) 
			      end as optionname
			    , FN_GET_OPTION_MARKETPRICE(#{siteid}, a.goodsno, a.optioncode) as marketprice
				, FN_GET_OPTION_PRICE(#{siteid}, a.goodsno, a.optioncode) as price
				, FN_GET_GOODS_SALEPROMOAMT(#{siteid}, a.goodsno, a.optioncode, 0, #{platform}) as saleamt
				, FN_GET_GOODS_SALECOUPONAMT(#{siteid}, a.goodsno, a.optioncode, 0, #{platform}) as goodscpnamt -- 즉시할인쿠폰할인가
				, FN_GET_GOODS_SALEPROMOAMT(#{siteid}, a.goodsno, e.optioncode, 0, #{platform}) as mainsaleamt 
				, FN_GET_GOODS_SALECOUPONAMT(#{siteid}, a.goodsno, e.optioncode, 0, #{platform}) as maingoodscpnamt -- 즉시할인쿠폰할인가
				, FN_GET_GOODS_SALEPROMO('base', a.goodsno, a.optioncode, 0, #{platform}) as salepromo
				, FN_GET_OPTION_STOCK(#{siteid}, a.goodsno, a.optioncode) as stockcnt
			    , if(c.dealerno is null , 0, c.dealerno) as dealerno
			    , case 
			    	when c.dealerno is null then 'D.PLOT'
			    	else (select name from t_dealer where userno = c.dealerno)
			      end as dealernm
			    , d.delivtype
			    , FN_GET_CODENAME(#{siteid}, 'DELIVTYPE', d.delivtype) as delivtypename
			    , c.delividx
			    , c.iscombdeliv
			    , d.delivfaretype
			    , FN_GET_CODENAME(#{siteid}, 'DELIVFARETYPE', d.delivfaretype) AS delivfaretypename
			    , IFNULL(d.delivfare, 0) as delivfare
			    , IFNULL(d.chejufare, 0) as chejufare 			/* 제주배송비 */
			    , IFNULL(d.isolfare, 0) as isolfare	 			/* 도서산간배송비 */
			    , IFNULL(d.delivfreefare, 0) as delivfreefare	/* 조건부주문금액 */
			    , a.isaddgoods
			    , a.istrash
			    , c.minordcnt
				, c.maxordcnt
				, c.daymaxordcnt
				, c.permaxordcnt
				, c.goodsselltype
				, FN_GET_ORDER_COUNT(#{siteid}, a.goodsno, #{userno}, 'D') as dayordcnt
				, FN_GET_ORDER_COUNT(#{siteid}, a.goodsno, #{userno}, null) as perordcnt
				, ifnull((select 'T' from t_wish where goodsno = a.goodsno and userno = #{userno} and istrash = 'F'), 'F') as iswished
			FROM cart a
			INNER JOIN t_goods_option_detail b
			ON a.goodsno = b.goodsno
			AND a.optioncode = b.optioncode
			AND b.istrash = 'F'
			INNER JOIN t_goods c
			ON a.goodsno = c.goodsno
			LEFT OUTER JOIN t_goods o
			ON a.orggoodsno = o.goodsno
			LEFT OUTER JOIN t_deliv_template d
			ON c.delividx = d.idx
			LEFT OUTER JOIN t_goods_option_detail e
			ON a.goodsno = e.goodsno
			AND e.ismaingoods = 'T'
			AND b.istrash = 'F'
			LEFT OUTER JOIN (
				WITH CATEGORY AS (
					SELECT IDX, NAME, DEPTH, PARENT
					FROM T_CATEGORY
				)
				SELECT
					 T.CATEIDX, T.DEPTH1IDX, T.DEPTH2IDX, T.DEPTH3IDX, T.DEPTH4IDX, T.FULLCATEGORYNAME
				FROM (
					SELECT
						  A.IDX AS DEPTH1IDX, B.IDX AS DEPTH2IDX, C.IDX AS DEPTH3IDX, D.IDX AS DEPTH4IDX
						, CONCAT_WS(' , ', A.NAME, B.NAME, C.NAME, D.NAME) AS FULLCATEGORYNAME
						, (CASE WHEN D.IDX IS NOT NULL THEN D.IDX
								WHEN C.IDX IS NOT NULL THEN C.IDX
								WHEN B.IDX IS NOT NULL THEN B.IDX
								ELSE A.IDX
						END) AS CATEIDX
					FROM CATEGORY A
					LEFT OUTER JOIN CATEGORY B ON A.IDX = B.PARENT
					LEFT OUTER JOIN CATEGORY C ON B.IDX = C.PARENT
					LEFT OUTER JOIN CATEGORY D ON C.IDX = D.PARENT
					WHERE A.DEPTH = 1
				) T
			) F ON A.CATEIDX = F.CATEIDX
			WHERE a.istrash = 'F'
			AND c.goodsselltype IN ('GST002', 'GST004', 'GST005') /* 판매중, 수동품절, 자동품절 */
		) t
		ORDER BY isaddgoods, dealerno, isaddgoods, goodsno, optioncode
	</select>
	
	<select id="selectCartByGoods" parameterType="somap" resultType="int">
		/* ComCartMapper - selectCartByGoods 장바구니 개수 조회 */
		SELECT count(*) 
		FROM t_comcart a
		WHERE a.siteid = #{siteid}
		AND a.userno = #{userno}
		AND a.goodsno = #{goodsno}
		AND a.optioncode = #{optioncode}
		AND a.istrash = 'F'
	</select>
	
	<select id="selectCartCnt" parameterType="somap" resultType="int">
		/* ComCartMapper - selectCartCnt 장바구니 개수 조회 */
		SELECT count(*) 
		FROM t_comcart a
		INNER JOIN t_goods_option_detail b
		ON a.goodsno = b.goodsno
		AND a.optioncode = b.optioncode
		AND b.istrash = 'F'
		INNER JOIN t_goods c
		ON a.goodsno = c.goodsno
		WHERE a.userno = #{userno}
		AND a.istrash = 'F'
		AND c.goodsselltype IN ('GST002', 'GST004', 'GST005')/* 판매중, 수동품절, 자동품절 */
	</select>
	
	<update id="updateCart" parameterType="somap" >
		/* ComCartMapper - updateCart 장바구니 수량수정 */
		UPDATE t_comcart
		SET ordcnt = #{ordcnt}
		WHERE cartidx = #{cartidx}
	</update>
	
	<update id="updateCartByGoods" parameterType="somap" >
		/* ComCartMapper - updateCart 장바구니 수량수정 */
		UPDATE t_comcart
		SET ordcnt = ordcnt + ifnull(#{ordcnt}, 0)
			, ordpathtype = #{ordpathtype}
		WHERE siteid = #{siteid}
		AND userno = #{userno}
		AND goodsno = #{goodsno}
		AND optioncode = #{optioncode}
		AND istrash = 'F'
	</update>
	
	<update id="updateSessId" parameterType="somap" >
		/* ComCartMapper - updateSessId 장바구니 회원번호수정 */
		UPDATE t_comcart
		SET	userno = #{userno}
		  , sessid = #{userid}
		WHERE sessid = #{sessid}
	</update>
	
	<update id="deleteCartByCartIdx" parameterType="somap" >
		/* ComCartMapper - deleteCartByCartIdx 장바구니 항목삭제 */
		UPDATE t_comcart
		SET istrash = 'T'
		WHERE cartidx = #{cartidx}
	</update>
	
	<update id="deleteCart" parameterType="somap">
		/* ComCartMapper - deleteCart 장바구니 전체삭제
		UPDATE t_comcart
		SET istrash = 'T'
		WHERE userno = #{userno}
		AND istrash = 'F'
	</update>

	<update id="deleteCartByMonth" parameterType="somap" >
		/* ComCartMapper - deleteCartByMonth 오래된 장바구니 삭제 */
		UPDATE t_comcart
		SET istrash = 'T'
		WHERE userno = #{userno}
		AND regdate <![CDATA[<]]> date_add(now(), interval -#{lifetime} month)
		AND istrash = 'F'
	</update>
	
	<!-- <delete id="deleteCart" parameterType="somap">
		/*CartMapper - deleteCart 장바구니 삭제 (로그인할때 오래된 장바구니삭제할때 씀, 장바구니 개발할때 다시 봐야함!) */
		delete from t_cart
		where 1=1
		and siteid = #{siteid}
		<choose>
			<when test="goodsno == null and sessid == null and userno == null and carts == null and idx == null">
				and 1 = 2
			</when>
			<otherwise>
				<if test="goodsno !=null">
					and goodsno=#{goodsno}
				</if>
				<if test="sessid !=null">
					and sessid=#{sessid}
				</if>	
				<if test="userno !=null">
					and userno=#{userno}
					and isdirect='f'
				</if>
				<if test="lifetime !=null">
					and regdate <![CDATA[<]]> date_add(now(), interval -#{lifetime} day)
				</if>		
				<if test="carts !=null">
					and idx in
					<foreach index="index" collection="carts" item="_idx" open="(" close=")" separator="," >
						#{_idx}
					</foreach>
				</if>
				<if test="idx !=null">
					and idx = #{idx}
				</if>		
			</otherwise>
		</choose>
	</delete> -->

	<select id="selectCartListByAdmin" parameterType="somap" resultType="somap">
		SELECT
			  T.*
			, FORMAT(T.MARKETPRICE, 0) AS MARKETPRICEFORMAT
			, FORMAT(T.PRICE, 0) AS PRICEFORMAT
		FROM (
			SELECT
				  DATE_FORMAT(A.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE
				, DATEDIFF(CURRENT_TIMESTAMP, A.REGDATE) AS ELAPSEDDAY
				, C.ISPBGOODS
				, C.GOODSCODE
				, IF(C.ISPBGOODS = 'T', '직매입', '위탁') AS ISPBGOODSNAME
				, (SELECT NAME FROM T_DEALER WHERE USERNO = C.DEALERNO) AS DEALERNAME
				, A.GOODSNO, C.GOODSNAME, A.OPTIONCODE
				, A.ORDCNT
				, FN_GET_OPTION_MARKETPRICE(#{siteid}, A.GOODSNO, A.OPTIONCODE) AS MARKETPRICE
				, FN_GET_OPTION_PRICE(#{siteid}, A.GOODSNO, A.OPTIONCODE) AS PRICE
				, FN_GET_OPTION_CONCAT(A.GOODSNO, A.OPTIONCODE, ' | ') AS OPTIONNAME
				, D.DELIVTYPE
				, FN_GET_CODENAME(#{siteid}, 'DELIVTYPE', D.DELIVTYPE) AS DELIVTYPENAME
				, D.DELIVFARETYPE
				, FN_GET_CODENAME(#{siteid}, 'DELIVFARETYPE', D.DELIVFARETYPE) AS DELIVFARETYPENAME
				, IFNULL(D.DELIVFARE, 0) AS DELIVFARE
				, FN_GET_FILE_URL(A.GOODSNO, 'FLT001', 'IGT003') AS IMGURL
				, A.ISADDGOODS
				, A.ISTRASH
			FROM T_COMCART A INNER JOIN T_GOODS_OPTION_DETAIL B ON A.GOODSNO = B.GOODSNO AND A.OPTIONCODE = B.OPTIONCODE
			INNER JOIN T_GOODS C ON A.GOODSNO = C.GOODSNO
			LEFT OUTER JOIN T_DELIV_TEMPLATE D ON C.DELIVIDX = D.IDX
			WHERE A.SITEID = #{siteid}
			AND A.USERNO = #{userno}
			AND A.ISTRASH = 'F'
			AND C.GOODSSELLTYPE = 'GST002'
		)T
		<choose>
			<when test="psort == 'regdate_asc'">
				ORDER BY REGDATE ASC
			</when>
			<when test="psort == 'regdate_desc'">
				ORDER BY REGDATE DESC
			</when>
			<when test="psort == 'elapsedday_asc'">
				ORDER BY ELAPSEDDAY ASC
			</when>
			<when test="psort == 'elapsedday_desc'">
				ORDER BY ELAPSEDDAY DESC
			</when>
			<when test="psort == 'goodsno_asc'">
				ORDER BY GOODSNO ASC
			</when>
			<when test="psort == 'goodsno_desc'">
				ORDER BY GOODSNO DESC
			</when>
			<when test="psort == 'optioncode_asc'">
				ORDER BY OPTIONCODE ASC
			</when>
			<when test="psort == 'optioncode_desc'">
				ORDER BY OPTIONCODE DESC
			</when>
			<when test="psort == 'marketprice_asc'">
				ORDER BY MARKETPRICE ASC
			</when>
			<when test="psort == 'marketprice_desc'">
				ORDER BY MARKETPRICE DESC
			</when>
			<when test="psort == 'price_asc'">
				ORDER BY PRICE ASC
			</when>
			<when test="psort == 'price_desc'">
				ORDER BY PRICE DESC
			</when>
			<otherwise>
				ORDER BY REGDATE DESC, GOODSNO DESC
			</otherwise>
		</choose>
		<if test="startpage != null and !startpage.equals('') and endpage != null and !endpage.equals('')">
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectCartListByAdminCount" parameterType="somap" resultType="Integer">
		SELECT
			COUNT(*)
		FROM T_COMCART A INNER JOIN T_GOODS_OPTION_DETAIL B ON A.GOODSNO = B.GOODSNO AND A.OPTIONCODE = B.OPTIONCODE
			INNER JOIN T_GOODS C ON A.GOODSNO = C.GOODSNO
			LEFT OUTER JOIN T_DELIV_TEMPLATE D ON C.DELIVIDX = D.IDX
		WHERE A.SITEID = #{siteid}
		AND A.USERNO = #{userno}
		AND A.ISTRASH = 'F'
		AND C.GOODSSELLTYPE = 'GST002'
	</select>

	<select id="selectCartStatsList" parameterType="somap" resultType="somap">
		SELECT /* ComCartMapper.xml - selectCartStatsList 카트 통계 리스트 */
			A.GOODSNO, A.OPTIONCODE, FORMAT(IFNULL(A.ORDCNT, 0), 0) AS ORDCNT, FORMAT(IFNULL(A.CNT, 0), 0) AS CNT, DEPTH1IDX, DEPTH2IDX, DEPTH3IDX, DEPTH4IDX, GOODSSELLTYPENAME
			 , B.GOODSNO, B.GOODSCODE, B.GOODSNAME, DEALERNO, DEALERNAME, OPTIONNAME, BRANDIDX, BRCODE, BRANDNAME, FORMAT(RANK() OVER (ORDER BY ORDCNT DESC, CNT DESC), 0) AS RANKING
		FROM (
				 SELECT
					 A.GOODSNO, A.OPTIONCODE, SUM(A.ORDCNT) AS ORDCNT, COUNT(*) AS CNT
					  , MAX(C.DEPTH1IDX) AS DEPTH1IDX
					  , MAX(C.DEPTH2IDX) AS DEPTH2IDX
					  , MAX(C.DEPTH3IDX) AS DEPTH3IDX
					  , MAX(C.DEPTH4IDX) AS DEPTH4IDX
				 FROM T_COMCART A INNER JOIN (
					 SELECT B.USERNO FROM T_USER A INNER JOIN T_MEMBER B ON A.NO = B.USERNO
					 WHERE B.STATE = 'MST001'
					<if test='isallmember != null and isallmember == "F" and mumembertypearr != null and mumembertypearr.size > 0'>
						AND DADAMEMBERTYPE IN
						<foreach index="index" collection="mumembertypearr" item="_idx" open="(" close=")" separator="," >
							#{_idx}
						</foreach>
					</if>
					<if test='isallmemlv != null and isallmemlv =="F" and mumemlvtypearr != null and mumemlvtypearr.size > 0'>
						AND MEMLVTYPE IN
						<foreach index="index" collection="mumemlvtypearr" item="_idx" open="(" close=")" separator="," >
							#{_idx}
						</foreach>
					</if>
				 )B ON A.USERNO = B.USERNO LEFT OUTER JOIN (
					 WITH CATEGORY AS (
						 SELECT IDX, NAME, DEPTH, PARENT
						 FROM T_CATEGORY
					 )
					 SELECT
						 T.CATEIDX, T.DEPTH1IDX, T.DEPTH2IDX, T.DEPTH3IDX, T.DEPTH4IDX, T.FULLCATEGORYNAME
					 FROM (	SELECT
								   A.IDX AS DEPTH1IDX, B.IDX AS DEPTH2IDX, C.IDX AS DEPTH3IDX, D.IDX AS DEPTH4IDX
									, CONCAT_WS(' > ', A.NAME, B.NAME, C.NAME, D.NAME) AS FULLCATEGORYNAME
									, (CASE WHEN D.IDX IS NOT NULL THEN D.IDX
											WHEN C.IDX IS NOT NULL THEN C.IDX
											WHEN B.IDX IS NOT NULL THEN B.IDX
											ELSE A.IDX
							 END) AS CATEIDX
							   FROM CATEGORY A
										LEFT OUTER JOIN CATEGORY B ON A.IDX = B.PARENT
										LEFT OUTER JOIN CATEGORY C ON B.IDX = C.PARENT
										LEFT OUTER JOIN CATEGORY D ON C.IDX = D.PARENT
							   WHERE A.DEPTH = 1
						  ) T
				 )C ON A.CATEIDX = C.CATEIDX
				 WHERE A.SITEID = #{siteid}
					<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(A.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), A.REGDATE) <![CDATA[>=]]> 0
					</if>
					<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
					</if>
					<if test='isallchannel != null and isallchannel =="F" and muappchtypearr != null and muappchtypearr.size > 0'>
						AND ORDPATHTYPE IN
						<foreach index="index" collection="muappchtypearr" item="_idx" open="(" close=")" separator="," >
							#{_idx}
						</foreach>
					</if>
					<if test="depth1cateidx != null and depth1cateidx != '' ">
						AND C.DEPTH1IDX = #{depth1cateidx}	/* 대분류카테고리 */
					</if>
					<if test="depth2cateidx != null and depth2cateidx != '' ">
						AND C.DEPTH2IDX = #{depth2cateidx}	/* 중분류카테고리 */
					</if>
					<if test="depth3cateidx != null and depth3cateidx != '' ">
						AND C.DEPTH3IDX = #{depth3cateidx}	/* 소분류카테고리 */
					</if>
					<if test="depth4cateidx != null and depth4cateidx != '' ">
						AND C.DEPTH4IDX = #{depth4cateidx}	/* 세분류카테고리 */
					</if>
				 GROUP BY A.GOODSNO, A.OPTIONCODE
			 )A INNER JOIN (
			SELECT A.GOODSNO, A.GOODSCODE, A.GOODSNAME, D.OPTIONCODE, C.USERNO AS DEALERNO, C.NAME AS DEALERNAME, FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, ',') AS OPTIONNAME, B.IDX AS BRANDIDX, B.BRCODE, B.NAME AS BRANDNAME
				  , FN_GET_CODENAME(#{siteid}, 'GOODSSELLTYPE', A.GOODSSELLTYPE) AS GOODSSELLTYPENAME
			FROM T_GOODS A
					 LEFT OUTER JOIN T_BRAND B ON A.BRANDIDX = B.IDX
					 LEFT OUTER JOIN T_DEALER C ON A.DEALERNO = C.USERNO
					 INNER JOIN T_GOODS_OPTION_DETAIL D ON A.GOODSNO = D.GOODSNO
			WHERE ISTEMPSAVE = 'F'
			<if test='isallsell != null and isallsell =="F" and muselltypearr != null and muselltypearr.size > 0'>
				AND GOODSSELLTYPE IN
				<foreach index="index" collection="muselltypearr" item="_idx" open="(" close=")" separator="," >
					#{_idx}
				</foreach>
			</if>
			<if test="sword != null and sword != '' ">
				<choose>
					<when test="skey == 'dealercode'">
						AND C.USERNO LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'dealername'">
						AND C.NAME LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'brandcode'">
						AND B.IDX LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'brandname'">
						AND B.NAME LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'goodscode'">
						AND A.GOODSCODE LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'optioncode'">
						AND D.OPTIONCODE LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'goodsname'">
						AND A.GOODSNAME LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test="skey == 'optionname'">
						AND FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, '') LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
						AND (C.USERNO LIKE CONCAT('%', #{sword}, '%')
						         OR C.NAME LIKE CONCAT('%', #{sword}, '%')
						         OR B.IDX LIKE CONCAT('%', #{sword}, '%')
								 OR B.NAME LIKE CONCAT('%', #{sword}, '%')
								 OR A.GOODSCODE LIKE CONCAT('%', #{sword}, '%')
								 OR D.OPTIONCODE LIKE CONCAT('%', #{sword}, '%')
								 OR A.GOODSNAME LIKE CONCAT('%', #{sword}, '%')
								 OR FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, '') LIKE CONCAT('%', #{sword}, '%')
						)
					</otherwise>
				</choose>
			</if>
		)B ON A.GOODSNO = B.GOODSNO AND A.OPTIONCODE = B.OPTIONCODE
		<choose>
			<when test="psort == 'rank_asc'">
				ORDER BY CAST(RANKING AS SIGNED) ASC
			</when>
			<when test="psort == 'rank_desc'">
				ORDER BY CAST(RANKING AS SIGNED) DESC
			</when>
			<when test="psort == 'dealercode_asc'">
				ORDER BY B.DEALERNO ASC
			</when>
			<when test="psort == 'dealercode_desc'">
				ORDER BY B.DEALERNO DESC
			</when>
			<when test="psort == 'goodscode_asc'">
				ORDER BY B.GOODSCODE ASC
			</when>
			<when test="psort == 'goodscode_desc'">
				ORDER BY B.GOODSCODE DESC
			</when>
			<when test="psort == 'dealername_asc'">
				ORDER BY B.DEALERNAME ASC
			</when>
			<when test="psort == 'dealername_desc'">
				ORDER BY B.DEALERNAME DESC
			</when>
			<when test="psort == 'brandcode_asc'">
				ORDER BY B.BRCODE ASC
			</when>
			<when test="psort == 'brandcode_desc'">
				ORDER BY B.BRCODE DESC
			</when>
			<when test="psort == 'brandname_asc'">
				ORDER BY B.BRANDNAME ASC
			</when>
			<when test="psort == 'brandname_desc'">
				ORDER BY B.BRANDNAME DESC
			</when>
			<when test="psort == 'goodsno_asc'">
				ORDER BY A.GOODSNO ASC
			</when>
			<when test="psort == 'goodsno_desc'">
				ORDER BY A.GOODSNO DESC
			</when>
			<when test="psort == 'goodsname_asc'">
				ORDER BY A.GOODSNAME ASC
			</when>
			<when test="psort == 'goodsname_desc'">
				ORDER BY A.GOODSNAME DESC
			</when>
			<when test="psort == 'optioncode_asc'">
				ORDER BY A.OPTIONCODE ASC
			</when>
			<when test="psort == 'optioncode_desc'">
				ORDER BY A.OPTIONCODE DESC
			</when>
			<when test="psort == 'optionname_asc'">
				ORDER BY B.OPTIONNAME ASC
			</when>
			<when test="psort == 'optionname_desc'">
				ORDER BY B.OPTIONNAME DESC
			</when>
			<when test="psort == 'ordcnt_asc'">
				ORDER BY ORDCNT ASC
			</when>
			<when test="psort == 'ordcnt_desc'">
				ORDER BY ORDCNT DESC
			</when>
			<when test="psort == 'cnt_asc'">
				ORDER BY CNT ASC
			</when>
			<when test="psort == 'cnt_desc'">
				ORDER BY CNT DESC
			</when>
			<otherwise>
				ORDER BY ORDCNT DESC, CNT DESC, A.GOODSNO, A.OPTIONCODE
			</otherwise>
		</choose>
		<if test="startpage != null and !startpage.equals('') and endpage != null and !endpage.equals('')">
			LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<select id="selectCartStatsListCount" parameterType="somap" resultType="somap">
		SELECT /* ComCartMapper.xml - selectCartStatsListCount 카트 통계 카운트 */
			COUNT(*) AS TOTAL, FORMAT(IFNULL(SUM(ORDCNT), 0), 0) AS ORDCNT, FORMAT(IFNULL(SUM(CNT), 0), 0) AS CNT
		FROM (
		SELECT
		A.GOODSNO, A.OPTIONCODE, SUM(A.ORDCNT) AS ORDCNT, COUNT(*) AS CNT
		, MAX(C.DEPTH1IDX) AS DEPTH1IDX
		, MAX(C.DEPTH2IDX) AS DEPTH2IDX
		, MAX(C.DEPTH3IDX) AS DEPTH3IDX
		, MAX(C.DEPTH4IDX) AS DEPTH4IDX
		FROM T_COMCART A INNER JOIN (
		SELECT B.USERNO FROM T_USER A INNER JOIN T_MEMBER B ON A.NO = B.USERNO
		WHERE B.STATE = 'MST001'
		<if test='isallmember != null and isallmember == "F" and mumembertypearr != null and mumembertypearr.size > 0'>
			AND DADAMEMBERTYPE IN
			<foreach index="index" collection="mumembertypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		<if test='isallmemlv != null and isallmemlv =="F" and mumemlvtypearr != null and mumemlvtypearr.size > 0'>
			AND MEMLVTYPE IN
			<foreach index="index" collection="mumemlvtypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		)B ON A.USERNO = B.USERNO LEFT OUTER JOIN (
		WITH CATEGORY AS (
		SELECT IDX, NAME, DEPTH, PARENT
		FROM T_CATEGORY
		)
		SELECT
		T.CATEIDX, T.DEPTH1IDX, T.DEPTH2IDX, T.DEPTH3IDX, T.DEPTH4IDX, T.FULLCATEGORYNAME
		FROM (	SELECT
		A.IDX AS DEPTH1IDX, B.IDX AS DEPTH2IDX, C.IDX AS DEPTH3IDX, D.IDX AS DEPTH4IDX
		, CONCAT_WS(' > ', A.NAME, B.NAME, C.NAME, D.NAME) AS FULLCATEGORYNAME
		, (CASE WHEN D.IDX IS NOT NULL THEN D.IDX
		WHEN C.IDX IS NOT NULL THEN C.IDX
		WHEN B.IDX IS NOT NULL THEN B.IDX
		ELSE A.IDX
		END) AS CATEIDX
		FROM CATEGORY A
		LEFT OUTER JOIN CATEGORY B ON A.IDX = B.PARENT
		LEFT OUTER JOIN CATEGORY C ON B.IDX = C.PARENT
		LEFT OUTER JOIN CATEGORY D ON C.IDX = D.PARENT
		WHERE A.DEPTH = 1
		) T
		)C ON A.CATEIDX = C.CATEIDX
		WHERE A.SITEID = #{siteid}
		<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
			AND DATEDIFF(A.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
		</if>
		<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
			AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), A.REGDATE) <![CDATA[>=]]> 0
		</if>
		<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
			AND A.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},' 000000'), '%Y-%m-%d %H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},' 235959'), '%Y-%m-%d %H%i%s')
		</if>
		<if test='isallchannel != null and isallchannel =="F" and muappchtypearr != null and muappchtypearr.size > 0'>
			AND ORDPATHTYPE IN
			<foreach index="index" collection="muappchtypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		<if test="depth1cateidx != null and depth1cateidx != '' ">
			AND C.DEPTH1IDX = #{depth1cateidx}	/* 대분류카테고리 */
		</if>
		<if test="depth2cateidx != null and depth2cateidx != '' ">
			AND C.DEPTH2IDX = #{depth2cateidx}	/* 중분류카테고리 */
		</if>
		<if test="depth3cateidx != null and depth3cateidx != '' ">
			AND C.DEPTH3IDX = #{depth3cateidx}	/* 소분류카테고리 */
		</if>
		<if test="depth4cateidx != null and depth4cateidx != '' ">
			AND C.DEPTH4IDX = #{depth4cateidx}	/* 세분류카테고리 */
		</if>
		GROUP BY A.GOODSNO, A.OPTIONCODE
		)A INNER JOIN (
		SELECT A.GOODSNO, D.OPTIONCODE, C.USERNO AS DEALERNO, C.NAME AS DEALERNAME, FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, ',') AS OPTIONNAME, B.IDX AS BRANDIDX, B.NAME AS BRANDNAME
		FROM T_GOODS A
			LEFT OUTER JOIN T_BRAND B ON A.BRANDIDX = B.IDX
			LEFT OUTER JOIN T_DEALER C ON A.DEALERNO = C.USERNO
			INNER JOIN T_GOODS_OPTION_DETAIL D ON A.GOODSNO = D.GOODSNO
		WHERE ISTEMPSAVE = 'F'
		<if test='isallsell != null and isallsell =="F" and muselltypearr != null and muselltypearr.size > 0'>
			AND GOODSSELLTYPE IN
			<foreach index="index" collection="muselltypearr" item="_idx" open="(" close=")" separator="," >
				#{_idx}
			</foreach>
		</if>
		<if test="sword != null and sword != '' ">
			<choose>
				<when test="skey == 'dealercode'">
					AND C.USERNO LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'dealername'">
					AND C.NAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'brandcode'">
					AND B.IDX LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'brandname'">
					AND B.NAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'goodsno'">
					AND A.GOODSNO LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'optioncode'">
					AND D.OPTIONCODE LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'goodsname'">
					AND A.GOODSNAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'optionname'">
					AND FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, '') LIKE CONCAT('%', #{sword}, '%')
				</when>
				<otherwise>
					AND (C.USERNO LIKE CONCAT('%', #{sword}, '%')
					OR C.NAME LIKE CONCAT('%', #{sword}, '%')
					OR B.IDX LIKE CONCAT('%', #{sword}, '%')
					OR B.NAME LIKE CONCAT('%', #{sword}, '%')
					OR A.GOODSNO LIKE CONCAT('%', #{sword}, '%')
					OR D.OPTIONCODE LIKE CONCAT('%', #{sword}, '%')
					OR A.GOODSNAME LIKE CONCAT('%', #{sword}, '%')
					OR FN_GET_OPTION_DETAIL(A.GOODSNO, D.OPTIONCODE, '') LIKE CONCAT('%', #{sword}, '%')
					)
				</otherwise>
			</choose>
		</if>
		)B ON A.GOODSNO = B.GOODSNO AND A.OPTIONCODE = B.OPTIONCODE
	</select>

</mapper>
