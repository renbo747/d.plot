<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.MemberAddressMapper">
	<insert id="mergeMemberAddressByKey" parameterType="somap">
		INSERT INTO T_MEMBER_ADDRESS (IDX, MEMBERNO, TITLE, POST, ADDR, ADDRDETAIL, ISDEFAULT, REGDATE, ADDRROAD, ADDRDETAILROAD, SIGUNGUCODE, BUILDINGCODE, ROADNAMECODE)
		VALUES(#{addressidx}, #{userno}, '기본배송지', #{post}, #{addr}, #{addrdetail}, 'T', CURRENT_TIMESTAMP,  #{addrroad}, #{addrdetail}, #{sigungucode}, #{buildingcode}, #{roadnamecode})
		ON DUPLICATE KEY UPDATE POST = #{post}, ADDR = #{addr}, ADDRDETAIL = #{addrdetail}, ADDRROAD = #{addrroad}, ADDRDETAILROAD = #{addrdetail}, SIGUNGUCODE = #{sigungucode} , BUILDINGCODE = #{buildingcode}, ROADNAMECODE = #{roadnamecode}
	</insert>
	
	<!-- 회원 배송지 목록 조회 -->
	<select id="selectAddressList" parameterType="somap" resultType="somap">
		SELECT  /*MemberAddressMapper-selectAddressList :: 회원 배송지 목록 조회*/
			  tma.idx               -- 일련번호
	     	, tma.memberno          -- 회원번호 
	     	, tma.title             -- 주소명(받는사람)
	     	, tma.tel               -- 전화번호
	     	, tma.mobile            -- 휴대폰번호
	     	, tma.post              -- 우편번호
	     	, tma.addr              -- 주소
	     	, tma.addrdetail        -- 주소_상세
	     	, tma.isdefault         -- 기본주소여부
	     	, tma.regdate           -- 등록일자
	     	, tma.addrroad          -- 주소_도로명
	     	, tma.addrdetailroad    -- 주소_상세도로명
	     	, tma.sigungucode       -- 시군구코드
		    , tma.buildingcode      -- 건물코드
		    , tma.roadnamecode      -- 도로명코드
			, IFNULL((select IF(ischuju = 'T', 'J', IF(isios = 'T', 'I', 'N')) from t_isolation_fare where post =  tma.post LIMIT 1), 'N') AS isolatetype /* 제주,도서산간구분(N : 일반, J :제주, I:도서산간) */
		FROM t_member_address tma
    	WHERE 1 = 1
	    AND tma.memberno  = #{userno}
	    <if test='idx != null and idx != ""'>
	    AND tma.idx = #{idx}
	    </if>
	    <if test='isdefault != null and isdefault != ""'>
	    AND tma.isdefault = #{isdefault}
	    </if>
	    ORDER BY isdefault desc, title asc
	</select>
	
	<!-- 배송지 조회 -->
	<select id="selectAddress" parameterType="somap" resultType="somap">
		SELECT  /*MemberAddressMapper-selectAddress :: 배송지 조회*/
		      tma.idx               -- 일련번호
	     	, tma.memberno          -- 회원번호 
	     	, tma.title             -- 주소명(받는사람)
	     	, tma.tel               -- 전화번호
	     	, tma.mobile            -- 휴대폰번호
	     	, tma.post              -- 우편번호
	     	, tma.addr              -- 주소
	     	, tma.addrdetail        -- 주소_상세
	     	, tma.isdefault         -- 기본주소여부
	     	, tma.regdate           -- 등록일자
	     	, tma.addrroad          -- 주소_도로명
	     	, tma.addrdetailroad    -- 주소_상세도로명
	     	, tma.sigungucode       -- 시군구코드
		    , tma.buildingcode      -- 건물코드
		    , tma.roadnamecode      -- 도로명코드
		    , IFNULL((select IF(ischuju = 'T', 'J', IF(isios = 'T', 'I', 'N')) from t_isolation_fare where post =  tma.post LIMIT 1), 'N') AS isolatetype /* 제주,도서산간구분(N : 일반, J :제주, I:도서산간) */
		FROM t_member_address tma
	    WHERE tma.idx = #{idx}
	</select>
	
	<!-- 회원 기본배송지 조회 -->
	<select id="selectDefaultAddress" parameterType="somap" resultType="somap">
		SELECT  /*MemberAddressMapper-selectAddress :: 회원 기본배송지 조회*/
		      tma.idx               -- 일련번호
	     	, tma.memberno          -- 회원번호 
	     	, tma.title             -- 주소명(받는사람)
	     	, tma.tel               -- 전화번호
	     	, tma.mobile            -- 휴대폰번호
	     	, tma.post              -- 우편번호
	     	, tma.addr              -- 주소
	     	, tma.addrdetail        -- 주소_상세
	     	, tma.isdefault         -- 기본주소여부
	     	, tma.regdate           -- 등록일자
	     	, tma.addrroad          -- 주소_도로명
	     	, tma.addrdetailroad    -- 주소_상세도로명
	     	, tma.sigungucode       -- 시군구코드
		    , tma.buildingcode      -- 건물코드
		    , tma.roadnamecode      -- 도로명코드
		    , IFNULL((select IF(ischuju = 'T', 'J', IF(isios = 'T', 'I', 'N')) from t_isolation_fare where post =  tma.post LIMIT 1), 'N') AS isolatetype /* 제주,도서산간구분(N : 일반, J :제주, I:도서산간) */
		FROM t_member_address tma
	    WHERE tma.memberno  = #{userno}
	    AND tma.isdefault = 'T'
	</select>
	
	<select id="selectAddressCnt" parameterType="somap" resultType="int">
		SELECT /*MemberAddressMapper.xml - selectAddressCnt::회원의 배송지 수 조회*/ 
		      count(*)
		FROM t_member_address
		WHERE memberno = #{userno}
	</select>
	
	<!-- 기본 배송지 해제 처리 -->
	<update id="updateisdefaultCancel" parameterType="somap">
		UPDATE /*MemberAddressMapper-updateisdefaultCancel :: 기본 배송지 해제처리*/
		       t_member_address
		SET isdefault = 'F'
		WHERE memberno  = #{userno}
		AND idx = #{idx}
	</update>
	
	<!-- 회원 배송지 저장 -->
	<insert id="insertAddress" parameterType="somap" useGeneratedKeys="true" keyProperty="idx">
		/*MemberAddressMapper-insertAddress :: 회원 배송지 저장*/
		INSERT INTO t_member_address (
		         memberno       -- 회원번호 
		       , title          -- 주소명(받는사람)
		       , tel            -- 전화번호
		       , mobile         -- 휴대폰번호
		       , post           -- 우편번호
		       , addr           -- 주소
		       , addrdetail     -- 주소_상세
		       , isdefault      -- 기본주소여부
		       , regdate        -- 등록일자
		       , addrroad       -- 주소_도로명
		       , addrdetailroad -- 주소_상세도로명
		       , sigungucode    -- 시군구코드
		       , buildingcode   -- 건물코드
		       , roadnamecode   -- 도로명코드
		 ) VALUES(
		      #{userno}
		    , #{title}
		    , #{tel}
		    , #{mobile}
		    , #{post}
		    , #{addr}
		    , #{addrdetail}
		    , #{isdefault}
		    , now()
		    , #{addrroad}
		    , #{addrdetailroad}
		    , #{sigungucode}
		    , #{buildingcode}
		    , #{roadnamecode}
		)
	</insert>
	
	<!-- 회원 배송지 수정 -->
	<update id="updateAddress" parameterType="somap" >
		/*MemberAddressMapper-updateAddress :: 회원 배송지 저장*/
		UPDATE t_member_address 
		SET	  title  =   #{title}
		    , tel    =   #{tel}
		    , mobile =   #{mobile}
		    , post   =   #{post}
		    , addr   =   #{addr}
		    , addrdetail  = #{addrdetail}
		    , isdefault   = #{isdefault}
		    , addrroad    = #{addrroad}
		    , addrdetailroad  = #{addrdetailroad}
		    , sigungucode = #{sigungucode}
		    , buildingcode = #{buildingcode}
		    , roadnamecode = #{roadnamecode}
		WHERE idx = #{idx}
	</update>
	
	<!-- 배송지 정보 삭제 -->
	<delete id="delAddressInfo" parameterType="somap">
		DELETE /*MemberAddressMapper-delAddressInfo :: 배송지 정보 삭제*/
		FROM t_member_address
		WHERE idx = #{idx}
		AND memberno = #{userno}
	</delete>
</mapper>
