<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.GiftMapper">
	<!-- ADMIN 쿼리 시작 -->
	
	<!-- 사은품 목록 조회 -->
	<select id="selectGiftList" parameterType="somap" resultType="somap">
		SELECT	/* GiftMapper.xml - selectGiftList 사은품 목록 조회 */
			tg.giftidx
			, tg.giftcode
			, tg.giftname
			, tg.giftstockcnt
			, tge.erpgiftcnt
			, tg.istrash
			, tg.giftinfo
			, tg.giftinfomobile
			, DATE_FORMAT(tg.regdate, '%Y-%m-%d') AS regdate
            , FN_GET_FILE_URL(tg.giftidx, 'FLT001','IGT014') as fullpath
		    , tge.erpgiftcode
		    , tge.erpgiftname
		FROM t_gift tg
		LEFT JOIN (
			SELECT giftidx, count(*) as erpgiftcnt
				 , group_concat(erpgiftcode ORDER BY erpgiftcode) AS erpgiftcode
				 , group_concat(erpgiftname ORDER BY erpgiftcode) AS erpgiftname
			FROM t_gift_erp
			GROUP BY giftidx
		) tge ON tge.giftidx = tg.giftidx
		<where>
			<if test="sword != null and sword != ''">
				<choose>
					<when test="skey == 'giftcode'">
						AND tg.giftcode like concat('%',#{sword},'%')
					</when>
					<when test="skey == 'giftname'">
						AND tg.giftname like concat('%',#{sword},'%')
					</when>
					<otherwise>
						AND (
						    tg.giftcode like concat('%',#{sword},'%')
							OR tg.giftname like concat('%',#{sword},'%')
						)
					</otherwise>
				</choose>
			</if>
			<![CDATA[
				AND tg.regdate >= date_format(concat(#{startdate}, ' ', '00:00:00') , '%Y-%m-%d %H:%i:%s')
				AND tg.regdate <= date_format(concat(#{enddate}, ' ', '23:59:59'), '%Y-%m-%d %H:%i:%s')
			]]>
			<if test="istrash != null and istrash != ''">
				AND tg.istrash = #{istrash}				
			</if>
		</where>
		<choose>
			<when test="psort == 'giftcode_asc'">
				order by tg.giftcode
			</when>
			<when test="psort == 'giftcode_desc'">
				order by tg.giftcode desc
			</when>
			<when test="psort == 'stock_asc'">
				order by tg.giftstockcnt
			</when>
			<when test="psort == 'stock_desc'">
				order by tg.giftstockcnt desc
			</when>
			<when test="psort == 'regdate_asc'">
				order by tg.regdate
			</when>
			<when test="psort == 'regdate_desc'">
				order by tg.regdate desc
			</when>
			<otherwise>
				order by tg.regdate desc
			</otherwise>
		</choose>
		<if test="startpage != null and !startpage.equals('') and endpage != null and !endpage.equals('')">
		limit #{startpage}, #{endpage}
		</if>
    </select>
    
    <!-- 사은품 상태별 수량 조회 -->
    <select id="selectGiftState" parameterType="somap" resultType="somap">
    	SELECT 	/* GiftMapper.xml - selectGiftState 사은품 상태별 수량 조회 */
    		count(*) AS total_cnt
			,IFNULL(SUM(CASE istrash WHEN 'F' THEN 1 ELSE 0 END), 0) AS use_cnt
			,IFNULL(SUM(CASE istrash WHEN 'T' THEN 1 ELSE 0 END), 0) AS trash_cnt
		FROM t_gift tg
		<where>
			<if test="sword != null and sword != ''">
				<choose>
					<when test="skey == 'giftcode'">
						AND tg.giftcode like concat('%',#{sword},'%')
					</when>
					<when test="skey == 'giftname'">
						AND tg.giftname like concat('%',#{sword},'%')
					</when>
					<otherwise>
						AND (
						    tg.giftcode like concat('%',#{sword},'%')
							OR tg.giftname like concat('%',#{sword},'%')
						)
					</otherwise>
				</choose>
			</if>
			<![CDATA[
				AND tg.regdate >= date_format(concat(#{startdate}, ' ', '00:00:00') , '%Y-%m-%d %H:%i:%s')
				AND tg.regdate <= date_format(concat(#{enddate}, ' ', '23:59:59'), '%Y-%m-%d %H:%i:%s')
			]]>
			<if test="istrash != null and istrash != ''">
				AND tg.istrash = #{istrash}				
			</if>
		</where>
    </select>
    
    <!-- 사은품 사용여부 수정 -->
    <update id="updateGiftUse" parameterType="somap">
    	UPDATE T_GIFT /* GiftMapper.xml - updateGiftUse 사은품 사용여부 수정 */
    	SET istrash = #{check}
    	WHERE giftidx in
    	<foreach collection="list" item="item" open="(" separator="," close=")">
    		#{item.giftidx}
    	</foreach>
    </update>
    
    <!-- 사은품 엑셀 목록 조회 -->
    <select id="selectGiftExcelList" parameterType="somap" resultType="HashMap">
    	SELECT	/* GiftMapper.xml - selectGiftExcelList  사은품 엑셀 목록 조회  */
			tg.giftidx
			, tg.giftcode
			, tg.giftname
			, tge.erpgiftcnt
			, tg.giftstockcnt
			, CASE tg.istrash WHEN 'F' THEN '사용' ELSE '미사용' END AS istrash
			, DATE_FORMAT(tg.regdate, '%Y-%m-%d') AS regdate
		FROM t_gift tg
		LEFT JOIN (
			SELECT giftidx, count(*) as erpgiftcnt
			FROM t_gift_erp
			GROUP BY giftidx
		) tge ON tge.giftidx = tg.giftidx
		<where>
			<if test="sword != null and sword != ''">
				<choose>
					<when test="skey == 'giftcode'">
						AND tg.giftcode like concat('%',#{sword},'%')
					</when>
					<when test="skey == 'giftname'">
						AND tg.giftname like concat('%',#{sword},'%')
					</when>
					<otherwise>
						AND (
						    tg.giftcode like concat('%',#{sword},'%')
							OR tg.giftname like concat('%',#{sword},'%')
						)
					</otherwise>
				</choose>
			</if>
			<![CDATA[
				AND tg.regdate >= date_format(concat(#{startdate}, ' ', '00:00:00') , '%Y-%m-%d %H:%i:%s')
				AND tg.regdate <= date_format(concat(#{enddate}, ' ', '23:59:59'), '%Y-%m-%d %H:%i:%s')
			]]>
			<if test="istrash != null and istrash != ''">
				AND tg.istrash = #{istrash}				
			</if>
		</where>
		<choose>
			<when test="psort == 'giftcode_asc'">
				order by tg.giftcode
			</when>
			<when test="psort == 'giftcode_desc'">
				order by tg.giftcode desc
			</when>
			<when test="psort == 'stock_asc'">
				order by tg.giftstockcnt
			</when>
			<when test="psort == 'stock_desc'">
				order by tg.giftstockcnt desc
			</when>
			<when test="psort == 'regdate_asc'">
				order by tg.regdate
			</when>
			<when test="psort == 'regdate_desc'">
				order by tg.regdate desc
			</when>
			<otherwise>
				order by tg.regdate desc
			</otherwise>
		</choose>
    </select>

    <!-- 사은품 추가 -->
    <insert id="insertGift" parameterType="somap" useGeneratedKeys="true" keyProperty="giftidx">
    	INSERT INTO t_gift /* GiftMapper.xml - insertGift 사은품 추가 */
    	(giftcode, giftname, giftstockcnt, istrash, giftinfo, giftinfomobile, reguserid, regdate)
    	VALUES(fn_get_gift_code(), #{giftname}, 0, #{istrash}, #{giftinfo}, #{giftinfomobile}, #{reguserid}, now())
    </insert>
    
    <!-- 사은품 상세 조회 -->
    <select id="selectGiftDetail" parameterType="somap" resultType="somap">
    	SELECT  /* GiftMapper.xml - selectGiftDetail 사은품 상세 조회 */
    		giftidx
    		, giftcode
    		, giftname
    		, giftstockcnt
    		, istrash
    		, giftinfo
    		, giftinfomobile
    		, date_format(regdate, '%Y-%m-%d') AS regdate 
    		, ifnull(date_format(moddate, '%Y-%m-%d'),'') AS moddate 
    	FROM t_gift
    	WHERE giftidx = #{giftidx}
    </select>
    
    <!-- 사은품 수정 -->
    <update id="modifyGift" parameterType="somap">
    	UPDATE t_gift  /* GiftMapper.xml - modifyGift 사은품 수정 */
    	SET giftname = #{giftname}, istrash = #{istrash}
    	, giftinfo = #{giftinfo}, giftinfomobile = #{giftinfomobile}, moduserid = #{moduserid}, moddate = now()
    	WHERE giftidx = #{giftidx}
    </update>
    
	<!-- ADMIN 쿼리 끝 -->
	
	<!-- FRONT 쿼리 시작 -->
	<select id="selectGiftListByGoods" parameterType="somap" resultType="somap">
		/* GiftMapper - selectGiftListByGoods 상품별 프로모션 사은품 조회*/
		WITH goodslist AS (
			SELECT goodsno, optioncode
			FROM (
			<foreach item="item" collection="items" separator="UNION ALL">
	        	 SELECT 
	        	 	  #{item.goodsno} as goodsno
	        	 	, #{item.optioncode} as optioncode
	        	 	, #{item.ordcnt} as ordcnt
	        </foreach>
	        ) t
	        WHERE ordcnt > 0
		), promo AS ( /* 회원 채널,등급,유형 프로모션 */
	        SELECT 
	        	  promoidx
                , promoname
                , promostday
                , promoedday
                , istotcate
                , goodsrangetype
                , gifttermtype
                , ifnull(giftgoodscnt, 1) as giftgoodscnt
                , ifnull(giftselcnt, 1) as giftselcnt
                , if(isorderprice is null or isorderprice = '', 'F', isorderprice) as isorderprice
                , ifnull(orderfromprice, 0) as orderfromprice
                , ifnull(ordertoprice, 999999999) as ordertoprice
	        FROM t_promotion
	        WHERE promodivtype = 'PDT002'   -- 프로모션구분(사은품)
	        AND muappchtype like concat('%', #{platform}, '%') -- 다중적용채널
	        AND mumemlvtype like concat('%', #{memlvtype}, '%') -- 다중대상회원등급
	        AND mumembertype like concat('%', #{membertype}, '%') -- 다중대상회원유형
	        <choose>
	        <when test='gifttermtype != null and gifttermtype !=""'>
	        AND gifttermtype = #{gifttermtype}
	        </when>
	        <when test='isfirst != "T"'>
	        AND gifttermtype <![CDATA[<>]]> 'GFT004'
	        </when>
	        <otherwise>
	        </otherwise>
	        </choose>
	        <choose>
	        <when test='promodate != null and promodate != ""'>
	        AND #{promodate} BETWEEN promostday AND promoedday
	        </when>
	        <otherwise>
	        AND date_format(sysdate(), '%Y%m%d%H%i') BETWEEN promostday AND promoedday
	        </otherwise>
	        </choose>
	        AND istrash = 'F'
	    ), allpromo AS ( /* 전체카테고리, 전체상품 프로모션 */
	        SELECT promoidx
	        FROM promo
			WHERE istotcate = 'T'
	        AND goodsrangetype = 'GGT001'
	    ), incatepromo AS ( /* 추가카테고리 프로모션 */
	        SELECT a.promoidx, b.cateidx
	        FROM promo a
	        INNER JOIN t_promo_cate b
	        ON a.promoidx = b.promoidx
	        AND b.isadd = 'T'
	        WHERE a.istotcate = 'F'
	    ), ingoodspromo AS ( /* 추가상품 프로모션 */
	        SELECT a.promoidx, b.goodsno, b.optioncode
	        FROM promo a
	        INNER JOIN t_promo_goods b 
	        ON a.promoidx = b.promoidx
	        WHERE a.goodsrangetype = 'GGT002'
	    ), outcatepromo AS ( /* 제외카테고리 프로모션 */
	        select a.promoidx, b.cateidx
	        from promo a
	        inner join t_promo_cate b 
	        on b.promoidx = b.promoidx
	        and b.isadd = 'F'
	        WHERE a.istotcate = 'F'
	    ), outgoodspromo AS ( /* 제외상품 프로모션 */
	        SELECT a.promoidx, b.goodsno, b.optioncode
	        FROM promo a
	        INNER JOIN t_promo_goods b 
	        ON a.promoidx = b.promoidx
	        WHERE a.goodsrangetype = 'GGT003'
	    ), goods AS (
	        SELECT a.goodsno, b.optioncode, ifnull(c.cateidx, 0) as cateidx
	        FROM goodslist a
	        INNER JOIN t_goods_option_detail b
		    ON a.goodsno = b.goodsno
		    <if test='isoption != null and isoption == "T"'>
		    AND a.optioncode = b.optioncode
		    </if>
		    INNER JOIN t_goods_category c
		    ON a.goodsno = c.goodsno
	    )
	    SELECT
	    	  ttt1.promoidx
	    	, ttt1.promoname
	        , ttt1.promoidx as giftpromoidx
	        , ttt1.gifttermtype
	        , ttt1.giftgoodscnt
	        , ttt1.giftselcnt
	        , ttt1.isorderprice
	        , ttt1.orderfromprice
	        , ttt1.ordertoprice
	        , ttt2.giftidx
	        , ttt2.fcfscnt
	        , ttt2.usecnt
	        , case 
	        	when ttt1.gifttermtype = 'GFT001' then TRUNCATE(ttt1.goodscnt / giftgoodscnt, 0) /* 사은품 지급수량(단품종류수량/구매조건, 소수점버림) */
	        	else 1
	          end as rcvamt 
	        , ttt3.giftcode
	        , ttt3.giftname
	        , ttt3.giftinfo
	        , ttt3.giftinfomobile
	        , fn_get_file_url(ttt2.giftidx, 'FLT001', #{imgtype}) as fullpath
	    FROM (
	        SELECT DISTINCT
	        	  tt2.*
	        	, COUNT(*) OVER(PARTITION by tt1.promoidx) as goodscnt /* 사은품 조건 단품종류수량 */
	        FROM (
	            /*전체적용 프로모션 */
	            SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
                FROM goods a, allpromo b
	            UNION ALL
	            /*카테고리포함 프로모션 */
	            SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
	            FROM goods a
	            INNER JOIN (
	                WITH RECURSIVE inpromo AS (
		                SELECT promoidx, cateidx
		                FROM incatepromo
		                UNION ALL
		                SELECT t2.promoidx, idx
		                FROM t_category t1, inpromo t2
		                WHERE t1.parent = t2.cateidx
	                )
	                SELECT promoidx, cateidx from inpromo
	            ) b
	            ON a.cateidx = b.cateidx
	            UNION ALL
	            /*카테고리포함 프로모션 */
	            SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
	            FROM goods a
	            LEFT JOIN (
	                WITH RECURSIVE outpromo AS (
		                SELECT promoidx, cateidx
		                FROM outcatepromo
		                UNION ALL
		                SELECT t2.promoidx, idx
		                FROM t_category t1, outpromo t2
		                WHERE t1.parent = t2.cateidx
	                )
	                SELECT promoidx, cateidx from outpromo
	            ) b
	            ON a.cateidx = b.cateidx
	            WHERE b.cateidx IS NULL
	            UNION ALL
	            /*특정상품포함 프로모션 */
	            SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
	            FROM goods a
	            INNER JOIN ingoodspromo b
	            ON a.goodsno = b.goodsno
	            AND a.optioncode = b.optioncode
	            UNION ALL
	            /*특정상품제외 프로모션 */
	            SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
	            FROM goods a
	            LEFT JOIN outgoodspromo b
	            ON a.goodsno = b.goodsno
	            AND a.optioncode = b.optioncode
	            WHERE b.goodsno IS NULL
	        ) tt1
	        INNER JOIN promo tt2
	        ON tt1.promoidx = tt2.promoidx
	    ) ttt1
	    INNER JOIN t_promo_gift ttt2
	    ON ttt1.promoidx = ttt2.promoidx
	    AND (ttt2.fcfscnt - usecnt) > 0
	    INNER JOIN t_gift ttt3
	    ON ttt2.giftidx = ttt3.giftidx
	    AND ttt3.istrash = 'F'
	    WHERE ttt1.giftgoodscnt <![CDATA[<=]]> ttt1.goodscnt
	    <if test='ordtotprice > 0 or rpaytotprice > 0'>
	    AND (
	    	(ttt1.isorderprice = 'T' AND #{ordtotprice} BETWEEN ttt1.orderfromprice AND ttt1.ordertoprice) OR
	    	(ttt1.isorderprice = 'F' AND #{rpaytotprice} BETWEEN ttt1.orderfromprice AND ttt1.ordertoprice)
	    )
	    </if>
	    ORDER BY ttt1.promoidx, ttt2.disporder
	</select>
	<!-- FRONT 쿼리 끝 -->

	<select id="selectGiftERPData" parameterType="somap" resultType="somap">
		SELECT
			A.GIFTIDX, A.GIFTCODE, A.GIFTNAME, A.GIFTSTOCKCNT, A.GIFTINFO, A.GIFTINFOMOBILE, A.ISTRASH, B.IFLOGIDX, B.AUD_TYPE_CD, DATE_FORMAT(B.REGDATE, '%Y%m%d%H%i') AS REGDATE
		FROM T_GIFT A INNER JOIN (
			SELECT
				ORGNO, GROUP_CONCAT(IFLOGIDX) AS IFLOGIDX, MIN(REGDATE) AS REGDATE
				 ,AUDDIV AS AUD_TYPE_CD
			FROM T_IFLOG A
			WHERE IFTYPE = 'IFT019'
			  AND IFDATE IS NULL
			GROUP BY ORGNO, AUDDIV
		)B ON A.GIFTIDX = B.ORGNO
		ORDER BY B.REGDATE
	</select>

	<select id="selectGiftStockUpdateList" parameterType="somap" resultType="somap">
		SELECT
			GIFTIDX
		FROM T_GIFT
		WHERE ISTRASH = 'F'
	</select>

	<update id="updateGiftStockCntLoop" parameterType="somap">
		<foreach collection="gift" index="index" item="item" separator=";">
			UPDATE
				T_GIFT
			SET GIFTSTOCKCNT = #{gift.avail_qty}
			WHERE GIFTIDX = #{gift.giftidx}
		</foreach>
	</update>
</mapper>
