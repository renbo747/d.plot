<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.ComOrderGoodsMapper">

	<select id="selectComOrderGoodsList" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectComOrderGoodsList 주문상품 목록조회 */
			tt1.*
			, (SELECT detail FROM T_COMMON_CODE WHERE CMCLASS = 'ORDSTATUS' AND CMCODE = tt1.ordstatus) as ordstatusnm
			, FN_GET_CONFIRM_RESERVE(siteid, dadamembertype, memlvtype, ifnull(goodsamt2, goodsamt1), 'F') as paypoint
		FROM (
			SELECT
				a.ordgdidx
				, a.orderidx
				, a.goodsturn
				, a.dealerno
				, case 
			    	when a.dealerno is null or a.dealerno = 0 then 'D.PLOT'
			    	else (select name from t_dealer where userno = a.dealerno)
			      end as dealernm
				, a.goodsno
				, b.goodscode
				, b.goodsname
				, (select enname from t_brand where idx = b.brandidx) as brandname -- 브랜드명
				, FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, ', ') as optionname
				, FN_GET_OPTION_CONCAT(a.goodsno, a.optioncode, ' | ') as frontoptionname
				, FN_GET_OPTION_CONCAT(a.goodsno, a.optioncode, ', ') as fulloptionnm
				, fullcategoryname
				, a.optioncode
				, a.frstordcnt as ordcnt
				, a.frstordcnt as origincnt
				, a.price
				, a.salepromoamt
				, a.salepromoidx
				, a.goodscpnamt
				, a.delivfaretype
				, a.delivamt
				, a.delivcpnamt
				, a.realgoodsamt
				, a.reserveamt
				, a.epointamt
				, a.empreserveamt
				, a.basketdivamt
				, a.iscancel
				, a.isrefund
				, a.isexchange
				, a.istrash
				, a.isaddgoods
				, a.orggoodsno
				, a.delivtype
				, a.basedelivamt
				, a.isodelivamt
				, a.iscombdeliv 	/* 묶음배송여부 */
	            , a.delivfare       /* 배송비 */
	            , a.chejufare       /* 제주배송비 */
	            , a.isolfare        /* 도서산간배송비 */
	            , a.delivfreefare   /* 조건부주문금액 */
				, FN_GET_FILE_URL(a.goodsno, 'FLT001', #{imgtype}) AS fullpath
				, FN_GET_ORDER_STATUS(a.ordgdidx) as ordstatus
				, ifnull(c.cncclmcnt, 0) as cncclmcnt
				, ifnull(c.excclmcnt, 0) as excclmcnt
				, a.realgoodsamt - a.reserveamt - a.epointamt - a.basketdivamt  as goodsamt1
				, FN_GET_CLAIM_CNT(a.ordgdidx) as clmingcnt
				, IF((
                     SELECT count(*)
		             FROM t_goods_review
		             WHERE ISTRASH  = 'F'
		             AND ORDERIDX  = a.ORDERIDX
		             AND ORDGDIDX = a.ORDGDIDX
                   )> 0 , 'T', 'F') AS isreview
                , d.siteid
                , d.dadamembertype
                , d.memlvtype
                , (
	               	SELECT 
	               		  t2.realgoodsamt - t2.reserveamt - t2.epointamt - t2.basketdivamt
	               	FROM t_claim t1
	               	INNER JOIN t_claim_goods t2
	               	ON t1.clmidx = t2.clmidx
	               	WHERE t1.orderidx = #{orderidx}
	               	AND t2.ordgdidx = a.ordgdidx
	               	AND t2.isclmoption = 'F'
	               	ORDER BY t1.moddate DESC
	               	LIMIT 1
                ) as goodsamt2
			FROM t_comorder_goods a
			INNER JOIN t_goods b 
			on a.goodsno = b.goodsno
			LEFT OUTER JOIN (
				WITH CATEGORY AS (
					SELECT IDX, NAME, DEPTH, PARENT
					FROM T_CATEGORY
				)
				SELECT
					 T.CATEIDX, T.DEPTH1IDX, T.DEPTH2IDX, T.DEPTH3IDX, T.DEPTH4IDX, T.FULLCATEGORYNAME
				FROM (
					SELECT
						  A.IDX AS DEPTH1IDX, B.IDX AS DEPTH2IDX, C.IDX AS DEPTH3IDX, D.IDX AS DEPTH4IDX
						, CONCAT_WS(', ', A.NAME, B.NAME, C.NAME, D.NAME) AS FULLCATEGORYNAME
						, (CASE WHEN D.IDX IS NOT NULL THEN D.IDX
								WHEN C.IDX IS NOT NULL THEN C.IDX
								WHEN B.IDX IS NOT NULL THEN B.IDX
							ELSE A.IDX END) AS CATEIDX
					FROM CATEGORY A
					LEFT OUTER JOIN CATEGORY B ON A.IDX = B.PARENT
					LEFT OUTER JOIN CATEGORY C ON B.IDX = C.PARENT
					LEFT OUTER JOIN CATEGORY D ON C.IDX = D.PARENT
					WHERE A.DEPTH = 1
				) T
			) F ON F.CATEIDX = (select cateidx from t_goods_category where goodsno = a.goodsno and isrepre = 'T')
			LEFT JOIN (
                SELECT
                      tb.ordgdidx
                    , sum(if(ta.clmtype='CLM003', 0, tb.clmcnt)) as cncclmcnt
                    , sum(if(ta.clmtype='CLM003' and tc.bfclmidx = 0, tb.clmcnt, 0)) - sum(if(ta.clmtype='CLM002' and tc.bfclmidx <![CDATA[<>]]> 0, tb.clmcnt, 0)) as excclmcnt
                    , sum(if(ta.clmtype='CLM003', 0, tb.realgoodsamt)) AS realgoodsamt
                FROM t_claim ta
                INNER JOIN t_claim_goods tb 
                ON ta.clmidx = tb.clmidx 
                AND tb.isclmoption = 'T'
                LEFT JOIN t_exchange_hist tc
				ON ta.clmidx = tc.afclmidx
                WHERE ta.orderidx = #{orderidx}
                AND (tb.CNCSTATUS NOT IN ('CNS003','CNS004') OR ta.RTNSTATUS NOT IN ('RTS004','RTS005','RTS009') OR ta.EXCSTATUS NOT IN ('EXS004','EXS005','EXS011')) -- 반려, 철회, 반송
                AND ta.istrash = 'F'
                GROUP BY tb.ordgdidx
            ) c 
            ON a.ordgdidx = c.ordgdidx
            INNER JOIN t_comorder d 
            ON a.orderidx = d.orderidx
			WHERE a.orderidx = #{orderidx}
			AND a.istrash = 'F'
		) tt1
	</select>
	
	<select id="selectComOrderGoodsReserveAmt" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectComOrderGoodsReserveAmt 주문상품 적립금 */
              tt1.*
            , (SELECT detail FROM T_COMMON_CODE WHERE CMCLASS = 'ORDSTATUS' AND CMCODE = tt1.ordstatus) as ordstatusnm
            , FN_GET_CONFIRM_RESERVE(siteid, dadamembertype, memlvtype, realgoodsamt - reserveamt - epointamt - basketdivamt, isfirst) as paypoint
        FROM (
            SELECT
                a.ordgdidx
                , a.orderidx
                , a.dealerno
                , case 
                    when a.dealerno is null or a.dealerno = 0 then 'D.PLOT'
                    else (select name from t_dealer where userno = a.dealerno)
                  end as dealernm
                , a.goodsno
                , b.goodsname
                , b.ispbgoods
                , b.isfrstsale
                , case
                	when b.isfrstsale = 'T' and FN_GET_ORDER_FIRST_CONFIRM(d.userno) = 'T' then 'T'
                	else 'F'
                  end as isfirst 
                , (select name from t_brand where idx = b.brandidx) as brandname -- 브랜드명
                , FN_GET_OPTION_CONCAT(a.goodsno, a.optioncode, ' | ') as optionname
                , a.optioncode
                , a.frstordcnt as ordcnt
                , a.price
                , a.delivfaretype
                , ifnull(c.realgoodsamt, a.realgoodsamt) as realgoodsamt
                , ifnull(c.reserveamt, a.reserveamt) as reserveamt
                , ifnull(c.epointamt, a.epointamt) as epointamt
                , ifnull(c.basketdivamt, a.basketdivamt) as basketdivamt
                , a.empreserveamt
                , FN_GET_FILE_URL(a.goodsno, 'FLT001', #{imgtype}) AS fullpath
                , FN_GET_ORDER_STATUS(a.ordgdidx) as ordstatus
                , d.siteid
                , d.dadamembertype
                , d.memlvtype
                , d.isnonmember
            FROM t_comorder_goods a
            INNER JOIN t_goods b 
            on a.goodsno = b.goodsno
            LEFT JOIN (
               	SELECT 
               		  t2.ordgdidx
               		, t2.realgoodsamt
               		, t2.reserveamt
               		, t2.epointamt
               		, t2.basketdivamt
               	FROM t_claim t1
               	INNER JOIN t_claim_goods t2
               	ON t1.clmidx = t2.clmidx
               	WHERE t1.orderidx = #{orderidx}
               	AND t2.ordgdidx = #{ordgdidx} 
               	AND t2.isclmoption = 'F'
               	ORDER BY t1.moddate DESC
               	LIMIT 1
            ) c
            ON a.ordgdidx = c.ordgdidx
            INNER JOIN t_comorder d 
            ON a.orderidx = d.orderidx
            WHERE a.orderidx = #{orderidx}
            AND a.ordgdidx = #{ordgdidx} 
            AND a.istrash = 'F'
        ) tt1
	</select>
	
	<select id="selectComOrderGoods" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectComOrderGoods 주문상품 목록조회 */
			  a.ordgdidx
			, a.orderidx
			, a.goodsturn
			, a.dealerno
			, case 
		    	when a.dealerno is null or a.dealerno = 0 then 'D.PLOT'
		    	else (select name from t_dealer where userno = a.dealerno)
		      end as dealernm
		    , (select tel from t_dealer_info where DEALERNO = a.dealerno) as dealertel
			, a.goodsno
			, b.goodscode
			, b.goodsname
			, (select name from t_brand where idx = b.brandidx) as brandname -- 브랜드명
			, FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, ', ') as optionname
			, a.optioncode
			, a.frstordcnt - ifnull(f.clmcnt, 0) as ordcnt
            <if test="state == 'ODS009'">
            , a.frstordcnt - ifnull(f.clmcnt, 0) - 
            	ifnull((
            	select 
            		sum(ascnt) 
           		from t_asinquiry 
           		where userno = #{userno}
           		and ordno = #{ordno}
           		and goodsno = a.goodsno 
           		and optioncode = a.optioncode 
           		and ISTRASH = 'F'
           		),0) as asordcnt
        	</if>  			
			, a.price
			, a.salepromoamt
			, a.salepromoidx
			, a.goodscpnamt
			, a.delivfaretype
			, a.delivamt
			, a.delivcpnamt
			, a.realgoodsamt
			, a.reserveamt
			, a.epointamt
			, a.empreserveamt
			, a.iscancel
			, a.isrefund
			, a.isexchange
			, a.istrash
			, a.isaddgoods
			, a.orggoodsno
			, a.delivtype
			, a.basedelivamt
			, a.isodelivamt
			<if test='imgtype != null and imgtype != ""'>
			, FN_GET_FILE_URL(a.goodsno, 'FLT001', #{imgtype}) as fullpath
			</if>
			, FN_GET_OPTION_CONCAT(a.goodsno, a.optioncode, ' | ') as frontoptionname
			, g.rcvname 
			, g.rcvtel1
			, g.rcvaddr 
			, g.rcvpost 
			, g.rcvaddrdetail 
			, g.rcvaddrroad 
			, g.rcvaddrdetailroad			
			, g.rcvsigungucode 
			, g.rcvbuildingcode
			, g.rcvroadnamecode			
			, g.ordno		
		FROM t_comorder_goods a
		INNER JOIN t_goods b 
		on a.goodsno = b.goodsno
	    LEFT JOIN (
            SELECT
                  ordgdidx
                , sum(if(clmtype='CLM003', 0, t2.clmcnt)) as clmcnt
                , sum(if(clmtype='CLM003', 0, t2.realgoodsamt)) as realgoodsamt
            FROM T_CLAIM t1
            INNER JOIN t_claim_goods t2
            ON t1.CLMIDX = t2.CLMIDX
            WHERE t1.ISTRASH = 'F'
            AND (t2.CNCSTATUS NOT IN ('CNS003','CNS004') OR t1.RTNSTATUS NOT IN ('RTS004','RTS005', 'RTS009') OR t1.EXCSTATUS NOT IN ('EXS004','EXS005')) -- 반려, 철회, 철회
            GROUP BY ordgdidx, goodscpnidx
            ) f
        ON a.ordgdidx = f.ordgdidx		
        LEFT JOIN t_comorder g
        on a.orderidx = g.orderidx         
		WHERE a.ordgdidx = #{ordgdidx}
	</select>
	
	
	<insert id="insertComOrderGoods" parameterType="somap" useGeneratedKeys="true" keyProperty="ordgdidx">
		INSERT   /* ComOrderGoodsMapper - insertComOrderGoods 주문상품정보 저장*/
			INTO t_comorder_goods (
			  orderidx
			, goodsturn
			, dealerno
			, goodsno
			, optioncode
			, frstordcnt
			, price
			, salepromoamt
			, salepromoidx
			, goodscpnamt
			, goodscpnidx
			, delivfaretype
			, delivamt
			, delivcpnamt
			, realgoodsamt
			, reserveamt
			, epointamt
			, empreserveamt
			, basketdivamt
			, isaddgoods
			, orggoodsno
			, delivtype
			, commrate
			, basedelivamt
			, isodelivamt
			, iscombdeliv
			, delivfare
			, delivfreefare
			, chejufare
			, isolfare
			, iscancel
			, isrefund
			, isexchange
			, istrash
			, reguserid
			, regdate
		) VALUES (
			  #{orderidx}
			, #{goodsturn}
			, #{dealerno}
			, #{goodsno}
			, #{optioncode}
			, #{ordcnt}
			, #{price}
			, #{salepromoamt}
			, #{salepromoidx}
			, #{goodscpnamt}
			, #{goodscpnidx}
			, #{delivfaretype}
			, #{delivamt}
			, #{delivcpnamt}
			, #{realgoodsamt}
			, #{reserveamt}
			, #{epointamt}
			, #{empreserveamt}
			, #{basketdivamt}
			, #{isaddgoods}
			, #{orggoodsno}
			, #{delivtype}
			, #{commrate}
			, #{basedelivamt}
			, #{isodelivamt}
			, #{iscombdeliv}
			, #{delivfare}
			, #{delivfreefare}
			, #{chejufare}
			, #{isolfare}
			, 'F'
			, 'F'
			, 'F'
			, 'F'
			, #{userid}
			, sysdate()
		)
	</insert>
	
	<!-- 주문상태별 갯수 조회 -->
	<select id="selectOrderGoodsCnt" parameterType="somap" resultType="somap">
		SELECT /*ComOrderGoodsMapper.xml - selectOrderGoodsCnt::주문상태별 갯수 조회 */
		      IFNULL(SUM(tt.waitingcnt), 0) AS waitingcnt
		    , IFNULL(SUM(tt.cancelcnt), 0) AS cancelcnt
		    , IFNULL(SUM(tt.comppaycnt), 0) AS comppaycnt
		    , IFNULL(SUM(tt.prepgoodscnt), 0) AS prepgoodscnt
		    , IFNULL(SUM(tt.prepdelivcnt), 0) AS prepdelivcnt
		    , IFNULL(SUM(tt.indelivcnt), 0) AS indelivcnt /* 배송완료에 교환건 포함*/
		    , IFNULL(SUM(tt.compdelivcnt), 0) AS compdelivcnt
		    , IFNULL(SUM(tt.confirmcnt), 0) AS confirmcnt
		FROM (
		    SELECT
		          (CASE WHEN t.ordstatus = 'ODS001' THEN 1 ELSE 0 END) AS waitingcnt      /* 주문상태-입금대기 */
		        , (CASE WHEN t.ordstatus = 'ODS002' THEN 1 ELSE 0 END) AS cancelcnt       /* 주문상태-입금전취소 */
		        , (CASE WHEN t.ordstatus = 'ODS003' THEN 1 ELSE 0 END) AS comppaycnt      /* 주문상태-결제완료 */
		        , (CASE WHEN t.ordstatus = 'ODS004' THEN 1 ELSE 0 END) AS prepgoodscnt    /* 주문상태-상품준비중 */
		        , (CASE WHEN t.ordstatus = 'ODS006' THEN 1 ELSE 0 END) AS prepdelivcnt    /* 주문상태-배송준비중 */
		        , (CASE WHEN t.ordstatus = 'ODS007' THEN 1 ELSE 0 END) AS indelivcnt      /* 주문상태-배송중 */
		        , (CASE WHEN t.ordstatus = 'ODS008' THEN 1 ELSE 0 END) AS compdelivcnt    /* 주문상태-배송완료 */
		        , (CASE WHEN t.ordstatus = 'ODS009' THEN 1 ELSE 0 END) AS confirmcnt      /* 주문상태-구매확정 */
		    FROM (
		        SELECT
		              FN_GET_ORDER_STATUS(b.ordgdidx) as ordstatus
		            , b.frstordcnt - ifnull(c.clmcnt, 0) as ordcnt
		            , c.clmcnt
		        FROM t_comorder a
		        INNER JOIN t_comorder_goods b 
		        ON a.orderidx = b.orderidx
		        LEFT JOIN (
		            SELECT
		                  ordgdidx
		                , sum(
		                    case
		                        when t1.clmtype = 'CLM001' AND t2.CNCSTATUS NOT IN ('CNS003','CNS004') then t2.clmcnt
		                        when t1.clmtype = 'CLM002' AND t1.RTNSTATUS NOT IN ('RTS004','RTS005','RTS009') then t2.clmcnt
		                        when t1.clmtype = 'CLM003' AND t1.EXCSTATUS NOT IN ('EXS004','EXS005','EXS011','EXS012') then t2.clmcnt
		                        else 0
		                    end) as clmcnt
		            FROM T_CLAIM t1
		            INNER JOIN t_claim_goods t2
		            ON t1.CLMIDX = t2.CLMIDX
		            AND t2.ISCLMOPTION = 'T'
		            WHERE t1.ISTRASH = 'F'
		            AND t2.ISTRASH = 'F'
		            GROUP BY ordgdidx
		        ) c
		        ON b.ordgdidx = c.ordgdidx
		        WHERE 1 = 1
		        <choose>
		        <when test='orderidx != null'>
		        AND a.orderidx = #{orderidx}
		        </when>
		        <when test='ordno != null and ordno != ""'>
		        AND a.ordno = #{ordno}
		        </when>
		        <otherwise>
		        AND a.userno = #{userno}
		        </otherwise>
		        </choose>
		        AND a.istrash = 'F'
		        AND b.istrash = 'F'
		        AND date_format(a.orderdate, '%Y-%m-%d') >= DATE_FORMAT(date_add(now(), interval -1 month),'%Y-%m-%d')
		    ) t
		    WHERE ordcnt > 0
		) tt
	</select>
	
	<select id="selectComOrderGoodsInfo" parameterType="somap" resultType="somap">
		SELECT /*ComOrderGoodsMapper.xml - selectComOrderGoodsInfo :: 관리자-주문상품정보 조회*/
			  b.ORDGDIDX  	/* 주문상품IDX */
			, b.ORDERIDX  	/* 주문IDX */
			, b.GOODSTURN 	/* 상품순번 */
			, b.GOODSNO  	/* 상품번호 */
			, b.OPTIONCODE  /* 옵션코드 */
			, b.FRSTORDCNT  /* 최초주문수량 */
			, b.PRICE  		/* 판매금액 */
			, b.DELIVAMT  	/* 배송비 */
			, b.ISCANCEL  	/* 취소여부 */
			, b.ISREFUND  	/* 반품여부 */
			, b.ISEXCHANGE  /* 교환여부 */
			, b.ISTRASH  	/* 삭제여부 */
			, b.DELIVTYPE 	/* 배송유형 */
			, c.ISPBGOODS  	/* 직매입상품여부 */
			, (	SELECT COUNT(*) 
				FROM t_comorder_goods_deliv 
				WHERE ISTRASH ='F'
				AND ORDGDIDX = b.ORDGDIDX
				AND ISTRACKING = 'T'
				AND TRCKERRMSG IS NULL
			  ) AS TRCKCNT
			, d.CNCPROCCNT
		FROM t_comorder a
		INNER JOIN t_comorder_goods b ON a.ORDERIDX = b.ORDERIDX AND b.ISTRASH = 'F'
		INNER JOIN t_goods c ON b.GOODSNO = c.GOODSNO
		LEFT JOIN (
            SELECT
            	  ta.orderidx, tb.ordgdidx
            	, SUM(tb.clmcnt) AS clmcnt
            	, SUM(CASE WHEN ta.clmtype='CLM001' AND tb.cncstatus <![CDATA[<>]]> 'CNS005' THEN tb.clmcnt ELSE 0 END) AS cncproccnt
                , SUM(CASE WHEN ta.clmtype='CLM001' AND tb.cncstatus = 'CNS005' THEN tb.clmcnt ELSE 0 END) AS cnccompcnt
                , SUM(CASE WHEN ta.clmtype='CLM002' AND ta.rtnstatus = 'RTS010' THEN tb.clmcnt ELSE 0 END) AS rtncompcnt
            FROM t_claim ta
            INNER JOIN t_claim_goods tb ON ta.clmidx = tb.clmidx and tb.isclmoption = 'T'
           	WHERE (tb.CNCSTATUS NOT IN ('CNS003','CNS004') OR ta.RTNSTATUS NOT IN ('RTS004','RTS005','RTS009') OR ta.EXCSTATUS NOT IN ('EXS004','EXS005','EXS011')) -- 반려, 철회, 반송
           	AND ta.istrash = 'F'
			GROUP BY ta.orderidx, tb.ordgdidx
        ) d ON a.orderidx = d.orderidx AND b.ordgdidx = d.ordgdidx
		WHERE a.ISTRASH = 'F'
		AND a.SITEID = #{siteid}
		AND a.ORDNO = #{ordno}
		AND c.GOODSCODE = #{goodscode}
		AND b.OPTIONCODE = #{optioncode}
		AND b.GOODSTURN = #{goodsturn}
	</select>
	
	<select id="selectAdminOrderGoodsList" parameterType="somap" resultType="somap">
		SELECT /*ComOrderGoodsMapper.xml - selectAdminOrderGoodsList :: 관리자-주문상품목록 조회*/
			  b.ordgdidx			/* 주문상품IDX */
			, c.ispbgoods 			/* 판매구분(직매입여부) */
			, IF(c.ispbgoods='T', '자사', '파트너사') AS ispbgoodsname		/* 판매구분명 */
			, (CASE WHEN b.dealerno is not null and b.dealerno != 0
					THEN (select name from t_dealer where userno = b.dealerno)
					ELSE ''
			   END) AS dealername	/* 파트너사명 */
			, c.goodscode 			/* 상품코드 */
			, b.optioncode			/* 단품코드 */
			, b.goodsturn 			/* 상품순번 */
			, FN_GET_FILE_URL(b.goodsno, 'FLT001', 'IGT003') AS fullpath	/* 이미지경로 */
			, c.goodsname 			/* 상품명 */
			, FN_GET_OPTION_DETAIL(b.goodsno, b.optioncode, #{separator}) AS optionconts	/* 옵션내용 */
			, d.delivcnt AS ordcnt 	/* 주문수량 */
			, b.price 				/* 판매단가 */
			, (d.delivcnt * b.price) AS totprice	/* 판매금액 */
			, date_format(a.paymentdate, '%Y-%m-%d') as paymentdate
			, a.ordno
			, a.orderidx
		FROM t_comorder a 
		INNER JOIN t_comorder_goods b 
			  ON a.orderidx = b.orderidx 
		INNER JOIN t_goods c 
			  ON b.goodsno = c.goodsno
		INNER JOIN (
			SELECT ordgdidx, SUM(delivcnt) AS delivcnt
			FROM t_comorder_goods_deliv
			WHERE istrash = 'F'
			GROUP BY ordgdidx
		) AS d ON b.ordgdidx = d.ordgdidx
		WHERE a.siteid = #{siteid}
		AND a.istrash = 'F'
		<if test="ordno != null and ordno != ''">
			AND a.ordno = #{ordno}
		</if>
		<if test="orderidx != null and orderidx != ''">
			AND a.orderidx = #{orderidx}
		</if>
		<if test="ordgdidx != null and ordgdidx != ''">
			AND b.ordgdidx = #{ordgdidx}
		</if>
		<if test="dealerno != null and dealerno != ''">
			AND b.dealerno = #{dealerno}
		</if>
		ORDER BY c.goodscode, b.optioncode, b.goodsturn
	</select>
	
	<select id="selectAdminOrderClaimGoodsList" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectAdminOrderClaimGoodsList 관리자-주문/클레임 상품목록 조회 */
			  ta.*
			, (CASE WHEN ta.clmtype = 'CLM001' THEN ta.cncstatus
			        WHEN ta.clmtype = 'CLM002' THEN ta.rtnstatus
			        WHEN ta.clmtype = 'CLM003' THEN ta.excstatus
			        ELSE ''
			   END) AS clmstatus
			, (CASE WHEN ta.clmtype = 'CLM001' THEN (SELECT CODENAME FROM T_COMMON_CODE WHERE CMCLASS = 'CNCSTATUS' AND CMCODE = ta.cncstatus)
			        WHEN ta.clmtype = 'CLM002' THEN (SELECT CODENAME FROM T_COMMON_CODE WHERE CMCLASS = 'RTNSTATUS' AND CMCODE = ta.rtnstatus)
			        WHEN ta.clmtype = 'CLM003' THEN (SELECT CODENAME FROM T_COMMON_CODE WHERE CMCLASS = 'EXCSTATUS' AND CMCODE = ta.excstatus)
			        ELSE ''
			   END) AS clmstatusname
		FROM (
			SELECT
				  a.ordgdidx							/* 주문상품IDX */
				, b.orderidx							/* 주문IDX */
				, b.ordno								/* 주문번호 */
				, c.orgdelividx							/* 주문배송IDX */
				, (CASE WHEN h.clmtype = 'CLM003' and h.clmidx is not null 
						THEN (SELECT clmgdidx FROM t_claim_goods WHERE clmidx = h.clmidx AND isclmoption = 'F' AND optioncode is not null)
		                ELSE i.clmgdidx
	               END) AS clmgdidx						/* 클레임상품IDX */
				, ROW_NUMBER() OVER(PARTITION BY a.orderidx, a.ordgdidx ORDER BY a.orderidx, a.ordgdidx, c.orgdelividx) AS orgdelivsort 
				, d.ispbgoods							/* 직매입여부 */
				, IF(d.ispbgoods='T', '자사', '파트너사') AS ispbgoodsname				/* 판매구분(직매입여부) */
				, a.dealerno							/* 입점업체번호 */
				, (CASE WHEN a.dealerno is not null and a.dealerno != 0
						THEN (select name from t_dealer where userno = a.dealerno)
						ELSE 'D.PLOT'
				   END) AS dealername					/* 입점업체명 */
				, a.goodsno								/* 상품일련번호 */
				, d.goodscode							/* 상품코드 */
				, a.optioncode							/* 단품코드 */
				, a.goodsturn							/* 상품순번 */
				, d.goodsname							/* 상품명 */
				, FN_GET_FILE_URL(a.goodsno, 'FLT001', 'IGT003') AS fullpath			/* 상품 이미지 경로 */
				, (CASE WHEN h.clmtype = 'CLM003' and j.BFCLMIDX > 0 then (SELECT FN_GET_OPTION_DETAIL(goodsno, optioncode, '\n') FROM t_claim_goods WHERE clmidx = j.bfclmidx AND ordgdidx = a.ordgdidx AND isclmoption = 'T')
		                ELSE FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, '\n')
	               END) AS optionconts					/* 옵션내용 */
            	, a.frstordcnt - ifnull(g.clmcompcnt, 0) - ifnull(g.exccompcnt, 0) AS ordcnt	/* 주문수량 */
				, a.price								/* 판매단가 */
				, (a.price * (a.frstordcnt - ifnull(g.clmcompcnt, 0) - ifnull(g.exccompcnt, 0))) AS totprice		/* 판매금액 */
				, e.vircusname							/* 입금자명 */
				, b.paywaytype							/* 결제수단 */
				, FN_GET_CODENAME(null, 'PAYWAYTYPE', b.paywaytype) AS paywaytypename	/* 결제수단명 */
				, IF(a.isaddgoods='T', 'Y', 'N') AS isaddgoods							/* 추가상품여부 */
				, IF(a.iscombdeliv='T', '묶음', '개별') AS iscombdelivname				/* 묶음배송여부명 */
				, a.delivfaretype						/* 배송비종류 */
				, FN_GET_CODENAME(null, 'DELIVFARETYPE', a.delivfaretype) AS delivfaretypename	/* 배송비종류명 */
				, a.delivamt							/* 배송비 */
				, c.ordstatus							/* 주문상태 */
				, FN_GET_CODENAME(null, 'ORDSTATUS', c.ordstatus) AS ordstatusname		/* 주문상태명 */
				, c.invoiceno							/* 운송장번호 */
				, IFNULL(c.logistype, (select LOGISTYPE from t_deliv_template where d.DELIVIDX = IDX)) as logistype							/* 택배사 */
				, FN_GET_CODENAME(null, 'LOGISTYPE', c.logistype) AS logistypename		/* 택배사명 */
				, (CASE WHEN f.ordcfmdate IS NULL OR f.ordcfmdate = ''
					    THEN '미확정'
					    ELSE CONCAT(DATE_FORMAT(f.ordcfmdate, '%Y-%m-%d %H:%i:%s'), ' (', FN_GET_CODENAME(null, 'ORDCFMTYPE', c.ordcfmtype), ')')
				   END) AS cfmconts						/* 구매확정내역 */
				, d.iscncappr							/* 취소승인필요여부 */
				, b.rcvname								/* 수령인명 */
				, CONCAT(b.rcvaddr, ' ', b.rcvaddrdetail) AS rcvaddr	/* 수령인주소(상세주소포함) */
				, c.istracking							/* 배송추적요청여부 */
				, c.trckerrmsg							/* 배송추적결과메시지 */
				, DATE_FORMAT(b.ORDERDATE, '%Y%m%d%H%i%s') AS ORDERDAY		/* 주문일 */
				, DATE_FORMAT(b.PAYMENTDATE, '%Y%m%d%H%i%s') AS PAYMENTDAY	/* 결제일 */
				, h.cncstatus
				, h.rtnstatus
				, h.clmtype
            	, CASE WHEN h.excstatus IN ('EXS008','EXS009','EXS010','EXS012')
            		   THEN 'EXS008' ELSE h.excstatus
            	   END as excstatus
				, a.delivtype
				, c.delivcnt - ifnull(g.rtncompcnt, 0) as delivcnt
				, a.frstordcnt - ifnull(g.excludecnt, 0) AS origincnt
				, g.cncproccnt
				, g.rtnproccnt
				, g.excproccnt
				, FN_GET_CLAIM_CNT(a.ordgdidx) AS clmingcnt
				, c.dirdelivmsg
			FROM t_comorder_goods a
			INNER JOIN t_comorder b ON a.orderidx = b.orderidx AND b.istrash = 'F'
			INNER JOIN t_comorder_goods_deliv c ON a.ordgdidx = c.ordgdidx AND c.istrash = 'F'
			INNER JOIN t_goods d ON a.goodsno = d.goodsno
			LEFT OUTER JOIN t_tossreceipt e ON b.orderidx = e.orderidx
			LEFT OUTER JOIN (
				SELECT t.orgdelividx
					 , MAX(t.ordcfmdate) AS ordcfmdate
				FROM (SELECT cgh.orgdelividx
						   , IF(cgh.aftval = 'ODS009', cgh.regdate, '') AS ordcfmdate		/* 구매확정 */
						FROM t_comorder_goods_his cgh 
					) t
				GROUP BY t.orgdelividx
				ORDER BY t.orgdelividx
			) f ON c.orgdelividx = f.orgdelividx
			LEFT JOIN (
	            SELECT
					  ta.orderidx, tb.ordgdidx, max(ta.clmidx) AS clmidx, max(tb.clmgdidx) AS clmgdidx
					, SUM(tb.clmcnt) AS totclmcnt
				    , SUM(CASE WHEN tb.cncstatus NOT IN ('CNS003','CNS004') OR ta.RTNSTATUS NOT IN ('RTS004','RTS005','RTS009') OR ta.excstatus IN ('EXS009','EXS010','EXS011')
				    		   THEN tb.clmcnt ELSE 0 END) AS excludecnt
		            , SUM(CASE WHEN ta.clmtype='CLM001' AND ta.cncstatus NOT IN ('CNS003', 'CNS004', 'CNS005') THEN tb.clmcnt ELSE 0 END) AS cncproccnt
		            , SUM(CASE WHEN ta.clmtype='CLM002' AND ta.rtnstatus NOT IN ('RTS004', 'RTS005', 'RTS009', 'RTS010') THEN tb.clmcnt ELSE 0 END) AS rtnproccnt
		            , SUM(CASE WHEN ta.clmtype='CLM003' AND ta.excstatus NOT IN ('EXS004', 'EXS005', 'EXS012') THEN tb.clmcnt ELSE 0 END) AS excproccnt
				    , SUM(CASE WHEN tb.cncstatus = 'CNS005' OR ta.rtnstatus = 'RTS010' THEN tb.clmcnt ELSE 0 END) AS clmcompcnt
				    , SUM(CASE WHEN ta.rtnstatus = 'RTS010' THEN tb.clmcnt ELSE 0 END) AS rtncompcnt
				    , SUM(CASE WHEN ta.excstatus IN ('EXS009','EXS010','EXS011','EXS012') THEN tb.clmcnt ELSE 0 END) AS returncompcnt
				    , SUM(if(ta.excstatus = 'EXS012' AND tc.bfclmidx = 0, tb.clmcnt, 0)) - sum(if(tc.bfclmidx <![CDATA[<>]]> 0 AND ta.rtnstatus = 'RTS010', tb.clmcnt, 0)) as exccompcnt
			    FROM t_claim ta
			    INNER JOIN t_claim_goods tb ON ta.clmidx = tb.clmidx and tb.isclmoption = 'T' AND ta.istrash = 'F'
				LEFT JOIN t_exchange_hist tc ON ta.clmidx = tc.afclmidx
			    WHERE ta.istrash = 'F'
				GROUP BY ta.orderidx, tb.ordgdidx
				ORDER BY ta.orderidx DESC, tb.ordgdidx DESC
	        ) g ON a.orderidx = g.orderidx AND a.ordgdidx = g.ordgdidx
	        LEFT JOIN t_claim h ON g.clmidx = h.clmidx
	        LEFT JOIN t_claim_goods i ON g.clmidx = i.clmidx AND g.clmgdidx = i.clmgdidx
			LEFT OUTER JOIN T_EXCHANGE_HIST j ON h.CLMIDX = j.AFCLMIDX
			WHERE b.siteid = #{siteid}
			AND b.ordno = #{ordno}
			<if test='dealerno != null and dealerno != ""'>
			AND a.dealerno = #{dealerno}
			</if>
		) ta
		WHERE ta.ordcnt <![CDATA[>]]> 0
		ORDER BY ta.goodsno, ta.optioncode
	</select>
	
	<select id="selectAdminCommonOrderGoodsList" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectAdminCommonOrderGoodsList 관리자-공통 주문내역 조회 */
			  ta.*
		FROM (
			SELECT
				  a.ordgdidx							/* 주문상품IDX */
				, b.orderidx							/* 주문IDX */
				, b.ordno								/* 주문번호 */
				, IF(b.isnonmember = 'T', '비회원', '회원') AS isnonmembername	/* 비회원여부 */
				, b.ordname								/* 주문자명 */
				, f.userid AS ordid						/* 주문자ID */
				, c.orgdelividx							/* 주문배송IDX */
				, d.ispbgoods							/* 직매입여부 */
				, IF(d.ispbgoods='T', '자사', '파트너사') AS ispbgoodsname				/* 판매구분(직매입여부) */
				, a.dealerno							/* 입점업체번호 */
				, (CASE WHEN a.dealerno is not null and a.dealerno != 0
						THEN (select name from t_dealer where userno = a.dealerno)
						ELSE ''
				   END) AS dealername					/* 입점업체명 */
				, a.goodsno								/* 상품일련번호 */
				, d.goodscode							/* 상품코드 */
				, a.optioncode							/* 단품코드 */
				, a.goodsturn							/* 상품순번 */
				, d.goodsname							/* 상품명 */
				, FN_GET_FILE_URL(a.goodsno, 'FLT001', 'IGT003') AS fullpath			/* 상품 이미지 경로 */
				, FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, '\n') AS optionconts	/* 옵션내용 */
				, a.frstordcnt - ifnull(h.clmcompcnt, 0) AS ordcnt						/* 주문수량 */
				, a.price								/* 판매단가 */
				, (a.price * (a.frstordcnt - ifnull(h.clmcompcnt, 0))) AS totprice		/* 판매금액 */
				, c.delivcnt - ifnull(h.rtncompcnt, 0) as delivcnt /* 배송수량 */
				, c.ordstatus							/* 주문상태 */
				, c.invoiceno							/* 운송장번호 */
				, (CASE WHEN g.ordcfmdate IS NULL OR g.ordcfmdate = ''
					    THEN '미확정'
					    ELSE CONCAT(DATE_FORMAT(g.ordcfmdate, '%Y-%m-%d %H:%i:%s'), ' (', FN_GET_CODENAME(null, 'ORDCFMTYPE', c.ordcfmtype), ')')
				   END) AS cfmconts						/* 구매확정내역 */
				, DATE_FORMAT(b.ORDERDATE, '%Y-%m-%d %H:%i:%s') AS orderdate		/* 주문일 */
				, DATE_FORMAT(b.PAYMENTDATE, '%Y-%m-%d %H:%i:%s') AS paymentdate	/* 결제일 */
				, FN_GET_CODENAME(null, 'ORDSTATUS', c.ordstatus) AS statusname
				, a.frstordcnt - ifnull(h.clmcnt, 0) AS origincnt
			FROM t_comorder_goods a
			INNER JOIN t_comorder b ON a.orderidx = b.orderidx AND b.istrash = 'F'
			INNER JOIN t_comorder_goods_deliv c ON a.ordgdidx = c.ordgdidx AND c.istrash = 'F'
			INNER JOIN t_goods d ON a.goodsno = d.goodsno
			LEFT OUTER JOIN t_user f ON b.userno = f.no
			LEFT OUTER JOIN (
				SELECT t.orgdelividx
					 , MAX(t.ordcfmdate) AS ordcfmdate
				FROM (SELECT cgh.orgdelividx
						   , IF(cgh.aftval = 'ODS009', cgh.regdate, '') AS ordcfmdate		/* 구매확정 */
						FROM t_comorder_goods_his cgh 
					) t
				GROUP BY t.orgdelividx
				ORDER BY t.orgdelividx
			) g ON c.orgdelividx = g.orgdelividx
			LEFT JOIN (
	            SELECT
	            	  ta.orderidx, tb.ordgdidx
	                , SUM(tb.clmcnt) AS clmcnt
	                , SUM(CASE WHEN tb.cncstatus = 'CNS005' OR ta.rtnstatus = 'RTS010' THEN tb.clmcnt ELSE 0 END) AS clmcompcnt
				    , SUM(CASE WHEN ta.rtnstatus = 'RTS010' THEN tb.clmcnt ELSE 0 END) AS rtncompcnt
	            FROM t_claim ta
	            INNER JOIN t_claim_goods tb ON ta.clmidx = tb.clmidx and tb.isclmoption = 'T'
	            WHERE (tb.CNCSTATUS NOT IN ('CNS003','CNS004') OR ta.RTNSTATUS NOT IN ('RTS004','RTS005','RTS009') OR ta.EXCSTATUS NOT IN ('EXS004','EXS005','EXS011')) -- 반려, 철회, 반송
	            AND ta.istrash = 'F'
	            GROUP BY ta.orderidx, tb.ordgdidx
	        ) h ON a.orderidx = h.orderidx AND a.ordgdidx = h.ordgdidx
			WHERE b.siteid = #{siteid}
			<if test='ordno != null and ordno != ""'>
			AND b.ordno = #{ordno}
			</if>
			<if test='ispbgoods != null and ispbgoods != "" '>
			AND d.ispbgoods = #{ispbgoods}
			</if>
			<if test='dealerno != null and dealerno != "" '>
			AND a.dealerno = #{dealerno}
			</if>
			<if test='sword != null and sword != "" '>
				<choose>
					<when test='skey == "ordno"'>
					AND b.ordno LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test='skey == "ordname"'>
					AND b.ordname LIKE CONCAT('%', #{sword}, '%')
					</when>
					<when test='skey == "ordid"'>
					AND f.userid LIKE CONCAT('%', #{sword}, '%')
					</when>
					<otherwise>
					AND ( b.ordno LIKE CONCAT('%', #{sword}, '%')
					   OR b.ordname LIKE CONCAT('%', #{sword}, '%')
					   OR f.userid LIKE CONCAT('%', #{sword}, '%') )
					</otherwise>
				</choose>
			</if>
			<if test='dtkey != null and dtkey != ""'>
		        <choose>
		            <when test='dtkey == "order"'>
		            AND b.orderdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
		            </when>
		            <when test='dtkey == "payment"'>
		            AND b.paymentdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
		            </when>
		            <otherwise>
		            AND ( b.orderdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
					   OR b.paymentdate BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s') )
		            </otherwise>
		        </choose>
		    </if>
		) ta
		WHERE ta.ordcnt <![CDATA[>]]> 0
		<if test='gdword != null and gdword != "" '>
			<choose>
				<when test='gdkey == "goodsname"'>
				AND ta.goodsname LIKE CONCAT('%', #{gdword}, '%')
				</when>
				<when test='gdkey == "goodscode"'>
				AND ta.goodscode LIKE CONCAT('%', #{gdword}, '%')
				</when>
				<when test='gdkey == "optioncode"'>
				AND ta.optioncode LIKE CONCAT('%', #{gdword}, '%')
				</when>
				<when test='gdkey == "optionname"'>
				AND ta.optionconts LIKE CONCAT('%', #{gdword}, '%')
				</when>
				<otherwise>
				AND ( ta.goodsname LIKE CONCAT('%', #{gdword}, '%')
				   OR ta.goodscode LIKE CONCAT('%', #{gdword}, '%')
				   OR ta.optioncode LIKE CONCAT('%', #{gdword}, '%')
				   OR ta.optionconts LIKE CONCAT('%', #{gdword}, '%') )
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="psort == 'orderdate_desc_asc'">
			ORDER BY ta.orderdate ASC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'orderdate_desc_desc'">
			ORDER BY ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'paymentdate_asc'">
			ORDER BY ta.paymentdate ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'paymentdate_desc'">
			ORDER BY ta.paymentdate DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordno_asc'">
			ORDER BY ta.ordno ASC, ta.orderdate DESC, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordno_desc'">
			ORDER BY ta.ordno DESC, ta.orderdate DESC, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordname_asc'">
			ORDER BY ta.ordname ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordname_desc'">
			ORDER BY ta.ordname DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordid_asc'">
			ORDER BY ta.ordid ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordid_desc'">
			ORDER BY ta.ordid DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ispbgoods_asc'">
			ORDER BY ta.ispbgoodsname ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ispbgoods_desc'">
			ORDER BY ta.ispbgoodsname DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'dealername_asc'">
			ORDER BY ta.dealername ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'dealername_desc'">
			ORDER BY ta.dealername DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'goodscode_asc'">
			ORDER BY ta.goodscode ASC, ta.orderdate DESC, ta.ordno, ta.optioncode
			</when>
			<when test="psort == 'goodscode_desc'">
			ORDER BY ta.goodscode DESC, ta.orderdate DESC, ta.ordno, ta.optioncode
			</when>
			<when test="psort == 'optioncode_asc'">
			ORDER BY ta.optioncode ASC, ta.orderdate DESC, ta.ordno, ta.goodscode
			</when>
			<when test="psort == 'optioncode_desc'">
			ORDER BY ta.optioncode DESC, ta.orderdate DESC, ta.ordno, ta.goodscode
			</when>
			<when test="psort == 'goodsturn_asc'">
			ORDER BY ta.goodsturn ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'goodsturn_desc'">
			ORDER BY ta.goodsturn DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'goodsname_asc'">
			ORDER BY ta.goodsname ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'goodsname_desc'">
			ORDER BY ta.goodsname DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'optionconts_asc'">
			ORDER BY ta.optionconts ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'optionconts_desc'">
			ORDER BY ta.optionconts DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordcnt_asc'">
			ORDER BY ta.ordcnt ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordcnt_desc'">
			ORDER BY ta.ordcnt DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'price_asc'">
			ORDER BY ta.price ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'price_desc'">
			ORDER BY ta.price DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'totprice_asc'">
			ORDER BY ta.totprice ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'totprice_desc'">
			ORDER BY ta.totprice DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'invoiceno_asc'">
			ORDER BY ta.invoiceno ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'invoiceno_desc'">
			ORDER BY ta.invoiceno DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'cfmconts_asc'">
			ORDER BY ta.cfmconts ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'cfmconts_desc'">
			ORDER BY ta.cfmconts DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordstatus_asc'">
			ORDER BY ta.statusname ASC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<when test="psort == 'ordstatus_desc'">
			ORDER BY ta.statusname DESC, ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</when>
			<otherwise>
			ORDER BY ta.orderdate DESC, ta.ordno, ta.goodscode, ta.optioncode
			</otherwise>
		</choose>
	</select>
	
	<select id="selectComOrderGoodsLIstDeliv" parameterType="somap" resultType="somap">
		SELECT /* ComOrderGoodsMapper - selectComOrderGoodsLIstDeliv 주문상품 목록조회 + 주문상태*/
			a.ordgdidx
			, a.orderidx
			, c.ordstatus
			, d.ordno		
			, a.goodsturn
			, a.dealerno
			, (select name from t_dealer where userno = a.dealerno) as dealername
			, a.goodsno
			, b.goodsname
			, (select name from t_brand where idx = b.brandidx) as brandname -- 브랜드명
			, FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, ', ') as optionname
			, b.ispbgoods
			, a.optioncode
			, c.delivcnt as ordcnt
			, a.price
			, a.salepromoamt
			, a.salepromoidx
			, a.goodscpnamt
			, a.delivfaretype
			, a.delivamt
			, a.delivcpnamt
			, a.realgoodsamt
			, a.reserveamt
			, a.epointamt
			, a.empreserveamt
			, a.iscancel
			, a.isrefund
			, a.isexchange
			, a.istrash
			, a.isaddgoods
			, a.orggoodsno
			, a.delivtype
			, FN_GET_FILE_URL(a.goodsno, 'FLT001', #{imgtype}) AS fullpath
			, c.orgdelividx
		FROM t_comorder_goods a
		INNER JOIN t_goods b 
		on a.goodsno = b.goodsno
		INNER JOIN t_comorder_goods_deliv c 
		ON a.ORDGDIDX = c.ORDGDIDX 		
		INNER JOIN t_comorder d 
		ON a.ORDERIDX = d.ORDERIDX
		AND d.ISTRASH = 'F'
		WHERE a.orderidx = #{orderidx}
		<if test='ordstatus != null and ordstatus != "" and ordstatus != "all"'>
		AND c.ordstatus = #{ordstatus}
		</if>
	</select>

	<select id="selectOrderGoodsERPData" parameterType="somap" resultType="somap">
		SELECT
			ORDGDIDX
			 , ORDERIDX
			 , GOODSTURN
			 , DEALERNO
			 , GOODSNO
			 , OPTIONCODE
			 , FRSTORDCNT
			 , PRICE
			 , SALEPROMOAMT
			 , SALEPROMOIDX
			 , GOODSCPNAMT
			 , DELIVFARETYPE
			 , DELIVAMT
			 , DELIVCPNAMT
			 , REALGOODSAMT
			 , RESERVEAMT
			 , EPOINTAMT
			 , EMPRESERVEAMT
			 , ISCANCEL
			 , ISREFUND
			 , ISEXCHANGE
			 , ISADDGOODS
			 , ORGGOODSNO
			 , DELIVTYPE
		FROM T_COMORDER_GOODS
		WHERE ORDERIDX = #{orgno}
		AND ISTRASH = 'F'
	</select>

	<select id="selectComOrderGoodsReverseERPData" parameterType="somap" resultType="somap">
		SELECT
			ORDGDIDX,
			ORDERIDX,
			GOODSTURN
		FROM T_COMORDER_GOODS
		WHERE ORDGDIDX IN
		<foreach collection="list" item="ordgdidx" index="index" open="(" separator="," close=")">
			#{ordgdidx}
		</foreach>
		AND ISTRASH = 'F'
	</select>

	<select id="selectComOrderGoodsExistCheck" parameterType="somap" resultType="somap">
		SELECT
			A.ORDERIDX, A.ORDGDIDX, B.ORGDELIVIDX, B.ORDSTATUS
		FROM T_COMORDER_GOODS A INNER JOIN T_COMORDER_GOODS_DELIV B ON A.ORDGDIDX = B.ORDGDIDX
		WHERE A.ISTRASH = 'F'
		AND B.ISTRASH = 'F'
		AND B.ORDSTATUS IN <foreach collection="ordstatus_arr" item="ordstatus_target" index="index" open="(" separator="," close=")">#{ordstatus_target}</foreach>
		AND A.ORDGDIDX = #{ordgdidx}
	</select>

	<select id="selectComOrderGoodsCancelInfo" parameterType="somap" resultType="somap">
		SELECT
			A.ORDERIDX, A.ORDGDIDX, A.FRSTORDCNT, B.CLMIDX, B.CLMGDIDX, B.CLMCNT
			 , FRSTORDCNT - IFNULL(CLMCNT, 0) AS AFORDCNT
		FROM T_COMORDER_GOODS A LEFT OUTER JOIN T_CLAIM_GOODS B ON A.ORDGDIDX = B.ORDGDIDX AND A.ISTRASH = 'F' AND B.ISTRASH = 'F' AND B.ISCLMOPTION = 'T' AND B.CNCSTATUS = 'CNS005'
		WHERE A.ORDGDIDX = #{ordgdidx}
	</select>
</mapper>
