<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.PromotionMapper">

	<!-- 프로모션 목록 조회 -->
	<select id="selectPromotionList" parameterType="somap" resultType="somap">
		/** 프로모션 */
		WITH promo AS (
		    SELECT promoidx, istotcate, goodsrangetype
		    FROM T_PROMOTION
		    WHERE siteid = #{siteid}
		    -- AND istrash = 'F' 
		), allpromo AS ( /* 전체카테고리, 전체상품 프로모션 */
	        SELECT promoidx
	        FROM promo
			WHERE istotcate = 'T'
	        AND goodsrangetype = 'GGT001'
	    ), incatepromo AS ( /* 추가카테고리 프로모션 */
	        SELECT a.promoidx, b.cateidx
	        FROM promo a
	        INNER JOIN t_promo_cate b
	        ON a.promoidx = b.promoidx
	        AND b.isadd = 'T'
	        WHERE a.istotcate = 'F'
	    ), ingoodspromo AS ( /* 추가상품 프로모션 */
	        SELECT a.promoidx, b.goodsno
	        FROM promo a
	        INNER JOIN t_promo_goods b 
	        ON a.promoidx = b.promoidx
	        WHERE a.goodsrangetype = 'GGT002'
	    ), outcatepromo AS ( /* 제외카테고리 프로모션 */
	        select a.promoidx, b.cateidx
	        from promo a
	        inner join t_promo_cate b 
	        on b.promoidx = b.promoidx
	        and b.isadd = 'F'
	        WHERE a.istotcate = 'F'
	    ), outgoodspromo AS ( /* 제외상품 프로모션 */
	        SELECT a.promoidx, b.goodsno
	        FROM promo a
	        INNER JOIN t_promo_goods b 
	        ON a.promoidx = b.promoidx
	        WHERE a.goodsrangetype = 'GGT003'
	    ), goods AS (
	        SELECT a.goodsno, ifnull(b.cateidx, 0) as cateidx
	        FROM t_goods a
	        LEFT JOIN t_goods_category b
	        ON a.goodsno = b.goodsno
	        WHERE a.goodsapprtype = 'GAT004'
	    )
		SELECT 	/* PromotionMapper.xml - selectPromotionList 프로모션 목록 조회 */
			  TA.PROMOIDX
			, TA.PROMOCODE
			, TA.PROMONAME
			, FN_GET_CODENAME_STR(TA.MUMEMBERTYPE, 'MUMEMBERTYPE') AS MUMEMBERTYPENAME
			, FN_GET_CODENAME_STR(TA.MUMEMLVTYPE, 'MUMEMLVTYPE') AS MUMEMLVTYPENAME
			, FN_GET_CODENAME_STR(TA.MUAPPCHTYPE, 'MUAPPCHTYPE') AS MUAPPCHTYPENAME
			, FN_GET_CODENAME(#{siteid}, 'PROMODIVTYPE', TA.PROMODIVTYPE) AS PROMODIVTYPENAME
			, TA.ISPERCENT
		    , (CASE WHEN TA.ISPERCENT = 'T' THEN '정률'
		            WHEN TA.ISPERCENT = 'F' THEN '정액'
		            ELSE ''
		       END) AS ISPERCENTNAME
		    , TA.DISPERCENT
		    , TA.DISPRICE
			, FN_GET_CODENAME(#{siteid}, 'GIFTTERMTYPE', TA.GIFTTERMTYPE) AS GIFTTERMTYPENAME
			, TA.GOODSCNT
			, TA.GIFTGOODSCNT
			, TA.GIFTCNT
			, TA.GIFTSELCNT
			, TA.ORDERFROMPRICE
			, TA.ORDERTOPRICE
			, TA.RESERVEPOINT
		    , (CASE WHEN TA.ISTRASH = 'F' THEN '사용'
		            WHEN TA.ISTRASH = 'T' THEN '미사용'
		            ELSE ''
		       END) AS ISTRASHNAME
		    , DATE_FORMAT(STR_TO_DATE(TA.PROMOSTDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOSTDATE
		    , DATE_FORMAT(STR_TO_DATE(TA.PROMOEDDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOEDDATE
			, TA.REGUSERNAME
			, DATE_FORMAT(TA.REGDATE, '%Y-%m-%d') AS REGDATE
			, TA.PROMOSTTYPE
			, FN_GET_CODENAME(#{siteid}, 'PROMOSTTYPE', TA.PROMOSTTYPE) AS PROMOSTTYPENAME
		FROM (	SELECT
				      P.PROMOIDX
					, P.PROMOCODE
					, P.PROMONAME
				    , P.MUMEMBERTYPE
				    , P.MUMEMLVTYPE
				    , P.MUAPPCHTYPE
				    , P.PROMODIVTYPE
				    , P.ISPERCENT
				    , P.DISPERCENT
				    , P.DISPRICE
				    , P.GIFTTERMTYPE
				    , SUB.GOODSCNT
				    , P.GIFTGOODSCNT
				    , (SELECT COUNT(*) FROM T_PROMO_GIFT WHERE PROMOIDX = P.PROMOIDX) AS GIFTCNT
				    , P.GIFTSELCNT
				    , P.ORDERFROMPRICE
				    , P.ORDERTOPRICE
				    , P.RESERVEPOINT
				    , P.ISTRASH
				    , P.PROMOSTDAY
				    , P.PROMOEDDAY
				    , A.NAME AS REGUSERNAME
				    , P.REGDATE
				    , (CASE WHEN NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST001'
				    	    WHEN NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST002'
				    	    WHEN NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST003'
				    	  	ELSE ''
				       END) AS PROMOSTTYPE
				FROM T_PROMOTION P
				INNER JOIN (
					SELECT tt1.promoidx, COUNT(*) as goodscnt
			        FROM (
			            /*전체적용 프로모션 */
			            SELECT a.goodsno, a.cateidx, b.promoidx
			            FROM goods a, allpromo b
			            UNION ALL
			            /*카테고리포함 프로모션 */
			            SELECT a.goodsno, a.cateidx, b.promoidx
			            FROM goods a
			            INNER JOIN (
			                WITH RECURSIVE inpromo AS (
				                SELECT promoidx, cateidx
				                FROM incatepromo
				                UNION ALL
				                SELECT t2.promoidx, idx
				                FROM t_category t1, inpromo t2
				                WHERE t1.parent = t2.cateidx
			                )
			                SELECT promoidx, cateidx from inpromo
			            ) b
			            ON a.cateidx = b.cateidx
			            UNION ALL
			            /*카테고리포함 프로모션 */
			            SELECT a.goodsno, a.cateidx, b.promoidx
			            FROM goods a
			            LEFT JOIN (
			                WITH RECURSIVE outpromo AS (
				                SELECT promoidx, cateidx
				                FROM outcatepromo
				                UNION ALL
				                SELECT t2.promoidx, idx
				                FROM t_category t1, outpromo t2
				                WHERE t1.parent = t2.cateidx
			                )
			                SELECT promoidx, cateidx from outpromo
			            ) b
			            ON a.cateidx = b.cateidx
			            WHERE b.cateidx IS NULL
			            UNION ALL
			            /*특정상품포함 프로모션 */
			            SELECT a.goodsno, a.cateidx, b.promoidx
			            FROM goods a
			            INNER JOIN ingoodspromo b
			            ON a.goodsno = b.goodsno
			            UNION ALL
			            /*특정상품제외 프로모션 */
			            SELECT a.goodsno, a.cateidx, b.promoidx
			            FROM goods a
			            LEFT JOIN outgoodspromo b
			            ON a.goodsno = b.goodsno
			            WHERE b.goodsno IS NULL
	        		) tt1
	        		GROUP BY tt1.promoidx
				) SUB ON P.PROMOIDX = SUB.PROMOIDX
				LEFT OUTER JOIN T_USER U  ON P.REGUSERID = U.USERID
				LEFT OUTER JOIN T_ADMIN A ON U.NO = A.USERNO
				WHERE P.SITEID = #{siteid}
				<if test="istrash != null and istrash != ''">
				AND P.ISTRASH = #{istrash}
				</if>
				<if test='promosttypearr != null and promosttypearr.size > 0'>
					AND
					<foreach index="index" collection="promosttypearr" item="_item" open="(" close=")" separator="OR" >
						<choose>
						<when test="_item == 'PST001'">
						NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST002'">
						NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST003'">
						NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<otherwise></otherwise>
						</choose>
					</foreach>
				</if>
				<if test='promodivtypearr != null and promodivtypearr.size > 0'>
				AND P.PROMODIVTYPE IN
					<foreach index="index" collection="promodivtypearr" item="_item" open="(" close=")" separator="," >
						#{_item}
					</foreach>
				</if>
				<if test='muappchtypearr != null and muappchtypearr.size > 0'>
				AND
					<foreach index="index" collection="muappchtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUAPPCHTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumembertypearr != null and mumembertypearr.size > 0'>
				AND
					<foreach index="index" collection="mumembertypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMBERTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumemlvtypearr != null and mumemlvtypearr.size > 0'>
				AND
					<foreach index="index" collection="mumemlvtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMLVTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<choose>
					<when test="sdate != null and sdate == 'start'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'end'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'reg'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<otherwise>
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND ( DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND ( DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND ( STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s') )
						</if>
					</otherwise>
				</choose>
			) TA
		WHERE 1 = 1
		<if test="sword != null and sword != '' ">
			<choose>
				<when test="skey == 'promoname'">
				AND TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'regusername'">
				AND TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<otherwise>
				AND ( TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				   OR TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%') )
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="psort == 'goodscnt_asc'">
			ORDER BY TA.GOODSCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'goodscnt_desc'">
			ORDER BY TA.GOODSCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftgoodscnt_asc'">
			ORDER BY TA.GIFTGOODSCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftgoodscnt_desc'">
			ORDER BY TA.GIFTGOODSCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftcnt_asc'">
			ORDER BY TA.GIFTCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftcnt_desc'">
			ORDER BY TA.GIFTCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftselcnt_asc'">
			ORDER BY TA.GIFTSELCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftselcnt_desc'">
			ORDER BY TA.GIFTSELCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promostday_asc'">
			ORDER BY TA.PROMOSTDAY ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promostday_desc'">
			ORDER BY TA.PROMOSTDAY DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promoedday_asc'">
			ORDER BY TA.PROMOEDDAY ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promoedday_desc'">
			ORDER BY TA.PROMOEDDAY DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'regdate_asc'">
			ORDER BY TA.REGDATE ASC
			</when>
			<when test="psort == 'regdate_desc'">
			ORDER BY TA.REGDATE DESC
			</when>
			<otherwise>
			ORDER BY TA.REGDATE DESC
			</otherwise>
		</choose>
		<if test="startpage != null and !startpage.equals('') and endpage != null and !endpage.equals('')">
		LIMIT #{startpage}, #{endpage}
		</if>
	</select>

	<!-- 프로모션 목록 건수 조회 -->
	<select id="selectPromotionListCount" parameterType="somap" resultType="somap">
		SELECT 	/* PromotionMapper.xml - selectPromotionListCount 프로모션 목록 건수 조회 */
			  COUNT(*) AS TOTALCNT
			, IFNULL(SUM(TA.USECNT), 0) AS USECNT
			, IFNULL(SUM(TA.UNUSECNT), 0) AS UNUSECNT
		FROM (	SELECT
				      (CASE WHEN P.ISTRASH = 'F' THEN 1 ELSE 0 END) AS USECNT
					, (CASE WHEN P.ISTRASH = 'T' THEN 1 ELSE 0 END) AS UNUSECNT
					, P.PROMONAME
				    , A.NAME AS REGUSERNAME
				FROM T_PROMOTION P
				LEFT OUTER JOIN T_USER U  ON P.REGUSERID = U.USERID
				LEFT OUTER JOIN T_ADMIN A ON U.NO = A.USERNO
				WHERE P.SITEID = #{siteid}
				<if test="istrash != null and istrash != ''">
				AND P.ISTRASH = #{istrash}
				</if>
				<if test='promosttypearr != null and promosttypearr.size > 0'>
					AND
					<foreach index="index" collection="promosttypearr" item="_item" open="(" close=")" separator="OR" >
						<choose>
						<when test="_item == 'PST001'">
						NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST002'">
						NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST003'">
						NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<otherwise></otherwise>
						</choose>
					</foreach>
				</if>
				<if test='promodivtypearr != null and promodivtypearr.size > 0'>
				AND P.PROMODIVTYPE IN
					<foreach index="index" collection="promodivtypearr" item="_item" open="(" close=")" separator="," >
						#{_item}
					</foreach>
				</if>
				<if test='muappchtypearr != null and muappchtypearr.size > 0'>
				AND
					<foreach index="index" collection="muappchtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUAPPCHTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumembertypearr != null and mumembertypearr.size > 0'>
				AND
					<foreach index="index" collection="mumembertypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMBERTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumemlvtypearr != null and mumemlvtypearr.size > 0'>
				AND
					<foreach index="index" collection="mumemlvtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMLVTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<choose>
					<when test="sdate != null and sdate == 'start'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'end'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'reg'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<otherwise>
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND ( DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND ( DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND ( STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s') )
						</if>
					</otherwise>
				</choose>
			) TA
		WHERE 1 = 1
		<if test="sword != null and sword != '' ">
			<choose>
				<when test="skey == 'promoname'">
				AND TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'regusername'">
				AND TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<otherwise>
				AND ( TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				   OR TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%') )
				</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 프로모션 목록 조회(엑셀용) -->
	<select id="selectPromotionListForExcel" parameterType="somap" resultType="somap">
		SELECT 	/* PromotionMapper.xml - selectPromotionListForExcel 프로모션 목록 조회(엑셀용) */
		 	  TA.PROMONAME
			, FN_GET_CODENAME_STR(TA.MUMEMBERTYPE, 'MUMEMBERTYPE') AS MUMEMBERTYPENAME
			, FN_GET_CODENAME_STR(TA.MUMEMLVTYPE, 'MUMEMLVTYPE') AS MUMEMLVTYPENAME
			, FN_GET_CODENAME_STR(TA.MUAPPCHTYPE, 'MUAPPCHTYPE') AS MUAPPCHTYPENAME
			, FN_GET_CODENAME(#{siteid}, 'PROMODIVTYPE', TA.PROMODIVTYPE) AS PROMODIVTYPENAME
		    , (CASE WHEN TA.ISPERCENT = 'T' THEN CONCAT('정률(', FORMAT(TA.DISPERCENT,0), '%)')
		            WHEN TA.ISPERCENT = 'F' THEN CONCAT('정액(', FORMAT(TA.DISPRICE, 0), '원)')
		            ELSE ''
		       END) AS DISCOUNTCONTS
			, FN_GET_CODENAME(#{siteid}, 'GIFTTERMTYPE', TA.GIFTTERMTYPE) AS GIFTTERMTYPENAME
			, FORMAT(TA.GOODSCNT, 0) AS GOODSCNT
			, FORMAT(TA.GIFTGOODSCNT, 0) AS GIFTGOODSCNT
			, FORMAT(TA.GIFTCNT, 0) AS GIFTCNT
			, FORMAT(TA.GIFTSELCNT, 0) AS GIFTSELCNT
			, (CASE WHEN IFNULL(TA.ORDERFROMPRICE, '') != '' AND IFNULL(TA.ORDERTOPRICE, '') != ''
		            THEN CONCAT(FORMAT(TA.ORDERFROMPRICE, 0), ' ~ ', FORMAT(TA.ORDERTOPRICE, 0))
		            WHEN IFNULL(TA.ORDERFROMPRICE, '') != '' AND IFNULL(TA.ORDERTOPRICE, '') = ''
		            THEN CONCAT(FORMAT(TA.ORDERFROMPRICE, 0), ' ~ ')
		            WHEN IFNULL(TA.ORDERFROMPRICE, '') = '' AND IFNULL(TA.ORDERTOPRICE, '') != ''
		            THEN CONCAT(' ~ ', FORMAT(TA.ORDERTOPRICE, 0))
		            ELSE ''
		        END) AS ORDERPRICEFROMTO
			, FORMAT(TA.RESERVEPOINT, 0) AS RESERVEPOINT
		    , (CASE WHEN TA.ISTRASH = 'F' THEN '사용'
		            WHEN TA.ISTRASH = 'T' THEN '미사용'
		            ELSE ''
		       END) AS ISTRASHNAME
		    , DATE_FORMAT(STR_TO_DATE(TA.PROMOSTDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOSTDATE
		    , DATE_FORMAT(STR_TO_DATE(TA.PROMOEDDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOEDDATE
			, TA.REGUSERNAME
			, DATE_FORMAT(TA.REGDATE, '%Y-%m-%d') AS REGDATE
			, TA.PROMOSTTYPE
			, FN_GET_CODENAME(#{siteid}, 'PROMOSTTYPE', TA.PROMOSTTYPE) AS PROMOSTTYPENAME
		FROM (	SELECT
				      P.PROMONAME
				    , P.MUMEMBERTYPE
				    , P.MUMEMLVTYPE
				    , P.MUAPPCHTYPE
				    , P.PROMODIVTYPE
				    , P.ISPERCENT
				    , P.DISPERCENT
				    , P.DISPRICE
				    , P.GIFTTERMTYPE
				    , (SELECT COUNT(*) FROM T_PROMO_GOODS WHERE PROMOIDX = P.PROMOIDX) AS GOODSCNT
				    , P.GIFTGOODSCNT
				    , (SELECT COUNT(*) FROM T_PROMO_GIFT WHERE PROMOIDX = P.PROMOIDX) AS GIFTCNT
				    , P.GIFTSELCNT
				    , P.ORDERFROMPRICE
				    , P.ORDERTOPRICE
				    , P.RESERVEPOINT
				    , P.ISTRASH
				    , P.PROMOSTDAY
				    , P.PROMOEDDAY
				    , A.NAME AS REGUSERNAME
				    , P.REGDATE
				    , (CASE WHEN NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST001'
				    	    WHEN NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST002'
				    	    WHEN NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
				    	    THEN 'PST003'
				    	  	ELSE ''
				       END) AS PROMOSTTYPE
				FROM T_PROMOTION P
				LEFT OUTER JOIN T_USER U  ON P.REGUSERID = U.USERID
				LEFT OUTER JOIN T_ADMIN A ON U.NO = A.USERNO
				WHERE P.SITEID = #{siteid}
				<if test="istrash != null and istrash != ''">
				AND P.ISTRASH = #{istrash}
				</if>
				<if test='promosttypearr != null and promosttypearr.size > 0'>
					AND
					<foreach index="index" collection="promosttypearr" item="_item" open="(" close=")" separator="OR" >
						<choose>
						<when test="_item == 'PST001'">
						NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST002'">
						NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<when test="_item == 'PST003'">
						NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
						</when>
						<otherwise></otherwise>
						</choose>
					</foreach>
				</if>
				<if test='promodivtypearr != null and promodivtypearr.size > 0'>
				AND P.PROMODIVTYPE IN
					<foreach index="index" collection="promodivtypearr" item="_item" open="(" close=")" separator="," >
						#{_item}
					</foreach>
				</if>
				<if test='muappchtypearr != null and muappchtypearr.size > 0'>
				AND
					<foreach index="index" collection="muappchtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUAPPCHTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumembertypearr != null and mumembertypearr.size > 0'>
				AND
					<foreach index="index" collection="mumembertypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMBERTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<if test='mumemlvtypearr != null and mumemlvtypearr.size > 0'>
				AND
					<foreach index="index" collection="mumemlvtypearr" item="_item" open="(" close=")" separator="OR" >
						P.MUMEMLVTYPE LIKE CONCAT('%', #{_item}, '%')
					</foreach>
				</if>
				<choose>
					<when test="sdate != null and sdate == 'start'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'end'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<when test="sdate != null and sdate == 'reg'">
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						</if>
					</when>
					<otherwise>
						<if test="(startdate != null and startdate != '') and (enddate == null or enddate == '') ">
						AND ( DATEDIFF(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0
						   OR DATEDIFF(P.REGDATE, STR_TO_DATE(#{startdate},'%Y-%m-%d')) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate == null or startdate == '') and (enddate != null and enddate != '') ">
						AND ( DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i')) <![CDATA[>=]]> 0
						   OR DATEDIFF(STR_TO_DATE(#{enddate},'%Y-%m-%d'), P.REGDATE) <![CDATA[>=]]> 0 )
						</if>
						<if test="(startdate != null and startdate != '') and (enddate != null and enddate != '') ">
						AND ( STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s')
						   OR P.REGDATE BETWEEN STR_TO_DATE(CONCAT(#{startdate},'000000'), '%Y-%m-%d%H%i%s') AND STR_TO_DATE(CONCAT(#{enddate},'235959'), '%Y-%m-%d%H%i%s') )
						</if>
					</otherwise>
				</choose>
			) TA
		WHERE 1 = 1
		<if test="sword != null and sword != '' ">
			<choose>
				<when test="skey == 'promoname'">
				AND TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<when test="skey == 'regusername'">
				AND TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%')
				</when>
				<otherwise>
				AND ( TA.PROMONAME LIKE CONCAT('%', #{sword}, '%')
				   OR TA.REGUSERNAME LIKE CONCAT('%', #{sword}, '%') )
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="psort == 'goodscnt_asc'">
			ORDER BY TA.GOODSCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'goodscnt_desc'">
			ORDER BY TA.GOODSCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftgoodscnt_asc'">
			ORDER BY TA.GIFTGOODSCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftgoodscnt_desc'">
			ORDER BY TA.GIFTGOODSCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftcnt_asc'">
			ORDER BY TA.GIFTCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftcnt_desc'">
			ORDER BY TA.GIFTCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftselcnt_asc'">
			ORDER BY TA.GIFTSELCNT ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'giftselcnt_desc'">
			ORDER BY TA.GIFTSELCNT DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promostday_asc'">
			ORDER BY TA.PROMOSTDAY ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promostday_desc'">
			ORDER BY TA.PROMOSTDAY DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promoedday_asc'">
			ORDER BY TA.PROMOEDDAY ASC, TA.REGDATE DESC
			</when>
			<when test="psort == 'promoedday_desc'">
			ORDER BY TA.PROMOEDDAY DESC, TA.REGDATE DESC
			</when>
			<when test="psort == 'regdate_asc'">
			ORDER BY TA.REGDATE ASC
			</when>
			<when test="psort == 'regdate_desc'">
			ORDER BY TA.REGDATE DESC
			</when>
			<otherwise>
			ORDER BY TA.REGDATE DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 프로모션 상세 조회 -->
	<select id="selectPromotionDetail" parameterType="somap" resultType="somap">
		SELECT  /* PromotionMapper.xml - selectPromotionDetail 프로모션 상세 조회 */
		      P.PROMOIDX
	        , P.PROMOCODE
	        , P.PROMONAME
	        , P.PROMODESC
	        , P.MUMEMBERTYPE
	        , P.MUMEMLVTYPE
	        , P.MUAPPCHTYPE
	        , P.PROMODIVTYPE
	        , P.ISTOTCATE
	        , P.GOODSRANGETYPE
	        , P.ISPERCENT
	        , P.DISPERCENT
	        , P.DISPRICE
	        , P.PARTRATIO
	        , P.GIFTTERMTYPE
	        , P.GIFTGOODSCNT
	        , P.GIFTSELCNT
	        , P.ISORDERPRICE
	        , P.ORDERFROMPRICE
	        , P.ORDERTOPRICE
	        , P.RESERVEPOINT
	        , P.ISRESERVE
	        , P.ISEPOINTDUP
	        , P.ISTRASH
	        , P.PROMOSTDAY
	        , P.PROMOEDDAY
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOSTDATE
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), '%H') AS PROMOSTHOUR
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i'), '%i') AS PROMOSTMIN
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), '%Y-%m-%d') AS PROMOEDDATE
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), '%H') AS PROMOEDHOUR
		    , DATE_FORMAT(STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i'), '%i') AS PROMOEDMIN
		    , P.REGUSERID
		    , A.NAME AS REGUSERNAME
			, DATE_FORMAT(P.REGDATE, '%Y-%m-%d') AS REGDATE
			, DATE_FORMAT(P.MODDATE, '%Y-%m-%d') AS MODDATE
			, (CASE WHEN NOW() <![CDATA[<]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') 
		    	    THEN 'PST001'
		    	    WHEN NOW() <![CDATA[>=]]> STR_TO_DATE(P.PROMOSTDAY, '%Y%m%d%H%i') AND NOW() <![CDATA[<=]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
		    	    THEN 'PST002'
		    	    WHEN NOW() <![CDATA[>]]> STR_TO_DATE(P.PROMOEDDAY, '%Y%m%d%H%i') 
		    	    THEN 'PST003'
		    	  	ELSE ''
		       END) AS PROMOSTTYPE
		FROM T_PROMOTION P
		LEFT OUTER JOIN T_USER U  ON P.REGUSERID = U.USERID
		LEFT OUTER JOIN T_ADMIN A ON U.NO = A.USERNO
		WHERE P.SITEID = #{siteid}
		AND P.PROMOIDX = #{promoidx}
	</select>
	
	<!-- 프로모션 저장 -->
	<insert id="insertPromotion" parameterType="somap" useGeneratedKeys="true" keyColumn="PROMOIDX" keyProperty="promoidx">
		/* PromotionMapper.xml - insertPromotion 프로모션 저장 */
		INSERT INTO T_PROMOTION (
			  SITEID			/* 사이트ID */
			, PROMOCODE  		/* 프로모션코드 */
			, PROMONAME  		/* 프로모션명 */
			, PROMODESC  		/* 프로모션설명 */
			, PROMOSTDAY  		/* 진행시작일자 */
			, PROMOEDDAY  		/* 진행종료일자 */
			, PROMODIVTYPE  	/* 프로모션구분 */
			, MUAPPCHTYPE  		/* 다중적용채널 */
			, MUMEMBERTYPE  	/* 다중대상회원유형 */
			, MUMEMLVTYPE  		/* 다중대상회원등급 */
			, ISTOTCATE		  	/* 전체카테고리여부 */
			, GOODSRANGETYPE  	/* 대상상품범위 */
			, ISPERCENT  		/* 정률여부 */
			, DISPRICE  		/* 할인액 */
			, DISPERCENT  		/* 할인률 */
			, PARTRATIO  		/* 파트너부담비율 */
			, GIFTTERMTYPE  	/* 사은품지급조건 */
			, GIFTGOODSCNT  	/* 사은품구매수량조건종류 */
			, GIFTSELCNT  		/* 사은품선택조건종류 */
			, ISORDERPRICE  	/* 주문금액기준여부 */
			, ORDERFROMPRICE  	/* 상품구매금액FROM */
			, ORDERTOPRICE  	/* 상품구매금액TO */
			, RESERVEPOINT  	/* 지급적립금 */
			, ISEPOINTDUP  		/* E포인트중복사용여부 */
			, ISRESERVE  		/* 적립금지급여부 */
			, ISTRASH			/* 사용여부 */
			, REGUSERID  		/* 등록자ID */
			, REGDATE  			/* 등록일시 */
			, MODUSERID  		/* 수정자ID */
			, MODDATE  			/* 수정일시 */
		) VALUES (
			  #{siteid}
			, FN_GET_PROMOTION_CODE()
			, #{promoname}
			, #{promodesc}
			, #{promostday}
			, #{promoedday}
			, #{promodivtype}
			, #{muappchtype}
			, #{mumembertype}
			, #{mumemlvtype}
			, #{istotcate}
			, #{goodsrangetype}
			, #{ispercent}
			, IF(#{disprice}='', null, #{disprice})
			, IF(#{dispercent}='', null, #{dispercent})
			, IF(#{partratio}='', null, #{partratio})
			, #{gifttermtype}
			, IF(#{giftgoodscnt}='', null, #{giftgoodscnt})
			, IF(#{giftselcnt}='', null, #{giftselcnt})
			, #{isorderprice}
			, IF(#{orderfromprice}='', null, #{orderfromprice})
			, IF(#{ordertoprice}='', null, #{ordertoprice})
			, IF(#{reservepoint}='', null, #{reservepoint})
			, #{isepointdup}
			, #{isreserve}
			, #{istrash}
			, #{authuserid}
			, NOW()
			, #{authuserid}
			, NOW()
		)
	</insert>
	
	<!-- 프로모션 수정 -->
	<update id="updatePromotion" parameterType="somap">
		UPDATE T_PROMOTION SET	/* PromotionMapper.xml - updatePromotion 프로모션 수정 */
			  PROMONAME = #{promoname}
			, PROMODESC = #{promodesc}
			, PROMOSTDAY = #{promostday}
			, PROMOEDDAY = #{promoedday}
			, PROMODIVTYPE = #{promodivtype}
			, MUAPPCHTYPE = #{muappchtype}
			, MUMEMBERTYPE = #{mumembertype}
			, MUMEMLVTYPE = #{mumemlvtype}
			, ISTOTCATE = #{istotcate}
			, GOODSRANGETYPE = #{goodsrangetype}
			, ISPERCENT = #{ispercent}
			, DISPRICE = IF(#{disprice}='', null, #{disprice})
			, DISPERCENT = IF(#{dispercent}='', null, #{dispercent})
			, PARTRATIO = IF(#{partratio}='', null, #{partratio})
			, GIFTTERMTYPE = #{gifttermtype}
			, GIFTGOODSCNT = IF(#{giftgoodscnt}='', null, #{giftgoodscnt})
			, GIFTSELCNT = IF(#{giftselcnt}='', null, #{giftselcnt})
			, ISORDERPRICE = #{isorderprice}
			, ORDERFROMPRICE = IF(#{orderfromprice}='', null, #{orderfromprice})
			, ORDERTOPRICE = IF(#{ordertoprice}='', null, #{ordertoprice})
			, RESERVEPOINT = IF(#{reservepoint}='', null, #{reservepoint})
			, ISEPOINTDUP = #{isepointdup}
			, ISRESERVE = #{isreserve}
			, ISTRASH = #{istrash}
			, MODUSERID = #{authuserid}
			, MODDATE = NOW()
		WHERE SITEID = #{siteid}
		AND PROMOIDX = #{promoidx}
	</update>
	
	<!-- 프로모션 사용여부 갱신 -->
	<update id="updatePromotionUse" parameterType="somap">
		UPDATE T_PROMOTION SET	/* PromotionMapper.xml - updatePromotionUse 프로모션 사용여부 갱신 */
			  ISTRASH   = #{istrash}
			, MODUSERID = #{authuserid}
			, MODDATE   = NOW()
		WHERE SITEID = #{siteid}
		<if test="promoidxlist != null and promoidxlist.size > 0">
			AND PROMOIDX IN
			<foreach collection="promoidxlist" item="promoidx" index="index" open="(" separator="," close=")">
				#{promoidx}
			</foreach>
		</if>
	</update>

	<select id="selectPromotionERPData" parameterType="somap" resultType="somap">
		SELECT
			PROMOIDX, PROMOCODE, PROMONAME, PROMODESC, PROMOSTDAY, PROMOEDDAY ,PROMODIVTYPE, MUAPPCHTYPE
			 ,MUMEMBERTYPE, MUMEMLVTYPE, ISTOTCATE, GOODSRANGETYPE, ISPERCENT, DISPRICE, DISPERCENT, PARTRATIO
			 ,GIFTTERMTYPE, GIFTGOODSCNT, GIFTSELCNT, ISORDERPRICE, ORDERFROMPRICE, ORDERTOPRICE, RESERVEPOINT
			 ,ISEPOINTDUP, ISRESERVE, B.IFLOGIDX, B.AUD_TYPE_CD
		FROM T_PROMOTION A INNER JOIN (
			SELECT
				ORGNO, GROUP_CONCAT(IFLOGIDX) AS IFLOGIDX, MIN(REGDATE) AS REGDATE
				 ,AUDDIV AS AUD_TYPE_CD
			FROM T_IFLOG A
			WHERE IFTYPE = 'IFT008'
			  AND IFDATE IS NULL
			GROUP BY ORGNO, AUDDIV
		)B ON A.PROMOIDX = B.ORGNO
		WHERE SITEID = #{siteid}
		ORDER BY B.REGDATE
	</select>

	<select id="selectPromotionDashBoard" parameterType="somap" resultType="somap">
		SELECT
			FORMAT(IFNULL(SUM(IF(PROMODIVTYPE = 'PDT001', 1, 0)), 0), 0) AS SALE
			 , FORMAT(IFNULL(SUM(IF(PROMODIVTYPE = 'PDT002', 1, 0)), 0), 0) AS GIFT
			 , FORMAT(IFNULL(SUM(IF(PROMODIVTYPE = 'PDT003', 1, 0)), 0), 0) AS RESERVE
			 , FORMAT(IFNULL(SUM(IF(CURRENT_TIMESTAMP BETWEEN DATE_ADD(STR_TO_DATE(PROMOEDDAY, '%Y%m%d%H%i'), INTERVAL -7 DAY) AND STR_TO_DATE(PROMOEDDAY, '%Y%m%d%H%i'), 1, 0)), 0), 0) AS EXPIRE
		FROM T_PROMOTION
		WHERE SITEID = #{siteid}
	  	AND ISTRASH = 'F'
	  	AND CURRENT_TIMESTAMP BETWEEN STR_TO_DATE(PROMOSTDAY, '%Y%m%d%H%i') AND STR_TO_DATE(PROMOEDDAY, '%Y%m%d%H%i')
	</select>
	
	<select id="selectOrderConfirmPromotion" parameterType="somap" resultType="somap">
		/* PromotionMapper - selectOrderConfirmPromotion 상품 구매확정 적립금 프로모션 조회*/
        WITH promo AS (
            SELECT
                  promoidx, promostday, promoedday, istotcate, goodsrangetype, giftgoodscnt, reservepoint, isreserve, isepointdup
            FROM t_promotion a
            WHERE a.siteid = #{siteid}
            AND a.istrash = 'F'
            AND a.promodivtype = 'PDT003'
            AND muappchtype LIKE CONCAT('%', #{platform}, '%') -- 다중적용채널
            AND mumemlvtype LIKE CONCAT('%', #{memlvtype}, '%') -- 다중대상회원등급
            AND mumembertype LIKE CONCAT('%', #{membertype}, '%') -- 다중대상회원유형
            AND DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i') BETWEEN promostday AND promoedday
        ), allpromo AS ( /* 전체카테고리 프로모션, 전체상품 프로모션 */
            SELECT promoidx
            FROM promo
            WHERE istotcate = 'T'
	        AND goodsrangetype = 'GGT001'
        ), incatepromo AS ( /* 추가카테고리 프로모션 */
            SELECT a.promoidx, b.cateidx
            FROM promo a
            INNER JOIN t_promo_cate b 
            ON a.promoidx = b.promoidx
            AND b.isadd = 'T'
        ), ingoodspromo AS ( /* 추가상품 프로모션 */
            SELECT a.promoidx, b.goodsno, b.optioncode
            FROM promo a
            INNER JOIN t_promo_goods b 
            ON a.promoidx = b.promoidx
            WHERE a.goodsrangetype = 'GGT002'
        ), outcatepromo AS ( /* 제외카테고리 프로모션 */
            SELECT a.promoidx, b.cateidx
            FROM promo a
            INNER JOIN t_promo_cate b 
            ON a.promoidx = b.promoidx
            AND b.isadd = 'F'
        ), outgoodspromo AS ( /* 제외상품 프로모션 */
            SELECT a.promoidx, b.goodsno, b.optioncode
            FROM promo a
            INNER JOIN t_promo_goods b 
            ON a.promoidx = b.promoidx
            WHERE a.goodsrangetype = 'GGT003'
        ), goods AS (
            SELECT a.goodsno, a.optioncode, b.cateidx
            FROM t_goods_option_detail a
            LEFT JOIN t_goods_category b
            ON a.goodsno = b.goodsno
            WHERE a.goodsno = #{goodsno}
            AND a.optioncode = #{optioncode}
        )
        SELECT 
              ttt.*
        FROM (
            SELECT distinct
                  tt2.*
            FROM (
                /* 전체 적용프로모션 */
                SELECT b.goodsno, b.optioncode, b.cateidx, a.promoidx
                FROM allpromo a
                INNER JOIN goods b 
                UNION ALL
                /* 카페고리포함 적용프로모션 */
                SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
                FROM goods a
                INNER JOIN (
                    WITH RECURSIVE incate AS (
                        SELECT promoidx, cateidx
                        FROM incatepromo
                        UNION ALL
                        SELECT t2.promoidx, idx
                        FROM t_category t1, incate t2
                        WHERE t1.parent = t2.cateidx
                    )
                    SELECT promoidx, cateidx
                    FROM incate
                ) b
                ON a.cateidx = b.cateidx
                UNION ALL
                /* 카페고리제회 적용프로모션 */
                SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
                FROM goods a
                INNER JOIN (
                    WITH RECURSIVE outcate AS (
                        SELECT promoidx, cateidx
                        FROM outcatepromo
                        UNION ALL
                        SELECT t2.promoidx, idx
                        FROM t_category t1, outcate t2
                        WHERE t1.parent = t2.cateidx
                    )
                    SELECT promoidx, cateidx
                    FROM outcate
                ) b
                ON a.cateidx = b.cateidx
                WHERE b.cateidx IS NULL
                UNION ALL
                /* 특정상품포함 적용프로모션 */
                SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
                FROM goods a
                INNER JOIN ingoodspromo b
                ON a.goodsno = b.goodsno
                AND a.optioncode = b.optioncode
                UNION ALL
                /* 특정상품제외 적용프로모션 */
                SELECT a.goodsno, a.optioncode, a.cateidx, b.promoidx
                FROM goods a
                INNER JOIN outgoodspromo b
                ON a.goodsno = b.goodsno
                AND a.optioncode = b.optioncode
            ) tt1
            INNER JOIN promo tt2
            ON tt1.promoidx = tt2.promoidx
        ) ttt
        WHERE #{ordcnt} >= giftgoodscnt
	</select>
</mapper>