<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dplot.mapper.InquiryMapper">

    <!-- 1:1 문의 조회 -->
    <select id="selectInquiryList" parameterType="somap" resultType="somap">
        SELECT @ROWNUM := @ROWNUM + 1 AS rn,
               a.*,
	            <![CDATA[
	            substr(replace(realcontent,'<br/>',''),1,15) as content
	            ]]>
        FROM (
                SELECT fn_get_codename_str(a.inquirytype, 'inquirytype') AS inquirytype -- 문의 유형
                	, a.inquirytype as sortinquirytype
                    , ua.userid                                                         -- 아이디
                    , ub.name                                                           -- 고객명
                    , ub.mobile                                                         -- 휴대폰번호
                    , ub.email                                                          -- 이메일
                    , b.ordno                                                           -- 주문번호
                    , c.invoiceno                                                       -- 송장 번호
                    , tg.goodsname                                                      -- 상품명
                    , tg.goodsno
                    , tg.goodscode
                    , a.subject                                                         -- 제목
                	, a.content as realcontent
                    , date_format(a.regdate, '%Y-%m-%d %H:%i:%s')       AS regdate      -- 등록일
                    , ifnull(ta.name, rb.name)        				    AS repname      -- 답변자 이름
                    , ra.userid                                         AS repid
                    , date_format(a.repregdate, '%Y-%m-%d %H:%i:%s')    AS repregdate   -- 답변일시
                    , d.filecount                                       AS filecount    -- 파일수
                    , a.repcontent                                                      -- 답변 내용
                    , if(a.isreply = 'T', '완료', '대기')                AS isreply      -- 답변 상태
                    , isreply                                           AS isreplyTF    -- 답변 상태(코드)
                    , if(a.isreply = 'T', 'bg', '')                     AS style        -- 스타일
                    , a.idx
                    , ua.no
                    , if(tg.ispbgoods is null, '', if(tg.ispbgoods = 'T' ,'직매입','위탁')) AS ispbgoods
                    , td.userno as dealerno
                    , td.name as dealername
                    , a.ispass
                	, FN_GET_OPTION_DETAIL(b.goodsno, b.optioncode, ' | ') as optionname
                FROM t_inquiry a
                	LEFT JOIN (
                		SELECT tio.inqidx, tio.ordgdidx, tc.ordno, tcg.goodsno, tcg.optioncode
				        FROM t_inquiry_order tio
				        INNER JOIN t_comorder_goods tcg ON tio.ORDGDIDX = tcg.ORDGDIDX
				        INNER JOIN t_comorder tc ON tcg.ORDERIDX = tc.ORDERIDX 
                	) b ON a.idx = b.inqidx
                	LEFT JOIN (
                    	SELECT a.ordgdidx, GROUP_CONCAT(invoiceno SEPARATOR ',') as invoiceno
                    	FROM t_comorder_goods_deliv a
                		WHERE a.istrash = 'F'
                    	GROUP BY ordgdidx
                    ) c ON b.ordgdidx = c.ordgdidx
                    LEFT JOIN (
                        SELECT a.idx, count(b.orgidx) AS filecount
                        FROM t_inquiry a LEFT JOIN t_file b ON a.idx = b.orgidx AND imgtype = 'IGT098'
                        GROUP BY a.idx
                    ) d ON a.idx = d.idx
                    LEFT JOIN t_user ua ON a.userno = ua.no
                    LEFT JOIN t_member ub ON a.userno = ub.userno
                    LEFT JOIN t_user ra ON a.repuserno = ra.no
                    LEFT JOIN t_admin ta ON a.repuserno = ta.userno
                    LEFT JOIN t_dealer rb ON a.repuserno = rb.userno
                    LEFT JOIN t_goods tg ON b.goodsno = tg.goodsno
                    LEFT JOIN t_dealer td ON tg.dealerno = td.userno
                WHERE 1 = 1
                <if test="userno !=null and userno !='' ">
                    AND a.userno = #{userno}
                </if>
                AND a.istrash = 'F'
                 -- 검색조건
                 <if test="sword != null and sword != ''">
                     <choose>
                         <when test="skey == 'memberid'">
                             AND ua.userid LIKE concat('%',#{sword}, '%') -- 유저 아이디
                         </when>
                         <when test="skey == 'name'">
                             AND ub.name LIKE concat('%', #{sword}, '%') -- 유저 이름
                         </when>
                         <when test="skey == 'ordno'">
                             AND b.ordno LIKE concat('%', #{sword}, '%') -- 주문번호
                         </when>
                         <when test="skey == 'invoiceno'">
                             AND c.invoiceno LIKE concat('%', #{sword}, '%') -- 운송장번호
                         </when>
                         <when test="skey == 'goodsname'">
                             AND tg.goodsname LIKE concat('%', #{sword}, '%') -- 상품명
                         </when>
                         <when test="skey == 'content'">
                             AND a.realcontent LIKE concat('%', #{sword}, '%') -- 내용
                         </when>
                         <otherwise>
                             AND (
                             b.ordno LIKE concat('%', #{sword}, '%') -- 주문번호
                             <if test="isadmin == true">
                             OR ua.userid LIKE concat('%',#{sword}, '%') -- 유저 아이디
                             OR ub.name LIKE concat('%', #{sword}, '%') -- 유저 이름
                             </if>
                        	 OR c.invoiceno LIKE concat('%', #{sword}, '%') -- 운송장번호
                             OR tg.goodsname LIKE concat('%', #{sword}, '%') -- 상품명
                             OR a.realcontent LIKE concat('%', #{sword}, '%') -- 내용
                             )
                         </otherwise>
                     </choose>
                 </if>
                 <if test="sdate !=null and sdate !='' ">
                     <choose>
                         <when test="sdate == 'start'">
                             AND str_to_date(a.regdate, '%Y-%m-%d') BETWEEN #{startdate} AND #{enddate}
                         </when>
                         <when test="sdate == 'end'">
                             AND str_to_date(a.repregdate, '%Y-%m-%d') BETWEEN #{startdate} AND #{enddate}
                         </when>
                     </choose>
                 </if>
                 <if test='ispbgoods != null and ispbgoods != ""'>
	                AND tg.ispbgoods = #{ispbgoods}
	            </if>
	            <if test='ispbgoods == "F" and dealerno != null and dealerno != ""'>
	                AND tg.dealerno = #{dealerno}
	            </if>
                 <if test="isreply != null and isreply != ''">
                     AND a.isreply = #{isreply}
                 </if>
                 <if test="inquirytype != null and inquirytype != ''">
                    AND a.inquirytype = #{inquirytype}
                 </if>
                 <if test="isadmin == false">
                 	AND a.dealerno = #{nowdealerno}
                 </if>
                 AND a.siteid = #{siteid}
                 -- /검색조건
             ) a,
             (SELECT @ROWNUM := #{startpage}) AS b
        <choose>
        	<when test="psort == 'ispbgoods_desc'">
                ORDER BY a.ispbgoods DESC
            </when>
            <when test="psort == 'ispbgoods_asc'">
                ORDER BY a.ispbgoods ASC
            </when>
            <when test="psort == 'dealername_desc'">
                ORDER BY a.dealername DESC
            </when>
            <when test="psort == 'dealername_asc'">
                ORDER BY a.dealername ASC
            </when>
            <when test="psort == 'inquirytype_desc'">
                ORDER BY a.sortinquirytype DESC
            </when>
            <when test="psort == 'inquirytype_asc'">
                ORDER BY a.sortinquirytype ASC
            </when>
            <when test="psort == 'userid_desc'">
                ORDER BY a.userid DESC
            </when>
            <when test="psort == 'userid_asc'">
                ORDER BY a.userid ASC
            </when>
            <when test="psort == 'username_desc'">
                ORDER BY a.name DESC
            </when>
            <when test="psort == 'username_asc'">
                ORDER BY a.name ASC
            </when>
            <when test="psort == 'mobile_desc'">
                ORDER BY a.mobile DESC
            </when>
            <when test="psort == 'mobile_asc'">
                ORDER BY a.mobile ASC
            </when>
            <when test="psort == 'email_desc'">
                ORDER BY a.email DESC
            </when>
            <when test="psort == 'email_asc'">
                ORDER BY a.email ASC
            </when>
            <when test="psort == 'ordno_desc'">
                ORDER BY a.ordno DESC
            </when>
            <when test="psort == 'ordno_asc'">
                ORDER BY a.ordno ASC
            </when>
            <when test="psort == 'invoiceno_desc'">
                ORDER BY a.invoiceno DESC
            </when>
            <when test="psort == 'invoiceno_asc'">
                ORDER BY a.invoiceno ASC
            </when>
            <when test="psort == 'goodsname_desc'">
                ORDER BY a.goodsname DESC
            </when>
            <when test="psort == 'goodsname_asc'">
                ORDER BY a.goodsname ASC
            </when>
            <when test="psort == 'content_desc'">
                ORDER BY a.content DESC
            </when>
            <when test="psort == 'content_asc'">
                ORDER BY a.content ASC
            </when>
            <when test="psort == 'regdate_desc'">
                ORDER BY a.regdate DESC
            </when>
            <when test="psort == 'regdate_asc'">
                ORDER BY a.regdate ASC
            </when>
            <when test="psort == 'repname_desc'">
                ORDER BY a.repname DESC
            </when>
            <when test="psort == 'repname_asc'">
                ORDER BY a.repname ASC
            </when>
            <when test="psort == 'repregdate_desc'">
                ORDER BY a.repregdate DESC
            </when>
            <when test="psort == 'repregdate_asc'">
                ORDER BY a.repregdate ASC
            </when>
            <when test="psort == 'ispass_desc'">
                ORDER BY a.ispass DESC
            </when>
            <when test="psort == 'ispass_asc'">
                ORDER BY a.ispass ASC
            </when>
            <when test="psort == 'isreply_desc'">
                ORDER BY a.isreply DESC
            </when>
            <when test="psort == 'isreply_asc'">
                ORDER BY a.isreply ASC
            </when>
            <otherwise>
                ORDER BY a.idx DESC
            </otherwise>
        </choose>
        LIMIT #{startpage}, #{endpage}
    </select>

    <!-- 1:1 문의 상세 조회 -->
    <select id="selectInquiryDtl" parameterType="somap" resultType="somap">
        SELECT FN_GET_CODENAME_STR(a.inquirytype, 'inquirytype') AS inquirytype     -- 문의유형
             , a.inquirytype                                     AS inquirytypeCode -- 문의유형코드
             , b.ordno                                                          -- 주문 번호
             , b.invoiceno                                                      -- 송장 번호
             , date_format(a.regdate, '%Y-%m-%d %H:%i:%s')       AS regdate     -- 등록일
             , ub.name                                                          -- 이름
             , ub.userno 
             , ub.mobile
             , ua.userid AS memberid                                            -- 아이디
             , FN_GET_CODENAME('base', 'DADAMEMBERTYPE', a.dadamembertype) AS dadamembertype -- 회원 유형
             , FN_GET_CODENAME('base', 'MEMLVTYPE', a.memlvtype)             AS memlvtype     -- 회원등급
             , b.goodsname                                                     -- 상품명
             , a.subject                                                        -- 제목
             , a.content                                                        -- 질문 내용
             , ifnull(rc.name, rb.name)                          AS repname      -- 답변자 이름
             , if(a.isreply = 'T', '완료', '대기')              AS isreply       -- 답변 상태
             , a.isreply AS isreplyTF                                           -- 답변 상태(코드값)
             , date_format(a.repregdate, '%Y-%m-%d %H:%i:%s') AS repregdate     -- 답변 일시
             , a.repcontent                                                     -- 답변 내용
             , a.idx
             , FN_GET_OPTION_DETAIL(a.goodsno, a.optioncode, ' | ') AS optionname
             , if(b.ispbgoods is null, '', if(b.ispbgoods = 'T' ,'직매입','위탁')) as ispbgoods
             , td.name as dealername
             , ra.userid as repid
             , if(a.ispass = 'T', '전송완료','미 전송') as ispass
             , ifnull(a.tplidx,'') as tplidx
        FROM t_inquiry a
           LEFT JOIN (
                 SELECT 
                      tio.inqidx
                    , GROUP_CONCAT(DISTINCT tc.ordno) AS ordno
                    , GROUP_CONCAT(concat(tg.goodsname, ' ', FN_GET_OPTION_DETAIL(tcg.goodsno, tcg.optioncode, '|')) SEPARATOR ', ') AS goodsname
                    , GROUP_CONCAT(tcgd.invoiceno) AS invoiceno
                    , max(tg.ispbgoods) AS ispbgoods
                    , max(tg.dealerno) AS dealerno
              FROM t_inquiry_order tio
              INNER JOIN t_comorder_goods tcg ON tio.ORDGDIDX = tcg.ORDGDIDX
              INNER JOIN t_comorder tc ON tcg.ORDERIDX = tc.ORDERIDX 
                 INNER JOIN t_goods tg ON tcg.goodsno = tg.goodsno
              LEFT OUTER JOIN (
                 SELECT a.ordgdidx, GROUP_CONCAT(invoiceno SEPARATOR ',') as invoiceno
                   FROM t_comorder_goods_deliv a
                    WHERE a.istrash = 'F'
                     GROUP BY ordgdidx
              ) tcgd ON tcg.ordgdidx = tcgd.ordgdidx
              GROUP BY tio.inqidx
         ) b ON a.idx = b.inqidx
            LEFT JOIN (
                SELECT a.idx, count(b.orgidx) AS filecount
                FROM t_inquiry a LEFT JOIN t_file b ON a.idx = b.orgidx AND imgtype = 'IGT098'
                GROUP BY a.idx
            ) c ON a.idx = c.idx
            LEFT JOIN t_user ua ON a.userno = ua.no
            LEFT JOIN t_member ub ON a.userno = ub.userno
            LEFT JOIN t_user ra ON a.repuserno = ra.no
            LEFT JOIN t_dealer rb ON a.repuserno = rb.userno
            LEFT JOIN t_admin rc ON a.repuserno = rc.userno
            LEFT JOIN t_dealer td ON b.dealerno = td.userno
        WHERE 1 = 1
          AND a.idx = #{idx}
          AND a.siteid = #{siteid}
    </select>

    <!-- 1:1 문의 상태 갯수 (대기, 완료) -->
    <select id="selectInquiryState" parameterType="somap" resultType="somap">
        SELECT
             count(*) AS total
             , ifnull(sum(a.comp), 0) AS comp
             , ifnull(sum(a.stay), 0) AS stay
        FROM (
            SELECT if(a.isreply = 'T', 1, 0) AS comp
                 , if(a.isreply = 'F', 1, 0) AS stay
            FROM t_inquiry a
               	LEFT JOIN (
               		SELECT tio.inqidx, tio.ordgdidx, tc.ordno, tcg.goodsno, tcg.optioncode
			        FROM t_inquiry_order tio
			        INNER JOIN t_comorder_goods tcg ON tio.ORDGDIDX = tcg.ORDGDIDX
			        INNER JOIN t_comorder tc ON tcg.ORDERIDX = tc.ORDERIDX 
               	) b ON a.idx = b.inqidx
              	LEFT JOIN (
                  	SELECT a.ordgdidx, GROUP_CONCAT(invoiceno SEPARATOR ',') as invoiceno
                  	FROM t_comorder_goods_deliv a
              		WHERE a.istrash = 'F'
                  	GROUP BY ordgdidx
                ) c ON b.ordgdidx = c.ordgdidx
                LEFT JOIN (
                    SELECT a.idx, count(b.orgidx) AS filecount
                    FROM t_inquiry a LEFT JOIN t_file b ON a.idx = b.orgidx AND imgtype = 'IGT098'
                    GROUP BY a.idx
                ) d ON a.idx = d.idx
                LEFT JOIN t_user ua ON a.userno = ua.no
                LEFT JOIN t_member ub ON a.userno = ub.userno
                LEFT JOIN t_goods tg ON b.goodsno = tg.goodsno
                LEFT JOIN t_dealer td ON tg.dealerno = td.userno
            WHERE 1 = 1
            <if test="userno !=null and userno !='' ">
                AND a.userno = #{userno}
            </if>
            AND a.istrash = 'F'
             -- 검색조건
            <if test="sword != null and sword != ''">
                <choose>
                    <when test="skey == 'memberid'">
                        AND ua.userid LIKE concat('%',#{sword}, '%') -- 유저 아이디
                    </when>
                    <when test="skey == 'name'">
                        AND ub.name LIKE concat('%', #{sword}, '%') -- 유저 이름
                    </when>
                    <when test="skey == 'ordno'">
                        AND b.ordno LIKE concat('%', #{sword}, '%') -- 주문번호
                    </when>
                    <when test="skey == 'invoiceno'">
                        AND c.invoiceno LIKE concat('%', #{sword}, '%') -- 운송장번호
                    </when>
                    <when test="skey == 'goodsname'">
                        AND tg.goodsname LIKE concat('%', #{sword}, '%') -- 상품명
                    </when>
                    <when test="skey == 'content'">
                        AND a.content LIKE concat('%', #{sword}, '%') -- 내용
                    </when>
                    <otherwise>
                        AND (
                        b.ordno LIKE concat('%', #{sword}, '%') -- 주문번호
                        <if test="isadmin == true">
                        OR ua.userid LIKE concat('%',#{sword}, '%') -- 유저 아이디
                        OR ub.name LIKE concat('%', #{sword}, '%') -- 유저 이름
                        </if>
                        OR c.invoiceno LIKE concat('%', #{sword}, '%') -- 운송장번호
                        OR tg.goodsname LIKE concat('%', #{sword}, '%') -- 상품명
                        OR a.content LIKE concat('%', #{sword}, '%') -- 내용
                        )
                    </otherwise>
                </choose>
            </if>
             <if test="sdate !=null and sdate !='' ">
                 <choose>
                     <when test="sdate == 'start'">
                         AND str_to_date(a.regdate, '%Y-%m-%d') BETWEEN #{startdate} AND #{enddate}
                     </when>
                     <when test="sdate == 'end'">
                         AND str_to_date(a.repregdate, '%Y-%m-%d') BETWEEN #{startdate} AND #{enddate}
                     </when>
                 </choose>
             </if>
             <if test='ispbgoods != null and ispbgoods != ""'>
             AND tg.ispbgoods = #{ispbgoods}
         </if>
         <if test='ispbgoods == "F" and dealerno != null and dealerno != ""'>
             AND tg.dealerno = #{dealerno}
         </if>
         <if test="isreply != null and isreply != ''">
             AND a.isreply = #{isreply}
         </if>
         <if test="inquirytype != null and inquirytype != ''">
            AND a.inquirytype = #{inquirytype}
         </if>
         <if test="isadmin == false">
         	AND a.dealerno = #{nowdealerno}
         </if>
         AND a.siteid = #{siteid}
         -- /검색조건
		) a
    </select>

    <!-- 1:1 문의 등록 -->
    <!-- @@@ hanhyxx 수정 2022 04 22 10:26분 수정 -->
    <insert id="insertInquiry" parameterType="somap" useGeneratedKeys="true" keyProperty="idx">		
		INSERT INTO T_INQUIRY ( /* InquiryMapper.xml - insertInquiry 1:1 문의 등록 */
			SITEID
			, USERNO
			, WRITER
			, SUBJECT
			, CONTENT
			, INQUIRYTYPE
			, DADAMEMBERTYPE
			, MEMLVTYPE <!-- / 사이트 id / 사용자번호 / 작성자 / 제목 / 내용 필수(디폴트 없음) -->
			<if test= 'isadmailing != null and isadmailing != ""'>
			,ISREPLYEMAIL			
			</if>
			<if test= 'isadsms != null and isadsms != ""'>
			, ISREPLYSMS
			</if>
			<if test='parent != null and parent != ""'>			
			, PARENT <!-- / 답글메일여부 / SMS여부 / 상위_일련번호  (디폴트 있음) -->
			</if>
			<if test='consult != null and consult != ""'>
			, CONSULT			
			</if>
			<if test='email != null and email != ""'> 			
			, EMAIL 
			</if>
			<if test='mobile != null and mobile != ""'> 			
			, MOBILE 
			</if>
			<if test='ordno != null and ordno != ""'>
			, ORDNO
			</if>
		) 
		VALUES (
			#{siteid}
			, #{userno}
			<if test='userid != null and userid != ""'>
			, #{userid} 				
			</if>
			, #{subject}
			, #{content}
			, #{type}
			, #{dadamembertype}
			, #{memlvtype}
			<if test='isadmailing != null and isadmailing != ""'>
			, #{isadmailing}	
			</if>
			<if test='isadsms != null and isadsms != ""'>
			, #{isadsms} 				
			</if>
			<if test='parent != null and parent != ""'>
			 ,#{parent}
			</if>
			<if test='consult != null and consult != ""'>
			, #{consult}			
			</if>
			<if test='email != null and email != ""'> 
			, #{email}
			</if>	 
			<if test='mobile != null and mobile != ""'> 
			, #{mobile} 
			</if>
			<if test='ordno != null and ordno != ""'>
			, #{ordno}
			</if>
		)    
    </insert>
    
    <!-- 주문 상품 관련 등록 -->
    <insert id="insertInquiryOrder" parameterType="somap">
	    INSERT INTO T_INQUIRY_ORDER (
	    	INQIDX
	    	, ORDGDIDX
	    	, REGUSERID
		    ) 
	    VALUES (
	    	#{inqidx}
	    	, #{ordgdidx}
	    	, #{userid}
	    )
    </insert>
    
    <delete id="deleteInquiryMapping" parameterType="somap">
		DELETE FROM T_INQUIRY_ORDER WHERE INQIDX = #{idx}    
    </delete>

    <!-- 1:1 문의 수정 -->
    <update id="updateInquiry" parameterType="somap">
        UPDATE t_inquiry
        <set>
            <if test="isreply != null">
                isreply = #{isreply},
            </if>
            <if test="repcontent != null">
                repcontent = #{repcontent},
            </if>
            <if test="repuserno != null">
                repuserno = #{repuserno},
            </if>
            <if test="repregdate != null">
                repregdate = now(),
            </if>
            <if test="tplidx != null">
            	tplidx = IF(#{tplidx}='', null, #{tplidx})
            </if>
        </set>
        WHERE idx = #{idx}
        <if test="userno != null">
            AND userno = #{userno}
        </if>
        <if test="isreplyW != null">
            AND isreply = #{isreplyW}
        </if>
        <if test="istrash != null">
            AND istrash = #{istrash}
        </if>
    </update>

    <select id="selectInquiryListForMemberInfo" parameterType="somap" resultType="somap">
        SELECT
              IDX, SITEID, USERNO, WRITER
             , SUBSTR(CONTENT, 1, 15) AS SUBJECT
             , CONTENT, INQUIRYTYPE, ORDNO, DADAMEMBERTYPE, MEMLVTYPE, REPUSERNO, REPCONTENT, ISREPLY, REPREGDATE
             , DATE_FORMAT(REGDATE, '%Y.%m.%d') AS REGDATE
        FROM T_INQUIRY
        WHERE SITEID = #{siteid}
        AND USERNO = #{userno}
        <if test="simple != null and simple != ''">
            ORDER BY REGDATE DESC
            LIMIT #{simple}
        </if>
        <if test='startpage != null and endpage != null'>
            LIMIT #{startpage}, #{endpage}
        </if>
    </select>

	<!-- 문의 파트너사 전송 -->
    <update id="sendPartnerInquiry" parameterType="somap">
        UPDATE t_inquiry 
        SET dealerno = 
        CASE idx  
        <foreach collection="list" item="item">
    		WHEN #{item.idx} THEN #{item.dealerno}
    	</foreach>
    	END
    	, ispass = 'T'
    	WHERE idx in 
    	<foreach collection="list" item="item" open="(" separator="," close=")">
    		#{item.idx} 
    	</foreach>
    </update>
   
    <select id="selecrOrderInquiryList" parameterType="somap" resultType="somap">
        SELECT	/* InquiryMapper.xml selecrOrderInquiryList 주문상세 CS처리목록 조회 */
        	  ti.IDX
			, FN_GET_CODENAME(NULL, 'INQUIRYTYPE', ti.INQUIRYTYPE) AS INQUIRYTYPENAME
			, substr(ti.CONTENT, 1, 15) as CONTENT
			, DATE_FORMAT(ti.REGDATE, '%Y-%m-%d %H:%s:%i') AS REGDATE
			, ti.REPUSERNO 
			, IFNULL(ta.NAME, td.NAME) AS REPNAME
			, DATE_FORMAT(ti.REPREGDATE, '%Y-%m-%d %H:%s:%i') AS REPREGDATE
			, IF(ti.ISREPLY='T', '완료', '대기') AS ISREPLY
		FROM t_inquiry ti 
		INNER JOIN t_inquiry_order tio ON ti.IDX = tio.INQIDX
		INNER JOIN t_comorder_goods tcg ON tio.ORDGDIDX = tcg.ORDGDIDX
		INNER JOIN t_comorder tc ON tcg.ORDERIDX  = tc.ORDERIDX
		LEFT JOIN t_admin ta ON ti.REPUSERNO = ta.USERNO 
		LEFT JOIN t_dealer td ON ti.REPUSERNO = td.USERNO 
		WHERE ti.ISTRASH = 'F'
		AND ti.SITEID = #{siteid}
		AND tc.ORDERIDX = #{orderidx}
		<if test="dealerno != null and dealerno != '' ">
		AND tcg.dealerno = #{dealerno}
		</if>
		ORDER BY ti.REGDATE DESC
	</select>
	
    <!-- 1:1 문의 내역 -->
    <select id="selectInquiry" parameterType="somap" resultType="somap">
		SELECT AA.* /* InquiryMapper.xml selectInquiry 1:1문의 메인 리스트 */
			FROM (SELECT FLOOR((rnum-1) / #{perpage}+1) as PAGENUMBER, A.*
		FROM (SELECT
			<![CDATA[		
			@rownum:=@rownum+1 as rnum	
			]]>			
			, ti.IDX
			, ti.SITEID 
			, ti.CONSULT 
			, ti.USERNO 
			, ti.WRITER 
			, ti.SUBJECT 
			, ti.CONTENT 
			, ti.EMAIL 
			, ti.ISREPLYEMAIL 
			, ti.MOBILE 
			, ti.ISREPLYSMS 
			, ti.PARENT 
			, date_format(ti.REGDATE, '%Y.%m.%d') as REGDATE 
			, ti.INQUIRYTYPE
			, (SELECT codename FROM t_common_code WHERE CMCLASS = 'INQUIRYTYPE' AND CMCODE = ti.INQUIRYTYPE) as INQUIRYTYPENAME
			, ti.ORDNO 
			, ti.DADAMEMBERTYPE 
			, ti.MEMLVTYPE 
			, ti.REPUSERNO 
			, ti.REPCONTENT 
			,
			CASE 
				WHEN ti.ISREPLY = 'T' 
				THEN '답변완료'
				ELSE '답변대기'
			END as ISREPLY
			, ti.REPREGDATE 
			, ti.ISTRASH 
			, ti.GOODSNO 
			, ti.OPTIONCODE 
			, ti.DEALERNO 
			, ti.ISPASS 
		FROM T_INQUIRY ti
		WHERE 1=1
		<![CDATA[
		AND (@rownum:=0)=0
		]]>
		AND ti.ISTRASH = 'F'
 		AND ti.USERNO = #{userno}
        AND ti.SITEID = #{siteid}
		AND REGDATE BETWEEN DATE_ADD(NOW(),INTERVAL - #{lastmonth} MONTH ) AND NOW()
 		<if test='inquirytype !=null and inquirytype != "" and inquirytype != "all"'>
		AND ti.INQUIRYTYPE = #{inquirytype}
		</if>
		ORDER BY ti.REGDATE DESC) A) AA
		<if test='startpage != null and startpage != ""'>
		WHERE PAGENUMBER = #{startpage}
		</if>		    
    </select>
    
    <!-- 1:1 문의 내역 카운트 -->
    <select id="selectInquiryCount" parameterType="somap" resultType="int">
		SELECT count(*)  /* InquiryMapper.xml selectInquiry 1:1문의 메인 리스트 카운트 */
			FROM (SELECT FLOOR((rnum-1) / #{perpage}+1) as PAGENUMBER, A.*
		FROM (SELECT
			<![CDATA[		
			@rownum:=@rownum+1 as rnum	
			]]>			
			, IDX
		FROM T_INQUIRY
		WHERE 1=1
		<![CDATA[
		AND (@rownum:=0)=0
		]]>
		AND ISTRASH = 'F'
		AND USERNO = #{userno}
        AND SITEID = #{siteid}
		AND REGDATE BETWEEN DATE_ADD(NOW(),INTERVAL - #{lastmonth} MONTH ) AND NOW()	
		<if test='inquirytype !=null and inquirytype != "" and inquirytype !="all"'>
		AND INQUIRYTYPE = #{inquirytype}
		</if>
		ORDER BY REGDATE DESC) A) AA
    </select>    
	
	
    <select id="selectInquiryDetail" parameterType="somap" resultType="somap">
		SELECT /* InquiryMapper.xml selectInquiryDetail 1:1문의 상세 진입 */
			ti.IDX
			, ti.SITEID 
			, ti.CONSULT 
			, ti.USERNO 
			, ti.WRITER 
			, ti.SUBJECT 
			, ti.CONTENT
			, ti.EMAIL 
			, ti.ISREPLYEMAIL 
			, ti.MOBILE 
			, ti.ISREPLYSMS 
			, ti.PARENT 
			, date_format(ti.REGDATE, '%Y.%m.%d') as REGDATE 
			, (SELECT codename FROM t_common_code WHERE CMCLASS = 'INQUIRYTYPE' and cmcode = ti.INQUIRYTYPE) as INQUIRYTYPENAME
			, ti.INQUIRYTYPE AS INQUIRYTYPE
			, ti.ORDNO 
			, ti.DADAMEMBERTYPE 
			, ti.MEMLVTYPE 
			, ti.REPUSERNO 
			, ti.REPCONTENT 
			,
			CASE 
				WHEN ti.ISREPLY = 'T' 
				THEN '답변완료'
				ELSE '답변대기'
			END AS ISREPLY
			, date_format(ti.REPREGDATE, '%Y.%m.%d') as REPREGDATE 
			, ti.ISTRASH 
			, ti.GOODSNO 
			, ti.OPTIONCODE 
			, ti.DEALERNO 
			, ti.ISPASS
		FROM T_INQUIRY ti
		WHERE 1=1 
		AND ti.IDX = #{idx}
		AND ti.USERNO = #{userno}
        AND ti.SITEID = #{siteid}
    </select>
    
    <!-- 1:1 문의 답변대기 중 삭제 요청 -->
    <delete id="deleteInquiryIdx" parameterType="somap">
		UPDATE  /* InquiryMapper.xml deleteInquiryIdx 1:1문의 삭제 처리*/
			T_INQUIRY
		SET 
			ISTRASH = 'T' 
		WHERE 1=1 
		AND IDX = #{idx} 
		AND USERNO = #{userno}
        AND SITEID = #{siteid}
    </delete>    
    
    
    <select id="selectInquiryOrderDetail" parameterType="somap" resultType="somap">
	    SELECT /* InquiryMapper.xml selectInquiryOrderDetail 1:1문의 상세 진입 상품선택목록 맵핑*/
			a.INQIDX 
			,a.ORDGDIDX 
			,b.ORDERIDX 	
			,a.REGDATE 
		FROM t_inquiry_order a
		INNER JOIN t_comorder_goods b
		ON a.ORDGDIDX = b.ORDGDIDX 		
		WHERE a.INQIDX = #{inqidx}
    </select>
    
    <update id="updateInquiryIdx" parameterType="somap">
    	/* InquiryMapper.xml - updateInquiryIdx */
    	UPDATE T_INQUIRY SET
    	INQUIRYTYPE = #{type},
    	CONTENT = #{content}
    	WHERE 1=1 
    	AND IDX = #{idx}
    	AND SITEID = #{siteid}
    	AND USERNO = #{userno}
    </update>
    
    <select id="selectInquiryDashBoard" parameterType="somap" resultType="somap">
    	/* InquiryMapper.xml - selectInquiryDashBoard */
        SELECT
            FORMAT(IFNULL(INQUIRY, 0), 0) AS INQUIRY
            , FORMAT(IFNULL(GOODSQNA, 0), 0) AS GOODSQNA
            , FORMAT(IFNULL(ASINQUIRY, 0), 0) AS ASINQUIRY
        FROM (
                 SELECT
                     1 AS IDX
                      , COUNT(*) AS INQUIRY
                 FROM T_INQUIRY A LEFT JOIN (
                     SELECT TIO.INQIDX, TIO.ORDGDIDX, TC.ORDNO, TCG.GOODSNO, TCG.OPTIONCODE
                     FROM T_INQUIRY_ORDER TIO
                              INNER JOIN T_COMORDER_GOODS TCG ON TIO.ORDGDIDX = TCG.ORDGDIDX
                              INNER JOIN T_COMORDER TC ON TCG.ORDERIDX = TC.ORDERIDX
                 ) B ON A.IDX = B.INQIDX LEFT JOIN (
                     SELECT A.ORDGDIDX, GROUP_CONCAT(INVOICENO SEPARATOR ',') AS INVOICENO
                     FROM T_COMORDER_GOODS_DELIV A
                     WHERE A.ISTRASH = 'F'
                     GROUP BY ORDGDIDX
                 ) C ON B.ORDGDIDX = C.ORDGDIDX LEFT JOIN (
                     SELECT A.IDX, COUNT(B.ORGIDX) AS FILECOUNT
                     FROM T_INQUIRY A LEFT JOIN T_FILE B ON A.IDX = B.ORGIDX AND IMGTYPE = 'IGT098'
                     GROUP BY A.IDX
                 ) D ON A.IDX = D.IDX LEFT JOIN T_GOODS E ON B.GOODSNO = E.GOODSNO
                 WHERE A.SITEID = #{siteid}
                   AND ISREPLY = 'F'
                   AND ISTRASH = 'F'
                <if test='userno !=null and userno !="" '>
                    AND A.DEALERNO = #{userno}
                </if>
             )A INNER JOIN (
            SELECT
                1 AS IDX
                 , COUNT(*) AS GOODSQNA
            FROM T_GOODS_QNA
            WHERE SITEID = #{siteid}
              AND ISREPLY = 'F'
              AND ISTRASH = 'F'
            <if test='userno !=null and userno !="" '>
                AND DEALERNO = #{userno}
            </if>
        )B ON A.IDX = B.IDX INNER JOIN (
            SELECT
                1 AS IDX
                , COUNT(*) AS ASINQUIRY
            FROM T_ASINQUIRY
            WHERE SITEID = #{siteid}
            AND ISTRASH = 'F'
            AND ISREPLY = 'F'
            AND ASSTATUS = 'AST001'
            <if test='userno !=null and userno !="" '>
                AND ISPASS = 'T'
                AND DEALERNO = #{userno}
            </if>
        )C ON A.IDX = C.IDX
    </select>
    	
</mapper>
